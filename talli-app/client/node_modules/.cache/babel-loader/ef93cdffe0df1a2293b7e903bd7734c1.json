{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/NewEventForm.js\";\nimport React, { Component } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase';\n\nvar NewEventForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewEventForm, _Component);\n\n  function NewEventForm(props) {\n    var _this;\n\n    _classCallCheck(this, NewEventForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewEventForm).call(this, props));\n\n    _this.AddEntries = function (event) {\n      event.preventDefault();\n      var item = _this.state.eventData;\n\n      if (!item.id) {\n        item.id = Math.floor(Math.random() * 10000 + 1);\n      }\n\n      var googleId = _this.props.user.googleId;\n      var ref = firebase.database().ref('event');\n      ref.once('value', function (snapshot) {\n        var idExists = false;\n        snapshot.forEach(function (childSnapshot) {\n          if (childSnapshot.key === item.id) {\n            idExists = true;\n          }\n        });\n\n        while (idExists === true) {\n          idExists = false;\n          item.id = Math.floor(Math.random() * 10000 + 1); // eslint-disable-next-line\n\n          snapshot.forEach(function (childSnapshot) {\n            if (childSnapshot.key === item.id) {\n              idExists = true;\n            }\n          });\n        }\n\n        ref.child(item.id).set({\n          'organizer': googleId\n        });\n        var itemsRef = firebase.database().ref(\"organizer/\".concat(googleId, \"/event/\").concat(item.id));\n        item.startDate = item.startDate.toISOString();\n        item.endDate = item.endDate.toISOString();\n\n        if (item.automate) {\n          item.startVote = item.startVote.toISOString();\n          item.endVote = item.endVote.toISOString();\n        } else {\n          item.startVote = 'none';\n          item.endVote = 'none';\n        }\n\n        itemsRef.child('eventData').set(item);\n\n        _this.props.setEvent(item.id);\n\n        _this.props.handler(_this.props.orgViews.ADD);\n      });\n    };\n\n    _this.toggleAutomation = function () {\n      var oldData = _this.state.eventData;\n      oldData.automate = !_this.state.eventData.automate;\n\n      _this.setState({\n        eventData: oldData\n      });\n    };\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.eventData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          eventData: oldData\n        });\n      };\n    };\n\n    _this.handleDateChange = function (field) {\n      return function (date) {\n        var oldData = _this.state.eventData;\n        oldData[field] = date;\n\n        _this.setState({\n          eventData: oldData\n        });\n      };\n    };\n\n    _this.cancelAddition = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.state = {\n      eventData: {\n        name: '',\n        id: '',\n        location: '',\n        startDate: new Date(),\n        endDate: new Date(),\n        automate: false,\n        sheetURL: '',\n        startVote: new Date(),\n        endVote: new Date(),\n        weights: {\n          first: 3,\n          second: 2,\n          third: 1\n        }\n      }\n    };\n    return _this;\n  } // Sends form data to Firebase and navigates to the next page\n\n\n  _createClass(NewEventForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"newEventForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Create a new event\"), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.AddEntries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Event Details\"), React.createElement(TextField, {\n        required: true,\n        label: \"Event Name\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.name,\n        onChange: this.handleEventChange('name'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"ID (auto if blank)\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.id,\n        onChange: this.handleEventChange('id'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Location\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.location,\n        onChange: this.handleEventChange('location'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        required: true,\n        label: \"Start Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startDate,\n        onChange: this.handleDateChange('startDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        required: true,\n        label: \"End Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endDate,\n        onChange: this.handleDateChange('endDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.eventData.automate,\n          onChange: function onChange() {\n            return _this2.toggleAutomation();\n          },\n          value: this.state.eventData.automate,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }),\n        label: \"Automate Voting Time Period?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), this.state.eventData.automate && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Start Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startVote,\n        onChange: this.handleDateChange('startVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"End Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endVote,\n        onChange: this.handleDateChange('endVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.cancelAddition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }]);\n\n  return NewEventForm;\n}(Component);\n\nexport { NewEventForm as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/NewEventForm.js"],"names":["React","Component","DateFnsUtils","MuiPickersUtilsProvider","DateTimePicker","DatePicker","Typography","TextField","InputAdornment","Button","FormControlLabel","Switch","CalendarIcon","firebase","NewEventForm","props","AddEntries","event","preventDefault","item","state","eventData","id","Math","floor","random","googleId","user","ref","database","once","snapshot","idExists","forEach","childSnapshot","key","child","set","itemsRef","startDate","toISOString","endDate","automate","startVote","endVote","setEvent","handler","orgViews","ADD","toggleAutomation","oldData","setState","handleEventChange","field","target","value","handleDateChange","date","cancelAddition","MAIN","name","location","Date","sheetURL","weights","first","second","third","shrink","startAdornment"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,UAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,UAAlD,QAAoE,qBAApE;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgDC,MAAhD,EAAwDC,gBAAxD,EAA0EC,MAA1E,QAAwF,mBAAxF;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qCAAP;AACA,OAAO,kCAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAuBnBC,UAvBmB,GAuBN,UAACC,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,SAAxB;;AACA,UAAI,CAACF,IAAI,CAACG,EAAV,EAAc;AACVH,QAAAA,IAAI,CAACG,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAAjB,GAA0B,CAArC,CAAV;AACH;;AACD,UAAMC,QAAQ,GAAG,MAAKX,KAAL,CAAWY,IAAX,CAAgBD,QAAjC;AAEA,UAAME,GAAG,GAAGf,QAAQ,CAACgB,QAAT,GAAoBD,GAApB,CAAwB,OAAxB,CAAZ;AACAA,MAAAA,GAAG,CAACE,IAAJ,CAAS,OAAT,EAAkB,UAACC,QAAD,EAAc;AAC5B,YAAIC,QAAQ,GAAG,KAAf;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,aAAD,EAAmB;AAChC,cAAIA,aAAa,CAACC,GAAd,KAAsBhB,IAAI,CAACG,EAA/B,EAAmC;AAC/BU,YAAAA,QAAQ,GAAG,IAAX;AACH;AACJ,SAJD;;AAKA,eAAOA,QAAQ,KAAK,IAApB,EAA0B;AACtBA,UAAAA,QAAQ,GAAG,KAAX;AACAb,UAAAA,IAAI,CAACG,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAAjB,GAA0B,CAArC,CAAV,CAFsB,CAGtB;;AACAM,UAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,aAAD,EAAmB;AAChC,gBAAIA,aAAa,CAACC,GAAd,KAAsBhB,IAAI,CAACG,EAA/B,EAAmC;AAC/BU,cAAAA,QAAQ,GAAG,IAAX;AACH;AACJ,WAJD;AAKH;;AAEDJ,QAAAA,GAAG,CAACQ,KAAJ,CAAUjB,IAAI,CAACG,EAAf,EAAmBe,GAAnB,CAAuB;AAAE,uBAAaX;AAAf,SAAvB;AAEA,YAAMY,QAAQ,GAAGzB,QAAQ,CAACgB,QAAT,GAAoBD,GAApB,qBAAqCF,QAArC,oBAAuDP,IAAI,CAACG,EAA5D,EAAjB;AACAH,QAAAA,IAAI,CAACoB,SAAL,GAAiBpB,IAAI,CAACoB,SAAL,CAAeC,WAAf,EAAjB;AACArB,QAAAA,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACsB,OAAL,CAAaD,WAAb,EAAf;;AACA,YAAIrB,IAAI,CAACuB,QAAT,EAAmB;AACfvB,UAAAA,IAAI,CAACwB,SAAL,GAAiBxB,IAAI,CAACwB,SAAL,CAAeH,WAAf,EAAjB;AACArB,UAAAA,IAAI,CAACyB,OAAL,GAAezB,IAAI,CAACyB,OAAL,CAAaJ,WAAb,EAAf;AACH,SAHD,MAGO;AACHrB,UAAAA,IAAI,CAACwB,SAAL,GAAiB,MAAjB;AACAxB,UAAAA,IAAI,CAACyB,OAAL,GAAe,MAAf;AACH;;AACDN,QAAAA,QAAQ,CAACF,KAAT,CAAe,WAAf,EAA4BC,GAA5B,CAAgClB,IAAhC;;AACA,cAAKJ,KAAL,CAAW8B,QAAX,CAAoB1B,IAAI,CAACG,EAAzB;;AACA,cAAKP,KAAL,CAAW+B,OAAX,CAAmB,MAAK/B,KAAL,CAAWgC,QAAX,CAAoBC,GAAvC;AACH,OAjCD;AAkCH,KAlEkB;;AAAA,UAoEnBC,gBApEmB,GAoEA,YAAM;AACrB,UAAMC,OAAO,GAAG,MAAK9B,KAAL,CAAWC,SAA3B;AACA6B,MAAAA,OAAO,CAACR,QAAR,GAAmB,CAAC,MAAKtB,KAAL,CAAWC,SAAX,CAAqBqB,QAAzC;;AACA,YAAKS,QAAL,CAAc;AACV9B,QAAAA,SAAS,EAAE6B;AADD,OAAd;AAGH,KA1EkB;;AAAA,UA4EnBE,iBA5EmB,GA4EC,UAAAC,KAAK;AAAA,aAAI,UAAApC,KAAK,EAAI;AAClC,YAAMiC,OAAO,GAAG,MAAK9B,KAAL,CAAWC,SAA3B;AACA6B,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBpC,KAAK,CAACqC,MAAN,CAAaC,KAA9B;;AACA,cAAKJ,QAAL,CAAc;AACV9B,UAAAA,SAAS,EAAE6B;AADD,SAAd;AAGH,OANwB;AAAA,KA5EN;;AAAA,UAoFnBM,gBApFmB,GAoFA,UAAAH,KAAK;AAAA,aAAI,UAAAI,IAAI,EAAI;AAChC,YAAMP,OAAO,GAAG,MAAK9B,KAAL,CAAWC,SAA3B;AACA6B,QAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBI,IAAjB;;AACA,cAAKN,QAAL,CAAc;AACV9B,UAAAA,SAAS,EAAE6B;AADD,SAAd;AAGH,OANuB;AAAA,KApFL;;AAAA,UA4FnBQ,cA5FmB,GA4FF,YAAM;AACnB,YAAK3C,KAAL,CAAW+B,OAAX,CAAmB,MAAK/B,KAAL,CAAWgC,QAAX,CAAoBY,IAAvC;AACH,KA9FkB;;AAEf,UAAKvC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AACPuC,QAAAA,IAAI,EAAE,EADC;AAEPtC,QAAAA,EAAE,EAAE,EAFG;AAGPuC,QAAAA,QAAQ,EAAE,EAHH;AAIPtB,QAAAA,SAAS,EAAE,IAAIuB,IAAJ,EAJJ;AAKPrB,QAAAA,OAAO,EAAE,IAAIqB,IAAJ,EALF;AAMPpB,QAAAA,QAAQ,EAAE,KANH;AAOPqB,QAAAA,QAAQ,EAAE,EAPH;AAQPpB,QAAAA,SAAS,EAAE,IAAImB,IAAJ,EARJ;AASPlB,QAAAA,OAAO,EAAE,IAAIkB,IAAJ,EATF;AAUPE,QAAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,MAAM,EAAE,CAFH;AAGLC,UAAAA,KAAK,EAAE;AAHF;AAVF;AADF,KAAb;AAFe;AAoBlB,G,CAED;;;;;6BA0ES;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAwC,QAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,KAAKnD,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAC,YAFV;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,SAAX,CAAqBuC,IALhC;AAMI,QAAA,QAAQ,EAAE,KAAKR,iBAAL,CAAuB,MAAvB,CANd;AAOI,QAAA,eAAe,EAAE;AAAEgB,UAAAA,MAAM,EAAE;AAAV,SAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAWI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAC,oBADV;AAEI,QAAA,MAAM,EAAC,OAFX;AAGI,QAAA,SAAS,EAAC,eAHd;AAII,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWC,SAAX,CAAqBC,EAJhC;AAKI,QAAA,QAAQ,EAAE,KAAK8B,iBAAL,CAAuB,IAAvB,CALd;AAMI,QAAA,eAAe,EAAE;AAAEgB,UAAAA,MAAM,EAAE;AAAV,SANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAoBI,oBAAC,SAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWC,SAAX,CAAqBwC,QALhC;AAMI,QAAA,QAAQ,EAAE,KAAKT,iBAAL,CAAuB,UAAvB,CANd;AAOI,QAAA,eAAe,EAAE;AAAEgB,UAAAA,MAAM,EAAE;AAAV,SAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BJ,OA6BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BX,EA8BI,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAElE,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAC,YAFV;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWC,SAAX,CAAqBkB,SALhC;AAMI,QAAA,QAAQ,EAAE,KAAKiB,gBAAL,CAAsB,WAAtB,CANd;AAOI,QAAA,UAAU,EAAE;AACRa,UAAAA,cAAc,EACV,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFI,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAgBI,oBAAC,UAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,SAAS,EAAC,eAJd;AAKI,QAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWC,SAAX,CAAqBoB,OALhC;AAMI,QAAA,QAAQ,EAAE,KAAKe,gBAAL,CAAsB,SAAtB,CANd;AAOI,QAAA,UAAU,EAAE;AACRa,UAAAA,cAAc,EACV,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFI,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CA9BJ,EA8DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9DJ,OA8DW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9DX,EA+DI,oBAAC,gBAAD;AACI,QAAA,OAAO,EACH,oBAAC,MAAD;AACI,UAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWC,SAAX,CAAqBqB,QADlC;AAEI,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACO,gBAAL,EAAN;AAAA,WAFd;AAGI,UAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWC,SAAX,CAAqBqB,QAHhC;AAII,UAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AASI,QAAA,KAAK,EAAC,8BATV;AAUI,QAAA,cAAc,EAAC,OAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DJ,EA2EK,KAAKtB,KAAL,CAAWC,SAAX,CAAqBqB,QAArB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAExC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAC,OADX;AAEI,QAAA,SAAS,EAAC,eAFd;AAGI,QAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWC,SAAX,CAAqBsB,SAHhC;AAII,QAAA,QAAQ,EAAE,KAAKa,gBAAL,CAAsB,WAAtB,CAJd;AAKI,QAAA,UAAU,EAAE;AACRa,UAAAA,cAAc,EACV,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFI,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAeI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfJ,EAgBI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAC,OADX;AAEI,QAAA,SAAS,EAAC,eAFd;AAGI,QAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWC,SAAX,CAAqBuB,OAHhC;AAII,QAAA,QAAQ,EAAE,KAAKY,gBAAL,CAAsB,SAAtB,CAJd;AAKI,QAAA,UAAU,EAAE;AACRa,UAAAA,cAAc,EACV,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFI,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ,CA5ER,EA6GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7GJ,OA6GW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7GX,EA8GI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAE,KAAKX,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9GJ,EAsHI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtHJ,CAFJ,CADJ;AAoIH;;;;EAtOqCzD,S;;SAArBa,Y","sourcesContent":["import React, { Component } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase';\n\nexport default class NewEventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventData: {\n                name: '',\n                id: '',\n                location: '',\n                startDate: new Date(),\n                endDate: new Date(),\n                automate: false,\n                sheetURL: '',\n                startVote: new Date(),\n                endVote: new Date(),\n                weights: {\n                    first: 3,\n                    second: 2,\n                    third: 1\n                }\n            },\n        };\n    }\n\n    // Sends form data to Firebase and navigates to the next page\n    AddEntries = (event) => {\n        event.preventDefault();\n        const item = this.state.eventData;\n        if (!item.id) {\n            item.id = Math.floor((Math.random() * 10000) + 1);\n        }\n        const googleId = this.props.user.googleId;\n\n        const ref = firebase.database().ref('event');\n        ref.once('value', (snapshot) => {\n            let idExists = false;\n            snapshot.forEach((childSnapshot) => {\n                if (childSnapshot.key === item.id) {\n                    idExists = true;\n                }\n            });\n            while (idExists === true) {\n                idExists = false;\n                item.id = Math.floor((Math.random() * 10000) + 1);\n                // eslint-disable-next-line\n                snapshot.forEach((childSnapshot) => {\n                    if (childSnapshot.key === item.id) {\n                        idExists = true;\n                    }\n                });\n            }\n\n            ref.child(item.id).set({ 'organizer': googleId });\n\n            const itemsRef = firebase.database().ref(`organizer/${googleId}/event/${item.id}`);\n            item.startDate = item.startDate.toISOString();\n            item.endDate = item.endDate.toISOString();\n            if (item.automate) {\n                item.startVote = item.startVote.toISOString();\n                item.endVote = item.endVote.toISOString();\n            } else {\n                item.startVote = 'none';\n                item.endVote = 'none';\n            }\n            itemsRef.child('eventData').set(item);\n            this.props.setEvent(item.id);\n            this.props.handler(this.props.orgViews.ADD);\n        });\n    }\n\n    toggleAutomation = () => {\n        const oldData = this.state.eventData;\n        oldData.automate = !this.state.eventData.automate;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.eventData;\n        oldData[field] = event.target.value;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    handleDateChange = field => date => {\n        const oldData = this.state.eventData;\n        oldData[field] = date;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    cancelAddition = () => {\n        this.props.handler(this.props.orgViews.MAIN);\n    }\n\n    render() {\n        return (\n            <div className=\"newEventForm\">\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>Create a new event</Typography>\n                <form className=\"eventForm\" onSubmit={this.AddEntries}>\n                    <Typography variant=\"h6\">Event Details</Typography>\n                    <TextField\n                        required\n                        label=\"Event Name\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.name}\n                        onChange={this.handleEventChange('name')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <TextField\n                        label=\"ID (auto if blank)\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.id}\n                        onChange={this.handleEventChange('id')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Location\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.location}\n                        onChange={this.handleEventChange('location')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br /> <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            label=\"Start Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.startDate}\n                            onChange={this.handleDateChange('startDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <DatePicker\n                            required\n                            label=\"End Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.endDate}\n                            onChange={this.handleDateChange('endDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <br /> <br />\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                checked={this.state.eventData.automate}\n                                onChange={() => this.toggleAutomation()}\n                                value={this.state.eventData.automate}\n                                color=\"primary\"\n                            />\n                        )}\n                        label=\"Automate Voting Time Period?\"\n                        labelPlacement=\"start\"\n                    />\n                    {this.state.eventData.automate && (\n                        <div>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Typography className=\"votePeriodText\">Start Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.startVote}\n                                    onChange={this.handleDateChange('startVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography className=\"votePeriodText\">End Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.endVote}\n                                    onChange={this.handleDateChange('endVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </div>\n                    )}\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={this.cancelAddition}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Next\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}