{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/VoterView/RankingContainer.js\";\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\nimport SliderIcon from '@material-ui/icons/Sort';\nimport PlusIcon from '@material-ui/icons/ControlPoint';\nimport { Typography, Button } from '@material-ui/core';\nimport BellIcon from '@material-ui/icons/NotificationImportant';\nimport firebase from '../../firebase';\nimport '../component_style/RankingContainer.css';\nimport '../component_style/SubmitContainer.css';\nvar DragHandle = SortableHandle(function () {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" \", React.createElement(SliderIcon, {\n    className: \"Sliders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n});\nvar SortableItem = SortableElement(function (_ref) {\n  var value = _ref.value;\n  return React.createElement(\"li\", {\n    className: \"rankings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, value, React.createElement(DragHandle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n});\nvar SortableList = SortableContainer(function (_ref2) {\n  var items = _ref2.items;\n  return React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, items.length !== 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Tap the Plus to add an entry\"), items.map(function (value, index) {\n    return React.createElement(SortableItem, {\n      key: \"item-\".concat(index),\n      index: index,\n      value: value.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }));\n});\n\nvar SortContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SortContainer, _Component);\n\n  function SortContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SortContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SortContainer).call(this, props));\n\n    _this.onSortEnd = function (_ref3) {\n      var oldIndex = _ref3.oldIndex,\n          newIndex = _ref3.newIndex;\n\n      _this.setState({\n        items: arrayMove(_this.state.items, oldIndex, newIndex)\n      });\n    };\n\n    _this.state = {\n      items: [],\n      event: {\n        id: '',\n        name: '',\n        location: '',\n        startDate: '',\n        endDate: '',\n        automate: false,\n        startVote: '',\n        endVote: '',\n        entries: []\n      }\n    };\n    _this.handleAddEvent = _this.handleAddEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitConfirm = _this.submitConfirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SortContainer, [{\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(e) {\n      e.preventDefault();\n      this.props.updateItemsHandler(this.state.items);\n      this.props.handler(this.props.voteViews.ADD);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        items: this.props.rankItems\n      }, function () {\n        firebase.database().ref('/organizer/' + _this2.props.organizer + '/event/').once('value').then(function (snapshot) {\n          var events = snapshot.val();\n\n          if (!events || !events[_this2.props.eventID]) {\n            //error\n            console.log('DEV ERROR');\n          }\n\n          var eventBase = events[_this2.props.eventID]['eventData'];\n          var eventEntries = events[_this2.props.eventID]['entries'];\n          var itemList = _this2.state.items;\n\n          if (_this2.props.entryToAdd && !_this2.state.items.some(function (e) {\n            return e.id === _this2.props.entryToAdd;\n          })) {\n            itemList.push({\n              name: eventEntries[_this2.props.entryToAdd].title,\n              id: _this2.props.entryToAdd\n            });\n          }\n\n          _this2.setState({\n            event: {\n              id: eventBase['id'],\n              name: eventBase['name'],\n              location: eventBase['location'],\n              startDate: eventBase['startDate'],\n              endDate: eventBase['endDate'],\n              automate: eventBase['automate'],\n              startVote: eventBase['startVote'],\n              endVote: eventBase['endVote'],\n              entries: eventEntries\n            },\n            items: itemList\n          }, function () {\n            _this2.props.updateItemsHandler(_this2.state.items);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"submitConfirm\",\n    value: function submitConfirm() {\n      this.props.updateItemsHandler(this.state.items);\n      this.props.handler(this.props.voteViews.CONFIRM);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        className: \"eventName\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.event.name), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(PlusIcon, {\n        className: \"AddEvent\",\n        onClick: this.handleAddEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SortContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(SortableList, {\n        items: this.state.items,\n        onSortEnd: this.onSortEnd,\n        lockAxis: \"y\",\n        useDragHandle: true,\n        helperClass: \"sortHelp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"SubmitDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(BellIcon, {\n        className: \"BellIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SubmitText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Voting closes in xx:xx\"), React.createElement(\"div\", {\n        className: \"buttonDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submitConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" Submit \"))));\n    }\n  }]);\n\n  return SortContainer;\n}(Component);\n\nexport { SortContainer as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/VoterView/RankingContainer.js"],"names":["React","Component","SortableContainer","SortableElement","SortableHandle","arrayMove","SliderIcon","PlusIcon","Typography","Button","BellIcon","firebase","DragHandle","SortableItem","value","SortableList","items","length","map","index","name","SortContainer","props","onSortEnd","oldIndex","newIndex","setState","state","event","id","location","startDate","endDate","automate","startVote","endVote","entries","handleAddEvent","bind","submitConfirm","e","preventDefault","updateItemsHandler","handler","voteViews","ADD","rankItems","database","ref","organizer","once","then","snapshot","events","val","eventID","console","log","eventBase","eventEntries","itemList","entryToAdd","some","push","title","CONFIRM","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\r\nimport SliderIcon from '@material-ui/icons/Sort';\r\nimport PlusIcon from '@material-ui/icons/ControlPoint';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport BellIcon from '@material-ui/icons/NotificationImportant';\r\nimport firebase from '../../firebase';\r\nimport '../component_style/RankingContainer.css';\r\nimport '../component_style/SubmitContainer.css';\r\n\r\nconst DragHandle = SortableHandle(() => <span> <SliderIcon className=\"Sliders\" /></span>);\r\n\r\nconst SortableItem = SortableElement(({ value }) =>\r\n    <li className=\"rankings\">{value}<DragHandle /></li>\r\n);\r\n\r\nconst SortableList = SortableContainer(({ items }) => {\r\n    return (\r\n        <ol>\r\n            {items.length !== 0 ? <div></div> : <div>Tap the Plus to add an entry</div>}\r\n            {items.map((value, index) => (\r\n                <SortableItem key={`item-${index}`} index={index} value={value.name} />\r\n            ))}\r\n        </ol>\r\n    );\r\n});\r\n\r\nexport default class SortContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            event: {\r\n                id: '',\r\n                name: '',\r\n                location: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                automate: false,\r\n                startVote: '',\r\n                endVote: '',\r\n                entries: []\r\n            },\r\n        };\r\n        this.handleAddEvent = this.handleAddEvent.bind(this);\r\n        this.submitConfirm = this.submitConfirm.bind(this);\r\n    }\r\n\r\n    handleAddEvent(e) {\r\n        e.preventDefault();\r\n        this.props.updateItemsHandler(this.state.items);\r\n        this.props.handler(this.props.voteViews.ADD);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            items: this.props.rankItems,\r\n        }, () => {\r\n            firebase.database().ref('/organizer/' + this.props.organizer + '/event/').once('value').then(snapshot => {\r\n                let events = snapshot.val();\r\n                if (!events || !events[this.props.eventID]) {\r\n                    //error\r\n                    console.log('DEV ERROR')\r\n                }\r\n                let eventBase = events[this.props.eventID]['eventData'];\r\n                let eventEntries = events[this.props.eventID]['entries'];\r\n                var itemList = this.state.items;\r\n                if (this.props.entryToAdd && !this.state.items.some(e => e.id === this.props.entryToAdd)) {\r\n                    itemList.push({ name: eventEntries[this.props.entryToAdd].title, id: this.props.entryToAdd });\r\n                }\r\n                this.setState({\r\n                    event: {\r\n                        id: eventBase['id'],\r\n                        name: eventBase['name'],\r\n                        location: eventBase['location'],\r\n                        startDate: eventBase['startDate'],\r\n                        endDate: eventBase['endDate'],\r\n                        automate: eventBase['automate'],\r\n                        startVote: eventBase['startVote'],\r\n                        endVote: eventBase['endVote'],\r\n                        entries: eventEntries\r\n                    },\r\n                    items: itemList\r\n                }, () => { this.props.updateItemsHandler(this.state.items)});\r\n            });\r\n        });\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState({\r\n            items: arrayMove(this.state.items, oldIndex, newIndex),\r\n        });\r\n    };\r\n\r\n    submitConfirm() {\r\n        this.props.updateItemsHandler(this.state.items);\r\n        this.props.handler(this.props.voteViews.CONFIRM);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant='h4' align='center' className=\"eventName\" gutterBottom>{this.state.event.name}</Typography>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <PlusIcon className=\"AddEvent\" onClick={this.handleAddEvent} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"SortContainer\">\r\n                        <SortableList items={this.state.items} onSortEnd={this.onSortEnd} lockAxis='y'\r\n                            useDragHandle={true} helperClass='sortHelp' />\r\n                    </div>\r\n                </div>\r\n                <div className='SubmitDiv'>\r\n                    <BellIcon className='BellIcon' />\r\n                    <div className='SubmitText'>\r\n                        {/* TODO: have this generated off of the end time of the event\r\n                */}\r\n                        Voting closes in xx:xx\r\n                </div>\r\n                    <div className='buttonDiv'>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.submitConfirm}> Submit </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}