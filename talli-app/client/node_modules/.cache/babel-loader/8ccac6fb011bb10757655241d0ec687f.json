{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/ConfirmFinalize.js\";\nimport React, { Component } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }));\n}\n\nvar ConfirmFinalize =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConfirmFinalize, _Component);\n\n  function ConfirmFinalize(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmFinalize);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfirmFinalize).call(this, props));\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleConfirm = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.handler();\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(ConfirmFinalize, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Finalize Results\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Finalizing results will send all ballots (including manually entered and unsubmitted ballots) to the linked google sheet as well as close the event voting if it is currently open. If you only wanted to sync submitted entries, please cancel this dialog and choose the \\\"Sync Entries\\\" option.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"Are you sure you want to finalize results?\"), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Go Back\"), React.createElement(Button, {\n        onClick: this.handleConfirm,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Confirm\"))));\n    }\n  }]);\n\n  return ConfirmFinalize;\n}(Component);\n\nexport { ConfirmFinalize as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/ConfirmFinalize.js"],"names":["React","Component","Dialog","DialogTitle","DialogContent","DialogActions","Button","Slide","Transition","props","ConfirmFinalize","handleOpen","setState","open","handleClose","handleConfirm","handler","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,MAA5D,EAAoEC,KAApE,QAAiF,mBAAjF;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;IAEoBC,e;;;;;AACjB,2BAAYD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UAOnBE,UAPmB,GAON,YAAM;AACf,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KATkB;;AAAA,UAWnBC,WAXmB,GAWL,YAAM;AAChB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAbkB;;AAAA,UAenBE,aAfmB,GAeH,YAAM;AAClB,YAAKH,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;;AACA,YAAKJ,KAAL,CAAWO,OAAX;AACH,KAlBkB;;AAEf,UAAKC,KAAL,GAAa;AACTJ,MAAAA,IAAI,EAAE;AADG,KAAb;AAFe;AAKlB;;;;6BAeQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWJ,IAAzB;AAA+B,QAAA,mBAAmB,EAAEL,UAApD;AAAgE,QAAA,OAAO,EAAE,KAAKM,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gTAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,+CAJJ,EAYI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAZJ,CADJ,CADJ;AAqBH;;;;EA3CwCd,S;;SAAxBS,e","sourcesContent":["import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Slide } from '@material-ui/core';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport default class ConfirmFinalize extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleConfirm = () => {\r\n        this.setState({ open: false });\r\n        this.props.handler();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                        Finalize Results\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        Finalizing results will send all ballots (including manually entered and unsubmitted ballots)\r\n                        to the linked google sheet as well as close the event voting if it is currently open.\r\n                        If you only wanted to sync submitted entries, please cancel this dialog and choose the\r\n                        &quot;Sync Entries&quot; option.\r\n                        <br />\r\n                        Are you sure you want to finalize results?\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose}>Go Back</Button>\r\n                        <Button onClick={this.handleConfirm} color=\"primary\">Confirm</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}