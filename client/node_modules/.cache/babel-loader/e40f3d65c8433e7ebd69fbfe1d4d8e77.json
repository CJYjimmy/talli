{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/EditWeights.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from '@material-ui/core';\nimport openSocket from 'socket.io-client';\n\nvar config = require('../../../config.json');\n\nvar socket = openSocket(config.Global.devMode ? \"http://localhost:\".concat(config.Global.serverPort) : \"\".concat(config.Global.sslEnabled ? \"https\" : \"http\", \"://\").concat(config.Global.hostURL));\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n} // maybe for future, have it load current weights into text fields\n\n\nvar EditWeights =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditWeights, _Component);\n\n  function EditWeights(props) {\n    var _this;\n\n    _classCallCheck(this, EditWeights);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditWeights).call(this, props));\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleSave = function () {\n      var weights = _this.state.weights;\n\n      if (weights[0] !== '' && weights[1] !== '' && weights[2] !== '') {\n        socket.emit('send_weights', {\n          weights: _this.state.weights,\n          eventId: _this.props.event.id,\n          googleId: _this.props.googleId\n        });\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleWeightChange = function (index) {\n      return function (event) {\n        var curr = _this.state.weights;\n        curr[index] = event.target.value;\n\n        _this.setState({\n          weights: curr\n        });\n      };\n    };\n\n    _this.state = {\n      open: false,\n      weights: ['', '', '']\n    };\n    return _this;\n  }\n\n  _createClass(EditWeights, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      if (this.props.event.weights) {\n        this.setState({\n          open: this.state.open,\n          weights: [this.props.event.weights.first, this.props.event.weights.second, this.props.event.weights.third]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return !this.state.open ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Edit Weights \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.weights.map(function (weight, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          label: \"Rank \".concat(index + 1),\n          margin: \"dense\",\n          value: weight,\n          onChange: _this2.handleWeightChange(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        onClick: this.handleSave,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return EditWeights;\n}(Component);\n\nexport { EditWeights as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/EditWeights.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","openSocket","config","require","socket","Global","devMode","serverPort","sslEnabled","hostURL","Transition","props","EditWeights","handleOpen","setState","open","handleClose","handleSave","weights","state","emit","eventId","event","id","googleId","handleWeightChange","index","curr","target","value","first","second","third","map","weight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from '@material-ui/core';\nimport openSocket from 'socket.io-client';\n\nconst config = require('../../../config.json');\n\nconst socket = openSocket(\n    (config.Global.devMode ?\n        `http://localhost:${config.Global.serverPort}` :\n        `${(config.Global.sslEnabled ? \"https\" : \"http\")}://${config.Global.hostURL}`\n    )\n);\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n// maybe for future, have it load current weights into text fields\nexport default class EditWeights extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            weights: [\n                '', '', ''\n            ]\n        };\n    }\n\n    componentWillReceiveProps() {\n        if (this.props.event.weights) {\n            this.setState({\n                open: this.state.open,\n                weights: [\n                    this.props.event.weights.first,\n                    this.props.event.weights.second,\n                    this.props.event.weights.third\n                ]\n            });\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    handleSave = () => {\n        const weights = this.state.weights;\n        if (weights[0] !== '' && weights[1] !== '' && weights[2] !== '') {\n            socket.emit('send_weights', {\n                weights: this.state.weights,\n                eventId: this.props.event.id,\n                googleId: this.props.googleId\n            });\n        }\n        this.setState({ open: false });\n    }\n\n    handleWeightChange = index => event => {\n        const curr = this.state.weights;\n        curr[index] = event.target.value;\n        this.setState({\n            weights: curr\n        });\n    }\n\n    render() {\n        return !this.state.open ? null : (\n            <div>\n                <Dialog\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> Edit Weights </DialogTitle>\n                    <DialogContent>\n                        {\n                            this.state.weights.map((weight, index) => {\n                                return (\n                                    <div>\n                                        <TextField\n                                            label={`Rank ${(index + 1)}`}\n                                            margin=\"dense\"\n                                            value={weight}\n                                            onChange={this.handleWeightChange(index)}\n                                        />\n                                    </div>\n                                );\n                            })\n                        }\n                    </DialogContent>\n                    <DialogActions>\n                        {/* Not sure how to make the close button align to the left */}\n                        <Button onClick={this.handleClose} color=\"default\">Close</Button>\n                        <Button onClick={this.handleSave} color=\"primary\">Save</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}