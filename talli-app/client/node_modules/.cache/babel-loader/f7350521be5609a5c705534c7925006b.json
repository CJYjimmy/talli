{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js\";\nimport React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport '../component_style/ViewEvent.css';\nimport firebase from '../../firebase';\nimport ExportOrgData from './Dialogs/ExportOrgData';\nimport EditEntries from './Dialogs/EditEntries';\nimport EditEvent from './Dialogs/EditEvent';\nimport EditVoting from './Dialogs/EditVoting';\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\n\nvar ViewEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ViewEvent, _React$Component);\n\n  function ViewEvent(props) {\n    var _this;\n\n    _classCallCheck(this, ViewEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewEvent).call(this, props));\n\n    _this.handleExport = function () {\n      _this.exportChild.current.handleOpen();\n    };\n\n    _this.handleEntryEdit = function () {\n      _this.entryChild.current.handleOpen();\n    };\n\n    _this.handleEventEdit = function () {\n      _this.eventChild.current.handleOpen();\n    };\n\n    _this.handleOpenCloseVoting = function () {\n      _this.votingChild.current.handleOpen();\n    };\n\n    _this.goBack = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.state = {\n      view: 'main',\n      event: {\n        id: '',\n        name: '',\n        location: '',\n        startDate: '',\n        endDate: '',\n        automate: false,\n        startVote: '',\n        endVote: ''\n      }\n    };\n    _this.exportChild = React.createRef();\n    _this.eventChild = React.createRef();\n    _this.entryChild = React.createRef();\n    _this.votingChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(ViewEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = firebase.database().ref('event');\n      query.on('value', function (snapshot) {\n        var events = snapshot.val();\n        var key = events[_this2.props.curEvent]['eventData'];\n        var tempkey;\n\n        for (var k in key) {\n          tempkey = k;\n        }\n\n        var eventBase = events[_this2.props.curEvent].eventData[tempkey];\n\n        _this2.setState({\n          event: {\n            id: eventBase['id'],\n            name: eventBase['name'],\n            location: eventBase['location'],\n            startDate: eventBase['startDate'],\n            endDate: eventBase['endDate'],\n            automate: eventBase['automate'],\n            startVote: eventBase['startVote'],\n            endVote: eventBase['endVote']\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ExportOrgData, {\n        ref: this.exportChild,\n        event: this.state.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(EditEntries, {\n        ref: this.entryChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(EditEvent, {\n        ref: this.eventChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(EditVoting, {\n        ref: this.votingChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.event.name), React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleExport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Export Event & Entry QR Codes\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleEntryEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"View/Add/Edit Entries\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleEventEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"View/Edit Event Details\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleOpenCloseVoting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Open/Close Voting\")), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.goBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return ViewEvent;\n}(React.Component);\n\nexport { ViewEvent as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js"],"names":["React","Typography","Button","firebase","ExportOrgData","EditEntries","EditEvent","EditVoting","ViewEvent","props","handleExport","exportChild","current","handleOpen","handleEntryEdit","entryChild","handleEventEdit","eventChild","handleOpenCloseVoting","votingChild","goBack","handler","orgViews","MAIN","state","view","event","id","name","location","startDate","endDate","automate","startVote","endVote","createRef","query","database","ref","on","snapshot","events","val","key","curEvent","tempkey","k","eventBase","eventData","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport '../component_style/ViewEvent.css';\r\nimport firebase from '../../firebase';\r\nimport ExportOrgData from './Dialogs/ExportOrgData';\r\nimport EditEntries from './Dialogs/EditEntries';\r\nimport EditEvent from './Dialogs/EditEvent';\r\nimport EditVoting from './Dialogs/EditVoting';\r\n\r\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\r\nexport default class ViewEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            view: 'main',\r\n            event: {\r\n                id: '', \r\n                name: '', \r\n                location:'', \r\n                startDate: '', \r\n                endDate: '', \r\n                automate: false, \r\n                startVote: '', \r\n                endVote: ''\r\n            },\r\n        };\r\n        this.exportChild = React.createRef();\r\n        this.eventChild = React.createRef();\r\n        this.entryChild = React.createRef();\r\n        this.votingChild = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var query = firebase.database().ref('event');\r\n        query.on('value', (snapshot) => {\r\n            let events = snapshot.val();\r\n            var key = events[this.props.curEvent]['eventData']\r\n            var tempkey;\r\n            for (var k in key) {\r\n                tempkey = k;\r\n            }\r\n            let eventBase = events[this.props.curEvent].eventData[tempkey];\r\n            this.setState({ \r\n                event: {\r\n                    id: eventBase['id'],\r\n                    name: eventBase['name'],\r\n                    location: eventBase['location'],\r\n                    startDate: eventBase['startDate'],\r\n                    endDate: eventBase['endDate'],\r\n                    automate: eventBase['automate'],\r\n                    startVote: eventBase['startVote'],\r\n                    endVote: eventBase['endVote']\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleExport = () => {\r\n        this.exportChild.current.handleOpen();\r\n    }\r\n\r\n    handleEntryEdit = () => {\r\n        this.entryChild.current.handleOpen();\r\n    }\r\n\r\n    handleEventEdit = () => {\r\n        this.eventChild.current.handleOpen();\r\n    }\r\n\r\n    handleOpenCloseVoting = () => {\r\n        this.votingChild.current.handleOpen();\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.handler(this.props.orgViews.MAIN);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <ExportOrgData ref={this.exportChild} event={this.state.event}/>\r\n                <EditEntries ref={this.entryChild}/>\r\n                <EditEvent ref={this.eventChild}/>\r\n                <EditVoting ref={this.votingChild}/>\r\n                <Typography variant=\"h3\" align='center' gutterBottom>{this.state.event.name}</Typography>\r\n                <div className=\"options\">\r\n                    <Button className=\"button1\" variant=\"contained\" color=\"primary\">Manage Event</Button>\r\n                    <Button className=\"button1\" variant=\"contained\">View Results</Button>\r\n                </div>\r\n                <div className=\"box\">\r\n                    <Button className=\"listButtons\" onClick={this.handleExport}>Export Event & Entry QR Codes</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleEntryEdit}>View/Add/Edit Entries</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleEventEdit}>View/Edit Event Details</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleOpenCloseVoting}>Open/Close Voting</Button>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttons\"\r\n                    type=\"button\"\r\n                    onClick={this.goBack} >\r\n                    Back\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}