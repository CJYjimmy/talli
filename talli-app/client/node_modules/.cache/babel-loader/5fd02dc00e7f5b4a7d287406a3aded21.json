{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/AddEntryOrg.js\";\nimport React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport NewEntryForm from './NewEntryForm';\nimport '../component_style/Organizer.css';\n/**\r\n * Entry Add/Remove, unimplemented\r\n * TODO: read existing events from database and render\r\n */\n\nvar AddEntryOrg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddEntryOrg, _React$Component);\n\n  function AddEntryOrg() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddEntryOrg);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddEntryOrg)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      entries: []\n    };\n\n    _this.addEntry = function () {\n      var newEntries = _this.state.entries.slice();\n\n      newEntries.push({\n        title: '',\n        id: '',\n        presenters: '',\n        dates: ''\n      });\n\n      _this.setState({\n        entries: newEntries\n      });\n    };\n\n    _this.cancelAddition = function () {\n      _this.props.handler(_this.props.orgViews.MAIN); // delete the event and any entries added to the current event\n\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEntryOrg, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var entries = this.state.entries;\n      return React.createElement(\"div\", {\n        className: \"addEntryForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Add Entries\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        name: \"import_entries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Import Entries\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"text\",\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Click here for import requirements.\"), React.createElement(Divider, {\n        variant: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"entryForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, entries.map(function (val, idx) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(NewEntryForm, {\n          addEntry: _this2.addEntry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }), React.createElement(AddCircleIcon, {\n        color: \"primary\",\n        id: \"entryIcon\",\n        onClick: this.addEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.cancelAddition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return AddEntryOrg;\n}(React.Component);\n\nexport { AddEntryOrg as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/AddEntryOrg.js"],"names":["React","Typography","Button","Divider","AddCircleIcon","NewEntryForm","AddEntryOrg","state","entries","addEntry","newEntries","slice","push","title","id","presenters","dates","setState","cancelAddition","props","handler","orgViews","MAIN","map","val","idx","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport NewEntryForm from './NewEntryForm';\r\nimport '../component_style/Organizer.css';\r\n\r\n/**\r\n * Entry Add/Remove, unimplemented\r\n * TODO: read existing events from database and render\r\n */\r\nexport default class AddEntryOrg extends React.Component {\r\n    state = {\r\n        entries: [],\r\n    }\r\n\r\n    addEntry = () => {\r\n        const newEntries = this.state.entries.slice();\r\n        newEntries.push({\r\n            title: '',\r\n            id: '',\r\n            presenters: '',\r\n            dates: ''\r\n        });\r\n        this.setState({ entries: newEntries });\r\n    }\r\n\r\n    cancelAddition = () => {\r\n        this.props.handler(this.props.orgViews.MAIN);\r\n        // delete the event and any entries added to the current event\r\n    }\r\n\r\n    render() {\r\n        let { entries } = this.state;\r\n        return (\r\n            <div className='addEntryForm'>\r\n                <Typography variant='h4' align='center' gutterBottom>Add Entries</Typography>\r\n                <Button variant=\"contained\" className='buttons' name='import_entries'>Import Entries</Button>\r\n                <br/>\r\n                <Button variant=\"text\" className='buttons'>Click here for import requirements.</Button>\r\n                <Divider variant=\"middle\" />\r\n                <form className=\"entryForm\">\r\n                    {\r\n                        entries.map((val, idx) => {\r\n                            return (\r\n                                <div>\r\n                                    <NewEntryForm addEntry={this.addEntry} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <AddCircleIcon color='primary' id='entryIcon' onClick={this.addEntry}/>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"buttons\"\r\n                        type=\"button\"\r\n                        onClick={this.cancelAddition}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\" className='buttons'>Done</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}