{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/AddBallot.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, Button } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport firebase from '../../../firebase';\nimport AddBallotEntry from './AddBallotEntry';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n\nvar AddVotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddVotes, _Component);\n\n  function AddVotes(props) {\n    var _this;\n\n    _classCallCheck(this, AddVotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddVotes).call(this, props));\n\n    _this.addEntry = function () {\n      var rank = 0;\n\n      for (var i = 0; i < _this.state.entries.length; i++) {\n        var item = _this.state.entries[i];\n\n        if (item.show) {\n          rank++;\n        }\n      }\n\n      rank++;\n\n      var newEntries = _this.state.entries.slice();\n\n      newEntries.push({\n        show: true,\n        id: '',\n        rank: rank\n      });\n\n      _this.setState({\n        entries: newEntries\n      });\n    };\n\n    _this.submitVote = function (event) {\n      event.preventDefault();\n      var hasError = false;\n      var numOfEntries = 0;\n\n      for (var i = 0; i < _this.state.entries.length; i++) {\n        var checkItem = _this.state.entries[i];\n\n        if (checkItem.show) {\n          if (checkItem.duplicate || !checkItem.valid) {\n            hasError = true;\n          }\n\n          numOfEntries++;\n        }\n      }\n\n      if (!hasError && numOfEntries > 0) {\n        var ballotsRef = firebase.database().ref(\"event/\".concat(_this.props.event.id, \"/manual\"));\n        ballotsRef.once('value', function (snapshot) {\n          var ballots = snapshot.val();\n          var index;\n\n          if (ballots === null) {\n            index = '0';\n          } else {\n            index = \"\".concat(ballots.length);\n          }\n\n          var entries = {};\n          var i = 1;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this.state.entries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var entry = _step.value;\n              var entryData = _this.props.event.entries[entry.id];\n              entries[i] = entryData;\n              i++;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          ballotsRef.child(index).set(entries);\n\n          _this.setState({\n            entries: []\n          });\n\n          _this.handleClose();\n        });\n      }\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        entries: []\n      });\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false,\n      entries: []\n    };\n    return _this;\n  }\n\n  _createClass(AddVotes, [{\n    key: \"updateEntry\",\n    value: function updateEntry(status, idx) {\n      var updateEntries = this.state.entries;\n      updateEntries[idx] = status;\n\n      for (var i = 0; i < updateEntries.length; i++) {\n        var item = updateEntries[i];\n\n        if (item.show && i !== idx) {\n          updateEntries[idx].duplicate = item.id === updateEntries[idx].id;\n        }\n      }\n\n      if (!updateEntries[idx].show) {\n        for (var _i = idx + 1; _i < this.state.entries.length; _i++) {\n          if (updateEntries[_i].show) {\n            updateEntries[_i].rank -= 1;\n          }\n        }\n      }\n\n      this.setState({\n        entries: updateEntries\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var entries = this.state.entries;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" Add Vote \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Click the circle-add button to fill in each entry.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"addEntryForm\",\n        onSubmit: this.submitVote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, entries.map(function (val, idx) {\n        return React.createElement(\"div\", {\n          key: val.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(AddBallotEntry, {\n          event: _this2.props.event,\n          googleId: _this2.props.googleId,\n          entriesInVote: entries,\n          updateEntry: function updateEntry(status, index) {\n            return _this2.updateEntry(status, index);\n          },\n          index: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(AddCircleIcon, {\n        color: \"primary\",\n        id: \"entryIcon\",\n        onClick: this.addEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Cancel\"), '  ', React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return AddVotes;\n}(Component);\n\nexport { AddVotes as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/AddBallot.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","Button","AddCircleIcon","firebase","AddBallotEntry","Transition","props","AddVotes","addEntry","rank","i","state","entries","length","item","show","newEntries","slice","push","id","setState","submitVote","event","preventDefault","hasError","numOfEntries","checkItem","duplicate","valid","ballotsRef","database","ref","once","snapshot","ballots","val","index","entry","entryData","child","set","handleClose","handleOpen","open","status","idx","updateEntries","map","googleId","updateEntry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, Button } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport firebase from '../../../firebase';\nimport AddBallotEntry from './AddBallotEntry';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport default class AddVotes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            entries: [],\n        };\n    }\n\n    addEntry = () => {\n        let rank = 0;\n        for (let i = 0; i < this.state.entries.length; i++) {\n            const item = this.state.entries[i];\n            if (item.show) {\n                rank++;\n            }\n        }\n        rank++;\n        const newEntries = this.state.entries.slice();\n        newEntries.push({\n            show: true,\n            id: '',\n            rank,\n        });\n        this.setState({ entries: newEntries });\n    }\n\n    submitVote = event => {\n        event.preventDefault();\n        let hasError = false;\n        let numOfEntries = 0;\n        for (let i = 0; i < this.state.entries.length; i++) {\n            const checkItem = this.state.entries[i];\n            if (checkItem.show) {\n                if (checkItem.duplicate || !checkItem.valid) {\n                    hasError = true;\n                }\n                numOfEntries++;\n            }\n        }\n        if (!hasError && numOfEntries > 0) {\n            const ballotsRef = firebase.database().ref(`event/${this.props.event.id}/manual`);\n            ballotsRef.once('value', (snapshot) => {\n                const ballots = snapshot.val();\n                let index;\n                if (ballots === null) {\n                    index = '0';\n                } else {\n                    index = `${ballots.length}`;\n                }\n                const entries = {};\n                let i = 1;\n                for (let entry of this.state.entries) {\n                    const entryData = this.props.event.entries[entry.id];\n                    entries[i] = entryData;\n                    i++;\n                }\n\n                ballotsRef.child(index).set(entries);\n\n                this.setState({ entries: [] });\n                this.handleClose();\n            });\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleClose = () => {\n        this.setState({ entries: [] });\n        this.setState({ open: false });\n    }\n\n    updateEntry(status, idx) {\n        const updateEntries = this.state.entries;\n        updateEntries[idx] = status;\n        for (let i = 0; i < updateEntries.length; i++) {\n            const item = updateEntries[i];\n            if (item.show && i !== idx) {\n                updateEntries[idx].duplicate = item.id === updateEntries[idx].id;\n            }\n        }\n        if (!updateEntries[idx].show) {\n            for (let i = idx + 1; i < this.state.entries.length; i++) {\n                if (updateEntries[i].show) {\n                    updateEntries[i].rank -= 1;\n                }\n            }\n        }\n        this.setState({ entries: updateEntries });\n    }\n\n    render() {\n        const { entries } = this.state;\n        return (\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle> Add Vote </DialogTitle>\n                    <DialogContent>\n                        Click the circle-add button to fill in each entry.\n                        <br />\n                        <form className=\"addEntryForm\" onSubmit={this.submitVote}>\n                            {\n                                entries.map((val, idx) => {\n                                    return (\n                                        <div key={val.id}>\n                                            <AddBallotEntry\n                                                event={this.props.event}\n                                                googleId={this.props.googleId}\n                                                entriesInVote={entries}\n                                                updateEntry={(status, index) => this.updateEntry(status, index)}\n                                                index={idx}\n                                            />\n                                        </div>\n                                    );\n                                })\n                            }\n                            <br />\n                            <AddCircleIcon color=\"primary\" id=\"entryIcon\" onClick={this.addEntry} />\n                            <br />\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                className=\"buttons\"\n                                type=\"button\"\n                                onClick={this.handleClose}\n                            >\n                                Cancel\n                            </Button>\n                            {'  '}\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"buttons\">Submit</Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}