{"ast":null,"code":"import _defineProperty from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/NewEventForm.js\";\nimport React from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nvar blankEvent = {\n  name: '',\n  id: '',\n  location: '',\n  startDate: Date('0000-01-01T00:00:00'),\n  endDate: Date('0000-01-01T00:00:00'),\n  automate: false,\n  startVote: Date('0000-01-01T00:00:00'),\n  endVote: Date('0000-01-01T00:00:00')\n};\n\nvar NewEventForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewEventForm, _React$Component);\n\n  function NewEventForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewEventForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewEventForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      eventData: blankEvent\n    };\n\n    _this.toggleTime = function () {\n      _this.setState({\n        eventData: {\n          automate: !_this.state.eventData.automate\n        }\n      });\n    };\n\n    _this.handleEventChange = function (name) {\n      return function (event) {\n        _this.setState({\n          eventData: _defineProperty({}, name, event.target.value)\n        });\n      };\n    };\n\n    _this.handleDateChange = function (name) {\n      return function (date) {\n        _this.setState({\n          eventData: _defineProperty({}, name, date)\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(NewEventForm, [{\n    key: \"AddEntries\",\n    value: function AddEntries() {\n      this.props.handler(this.props.orgViews.ADD);\n      /* unimplemented */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /**\n       * TODO: Cleanup this div and replace <input/>'s\n       */\n      return React.createElement(\"div\", {\n        className: \"newEventForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Create a new event\"), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: function onSubmit() {\n          return _this2.AddEntries();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Event Details\"), React.createElement(TextField, {\n        required: true,\n        label: \"Event Name\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.name,\n        onChange: this.handleEventChange('name'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"ID (auto if blank)\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.id,\n        onChange: this.handleEventChange('id'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Location\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.location,\n        onChange: this.handleEventChange('location'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"Start Date\",\n        value: this.state.eventData.startDate,\n        onChange: this.handleDateChange('startDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"End Date\",\n        value: this.state.eventData.endDate,\n        onChange: this.handleDateChange('endDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.eventData.automate,\n          onChange: function onChange() {\n            return _this2.toggleTime();\n          },\n          value: \"automate\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }),\n        label: \"Automate Voting Time Period?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.state.eventData.automate && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Start Voting:\"), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"Date\",\n        value: this.state.eventData.startVote,\n        onChange: this.handleDateChange('startVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(TimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"Time\",\n        value: this.state.eventData.startVote,\n        onChange: this.handleDateChange('startVote'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"End Voting:\"), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"Date\",\n        value: this.state.eventData.endVote,\n        onChange: this.handleDateChange('endVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(TimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        label: \"Time\",\n        value: this.state.eventData.endVote,\n        onChange: this.handleDateChange('endVote'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }]);\n\n  return NewEventForm;\n}(React.Component);\n\nexport { NewEventForm as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/NewEventForm.js"],"names":["React","DateFnsUtils","Typography","TextField","InputAdornment","Button","FormControlLabel","Switch","MuiPickersUtilsProvider","TimePicker","DatePicker","CalendarIcon","blankEvent","name","id","location","startDate","Date","endDate","automate","startVote","endVote","NewEventForm","state","eventData","toggleTime","setState","handleEventChange","event","target","value","handleDateChange","date","props","handler","orgViews","ADD","AddEntries","shrink","startAdornment","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\n\nvar blankEvent = {\n    name: '',\n    id: '',\n    location: '',\n    startDate: Date('0000-01-01T00:00:00'),\n    endDate: Date('0000-01-01T00:00:00'),\n    automate: false,\n    startVote: Date('0000-01-01T00:00:00'),\n    endVote: Date('0000-01-01T00:00:00'),\n}\n\nexport default class NewEventForm extends React.Component {\n    state = {\n        eventData: blankEvent\n    }\n\n    toggleTime = () => {\n        this.setState({\n            eventData: { automate: !this.state.eventData.automate, }\n        });\n    }\n\n    AddEntries() {\n        this.props.handler(this.props.orgViews.ADD);\n        /* unimplemented */\n    }\n\n    handleEventChange = name => event => {\n        this.setState({\n            eventData: { [name]: event.target.value, }\n        });\n    };\n\n    handleDateChange = name => date => {\n        this.setState({\n            eventData: { [name]: date, }\n        });\n    }\n\n    render() {\n        /**\n         * TODO: Cleanup this div and replace <input/>'s\n         */\n        return (\n            <div className='newEventForm'>\n                <Typography variant='h4' align='center' gutterBottom>Create a new event</Typography>\n                <form className='eventForm' onSubmit={() => this.AddEntries()}>\n                    <Typography variant='h6'>Event Details</Typography>\n                    <TextField\n                        required\n                        label=\"Event Name\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.name}\n                        onChange={this.handleEventChange('name')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <TextField\n                        label=\"ID (auto if blank)\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.id}\n                        onChange={this.handleEventChange('id')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Location\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.location}\n                        onChange={this.handleEventChange('location')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br /> <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            label=\"Start Date\"\n                            value={this.state.eventData.startDate}\n                            onChange={this.handleDateChange('startDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            label=\"End Date\"\n                            value={this.state.eventData.endDate}\n                            onChange={this.handleDateChange('endDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <br /> <br />\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={this.state.eventData.automate}\n                                onChange={() => this.toggleTime()}\n                                value=\"automate\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Automate Voting Time Period?\"\n                        labelPlacement=\"start\"\n                    />\n                    {this.state.eventData.automate &&\n                        <div>\n                            <Typography className=\"votePeriodText\">Start Voting:</Typography>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DatePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    label=\"Date\"\n                                    value={this.state.eventData.startVote}\n                                    onChange={this.handleDateChange('startVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <TimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    label=\"Time\"\n                                    value={this.state.eventData.startVote}\n                                    onChange={this.handleDateChange('startVote')}\n                                />\n                            </MuiPickersUtilsProvider>\n                            <Typography className=\"votePeriodText\">End Voting:</Typography>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <DatePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    label=\"Date\"\n                                    value={this.state.eventData.endVote}\n                                    onChange={this.handleDateChange('endVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <TimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    label=\"Time\"\n                                    value={this.state.eventData.endVote}\n                                    onChange={this.handleDateChange('endVote')}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </div>\n                    }\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                    >\n                        Next\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}