{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/VoterView/JoinEvent.js\";\nimport React from 'react';\nimport QrReader from 'react-qr-reader';\nimport { TextField, Typography, Button } from '@material-ui/core';\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\nimport '../component_style/Voter.css';\nimport firebase from '../../firebase';\nimport { getCookie } from '../../cookies';\nimport BlockJoin from './Dialogs/BlockJoin';\nimport EarlyJoin from './Dialogs/EarlyJoin';\nimport ClosedJoin from './Dialogs/ClosedJoin';\nimport RejoinClosed from './Dialogs/RejoinClosed';\nimport NotFound from './Dialogs/NotFound';\nimport RejoinEvent from './Dialogs/RejoinEvent';\n\nvar config = require('../../config.json');\n/**\n * Join Event via QR Code or UID\n */\n\n\nvar JoinEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JoinEvent, _React$Component);\n\n  function JoinEvent(props) {\n    var _this;\n\n    _classCallCheck(this, JoinEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JoinEvent).call(this, props));\n    /** ::STATE INFO::\n     *  eventID:        Event's UID, obtained either from QRcode or textfield\n     *  idFieldValue:   The value currently in the textbox\n     */\n\n    _this.requestConfirm = function () {\n      firebase.database().ref('event/').once('value').then(function (snap) {\n        var orgID = snap.val()[_this.state.eventID];\n\n        _this.setState({\n          organizerID: orgID ? orgID.organizer : ''\n        }, function () {\n          if (_this.state.organizerID && _this.state.organizerID !== '') {\n            firebase.database().ref(\"/organizer/\".concat(_this.state.organizerID, \"/event/\").concat(_this.state.eventID)).once('value').then(function (snapshot) {\n              var event = snapshot.val();\n\n              if (!event) {\n                // Event not found\n                _this.notFoundChild.current.handleOpen();\n\n                return;\n              }\n\n              _this.setState({\n                eventName: event.eventData.name\n              }, function () {\n                // Checks whether an even has not started or has ended\n                var votingState = _this.getVotingState(event.eventData);\n\n                if (votingState === 'before') {\n                  _this.earlyJoinChild.current.handleOpen();\n\n                  return;\n                }\n\n                if (votingState === 'closed') {\n                  _this.closedJoinChild.current.handleOpen();\n\n                  return;\n                } // Checks whether the user has submitted for this event previously\n\n\n                var cookie = getCookie('UserID');\n                firebase.database().ref(\"attendees/\".concat(cookie, \"/pastEvents\")).once('value').then(function (pastSnap) {\n                  var pastEvents = pastSnap.val();\n                  var check = false;\n\n                  for (var c in pastEvents) {\n                    if (c === _this.state.eventID) {\n                      check = true;\n\n                      _this.blockChild.current.handleOpen();\n\n                      return;\n                    }\n                  }\n\n                  if (!check) {\n                    _this.hasRankings(_this.state.eventID).then(function (shouldRejoin) {\n                      if (shouldRejoin) {\n                        _this.rejoinChild.current.handleOpen();\n                      } else {\n                        _this.confirmChild.current.handleOpen();\n                      }\n                    });\n                  }\n                });\n              });\n            });\n          } else {\n            // Event not found\n            _this.notFoundChild.current.handleOpen();\n          }\n        });\n      });\n    };\n\n    _this.dialogOpen = function () {\n      if (_this.rejoinChild.current.state.open || _this.notFoundChild.current.state.open || _this.confirmChild.current.state.open || _this.blockChild.current.state.open || _this.earlyJoinChild.current.state.open || _this.closedJoinChild.current.state.open || _this.rejoinClosedChild.current.state.open) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.state = {\n      eventID: '',\n      idFieldValue: '',\n      eventName: '',\n      organizerID: '',\n      entryToAdd: ''\n    };\n    _this.handleScan = _this.handleScan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleText = _this.handleText.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleJoinEvent = _this.handleJoinEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyPress = _this.keyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRejoinEvent = _this.handleRejoinEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirmChild = React.createRef();\n    _this.earlyJoinChild = React.createRef();\n    _this.closedJoinChild = React.createRef();\n    _this.blockChild = React.createRef();\n    _this.notFoundChild = React.createRef();\n    _this.rejoinChild = React.createRef();\n    _this.rejoinClosedChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(JoinEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookie = getCookie('UserID');\n      firebase.database().ref('/').once('value').then(function (snapshot) {\n        var root = snapshot.val();\n\n        if (root.attendees) {\n          var allCookies = root.attendees[cookie];\n          var entryToAdd = '';\n\n          if (allCookies && allCookies.currentEvent) {\n            var orgID = root.event[allCookies.currentEvent];\n\n            _this2.setState({\n              organizerID: orgID ? orgID.organizer : ''\n            }, function () {\n              if (_this2.state.organizerID && _this2.state.organizerID !== '') {\n                var event = root.organizer[_this2.state.organizerID].event[allCookies.currentEvent];\n\n                if (event) {\n                  if (event.entries && _this2.props.scanEntry && event.entries[_this2.props.scanEntry]) {\n                    entryToAdd = _this2.props.scanEntry;\n                  }\n\n                  _this2.setState({\n                    eventName: event.eventData.name,\n                    eventID: allCookies.currentEvent,\n                    entryToAdd: entryToAdd\n                  }, function () {\n                    var votingState = _this2.getVotingState(event.eventData);\n\n                    if (votingState === 'closed') {\n                      _this2.rejoinClosedChild.current.handleOpen();\n\n                      firebase.database().ref(\"attendees/\".concat(cookie, \"/currentEvent\")).set('');\n                      return;\n                    }\n\n                    _this2.rejoinChild.current.handleOpen();\n                  });\n                }\n              }\n            });\n          } else if (_this2.props.scanID) {\n            if (_this2.props.scanEntry) {\n              entryToAdd = _this2.props.scanEntry;\n            }\n\n            _this2.setState({\n              eventID: _this2.props.scanID,\n              entryToAdd: entryToAdd\n            });\n\n            _this2.requestConfirm();\n          }\n        } else {\n          firebase.database().ref(\"attendees/\".concat(cookie, \"/currentEvent\")).set('');\n        }\n      });\n    }\n  }, {\n    key: \"getVotingState\",\n    value: function getVotingState(event) {\n      var date = new Date().toISOString();\n\n      if (event.startVote === 'none' || event.startVote > date) {\n        // not open yet\n        return 'before';\n      } else if (event.endVote === 'none' || event.endVote > date) {\n        // open\n        return 'open';\n      }\n\n      return 'closed';\n    }\n  }, {\n    key: \"handleScan\",\n    value: function handleScan(data) {\n      if (!this.dialogOpen() && data && data.toLowerCase().includes(\"\".concat(config.Global.hostURL, \"/vote/\").toLowerCase())) {\n        var entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\n        var id = '';\n\n        if (entrySlash !== -1) {\n          id = data.substring(data.indexOf('/vote/') + 6, entrySlash).replace(/\\W/g, '');\n        } else {\n          id = data.substring(data.indexOf('/vote/') + 6).replace(/\\W/g, '');\n        }\n\n        var entryToAdd = this.props.scanEntry ? this.props.scanEntry : '';\n        this.setState({\n          eventID: id,\n          entryToAdd: entryToAdd\n        });\n        this.requestConfirm();\n      }\n    }\n  }, {\n    key: \"handleText\",\n    value: function handleText() {\n      var _this3 = this;\n\n      this.setState({\n        eventID: this.state.idFieldValue\n      }, function () {\n        _this3.requestConfirm();\n      });\n    }\n  }, {\n    key: \"hasRankings\",\n    value: function hasRankings(eventId) {\n      var cookie = getCookie('UserID');\n      return firebase.database().ref(\"/event/\".concat(eventId)).once('value').then(function (snap) {\n        var event = snap.val();\n\n        if (event && event.attendees && event.attendees[cookie]) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  }, {\n    key: \"handleRejoinEvent\",\n    value: function handleRejoinEvent() {\n      var _this4 = this;\n\n      var cookie = getCookie('UserID');\n      firebase.database().ref(\"event/\".concat(this.state.eventID, \"/attendees/\").concat(cookie, \"/rankings/\")).once('value').then(function (rankSnap) {\n        var rankings = rankSnap.val();\n        var items = [];\n\n        if (rankings) {\n          for (var item in rankings) {\n            if (item) {\n              // console.log(item);\n              items[item - 1] = rankings[item].id;\n            }\n          }\n        }\n\n        firebase.database().ref('organizer/').once('value').then(function (snapshot) {\n          var organizer = snapshot.val();\n          var event = organizer[_this4.state.organizerID].event[_this4.state.eventID];\n          var itemList = [];\n\n          for (var i = 0; i < items.length; i++) {\n            var entry = event.entries[items[i]];\n\n            if (entry) {\n              itemList.push({\n                name: entry.title,\n                id: entry.id.toString(),\n                presenters: entry.presenters,\n                entry_dates: entry.entry_dates,\n                info_url: entry.info_url,\n                showInfo: false\n              });\n            }\n          }\n\n          _this4.props.updateItemsHandler(itemList);\n        }).then(function () {\n          _this4.handleJoinEvent();\n        });\n      });\n    }\n  }, {\n    key: \"handleJoinEvent\",\n    value: function handleJoinEvent() {\n      var cookie = getCookie('UserID');\n      var itemsRef = firebase.database().ref(\"attendees/\".concat(cookie));\n      itemsRef.child('currentEvent').set(this.state.eventID);\n      this.props.handler(this.props.voteViews.RANK, this.state.eventID, this.state.organizerID, this.state.entryToAdd);\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      console.log(err);\n    }\n  }, {\n    key: \"keyPress\",\n    value: function keyPress(e) {\n      if (e.key === 'Enter') {\n        this.handleText();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(RejoinEvent, {\n        entryName: this.state.eventName,\n        ref: this.rejoinChild,\n        handler: this.handleRejoinEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(NotFound, {\n        ref: this.notFoundChild,\n        idType: \"Event\",\n        id: this.state.eventID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(EntryConfirmation, {\n        entryName: this.state.eventName,\n        ref: this.confirmChild,\n        handler: this.handleJoinEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(BlockJoin, {\n        entryName: this.state.eventName,\n        idType: \"Event\",\n        ref: this.blockChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(EarlyJoin, {\n        eventName: this.state.eventName,\n        ref: this.earlyJoinChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(ClosedJoin, {\n        eventName: this.state.eventName,\n        ref: this.closedJoinChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(RejoinClosed, {\n        eventName: this.state.eventName,\n        ref: this.rejoinClosedChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(QrReader, {\n        delay: 300,\n        onScan: this.handleScan,\n        onError: this.handleError,\n        style: {\n          width: '80%',\n          margin: '20px auto 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        className: \"QRText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Scan QR Code or enter Event ID:\"), React.createElement(\"div\", {\n        className: \"textField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-dense\",\n        label: \"Event ID\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: this.state.idFieldValue,\n        onKeyDown: this.keyPress,\n        onChange: function onChange(e) {\n          return _this5.setState({\n            idFieldValue: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"homeButton\",\n        onClick: this.handleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Join\")));\n    }\n  }]);\n\n  return JoinEvent;\n}(React.Component);\n\nexport { JoinEvent as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/VoterView/JoinEvent.js"],"names":["React","QrReader","TextField","Typography","Button","EntryConfirmation","firebase","getCookie","BlockJoin","EarlyJoin","ClosedJoin","RejoinClosed","NotFound","RejoinEvent","config","require","JoinEvent","props","requestConfirm","database","ref","once","then","snap","orgID","val","state","eventID","setState","organizerID","organizer","snapshot","event","notFoundChild","current","handleOpen","eventName","eventData","name","votingState","getVotingState","earlyJoinChild","closedJoinChild","cookie","pastSnap","pastEvents","check","c","blockChild","hasRankings","shouldRejoin","rejoinChild","confirmChild","dialogOpen","open","rejoinClosedChild","idFieldValue","entryToAdd","handleScan","bind","handleError","handleText","handleJoinEvent","keyPress","handleRejoinEvent","createRef","root","attendees","allCookies","currentEvent","entries","scanEntry","set","scanID","date","Date","toISOString","startVote","endVote","data","toLowerCase","includes","Global","hostURL","entrySlash","indexOf","id","substring","replace","eventId","rankSnap","rankings","items","item","itemList","i","length","entry","push","title","toString","presenters","entry_dates","info_url","showInfo","updateItemsHandler","itemsRef","child","handler","voteViews","RANK","err","console","log","e","key","width","margin","target","value","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;AAEA;;;;;IAGqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA;;;;;AAFe,UAuFnBC,cAvFmB,GAuFF,YAAM;AACnBZ,MAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,EAAkCC,IAAlC,CAAuC,OAAvC,EAAgDC,IAAhD,CAAqD,UAACC,IAAD,EAAU;AAC3D,YAAMC,KAAK,GAAGD,IAAI,CAACE,GAAL,GAAW,MAAKC,KAAL,CAAWC,OAAtB,CAAd;;AACA,cAAKC,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAGL,KAAK,GAAGA,KAAK,CAACM,SAAT,GAAqB;AAA1C,SAAd,EAA+D,YAAM;AACjE,cAAI,MAAKJ,KAAL,CAAWG,WAAX,IAA0B,MAAKH,KAAL,CAAWG,WAAX,KAA2B,EAAzD,EAA6D;AACzDvB,YAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,sBAAsC,MAAKM,KAAL,CAAWG,WAAjD,oBAAsE,MAAKH,KAAL,CAAWC,OAAjF,GAA4FN,IAA5F,CAAiG,OAAjG,EAA0GC,IAA1G,CAA+G,UAAAS,QAAQ,EAAI;AACvH,kBAAMC,KAAK,GAAGD,QAAQ,CAACN,GAAT,EAAd;;AACA,kBAAI,CAACO,KAAL,EAAY;AACR;AACA,sBAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,UAA3B;;AACA;AACH;;AAED,oBAAKP,QAAL,CAAc;AAAEQ,gBAAAA,SAAS,EAAEJ,KAAK,CAACK,SAAN,CAAgBC;AAA7B,eAAd,EAAmD,YAAM;AACrD;AACA,oBAAMC,WAAW,GAAG,MAAKC,cAAL,CAAoBR,KAAK,CAACK,SAA1B,CAApB;;AACA,oBAAIE,WAAW,KAAK,QAApB,EAA8B;AAC1B,wBAAKE,cAAL,CAAoBP,OAApB,CAA4BC,UAA5B;;AACA;AACH;;AAED,oBAAII,WAAW,KAAK,QAApB,EAA8B;AAC1B,wBAAKG,eAAL,CAAqBR,OAArB,CAA6BC,UAA7B;;AACA;AACH,iBAXoD,CAYrD;;;AACA,oBAAMQ,MAAM,GAAGpC,SAAS,CAAC,QAAD,CAAxB;AACAD,gBAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,qBAAqCuB,MAArC,kBAA0DtB,IAA1D,CAA+D,OAA/D,EAAwEC,IAAxE,CAA6E,UAAAsB,QAAQ,EAAI;AACrF,sBAAMC,UAAU,GAAGD,QAAQ,CAACnB,GAAT,EAAnB;AACA,sBAAIqB,KAAK,GAAG,KAAZ;;AACA,uBAAK,IAAIC,CAAT,IAAcF,UAAd,EAA0B;AACtB,wBAAIE,CAAC,KAAK,MAAKrB,KAAL,CAAWC,OAArB,EAA8B;AAC1BmB,sBAAAA,KAAK,GAAG,IAAR;;AACA,4BAAKE,UAAL,CAAgBd,OAAhB,CAAwBC,UAAxB;;AACA;AACH;AACJ;;AACD,sBAAI,CAACW,KAAL,EAAY;AACR,0BAAKG,WAAL,CAAiB,MAAKvB,KAAL,CAAWC,OAA5B,EAAqCL,IAArC,CAA0C,UAAC4B,YAAD,EAAkB;AACxD,0BAAIA,YAAJ,EAAkB;AACd,8BAAKC,WAAL,CAAiBjB,OAAjB,CAAyBC,UAAzB;AACH,uBAFD,MAEO;AACH,8BAAKiB,YAAL,CAAkBlB,OAAlB,CAA0BC,UAA1B;AACH;AACJ,qBAND;AAOH;AACJ,iBAnBD;AAoBH,eAlCD;AAmCH,aA3CD;AA4CH,WA7CD,MA6CO;AACH;AACA,kBAAKF,aAAL,CAAmBC,OAAnB,CAA2BC,UAA3B;AACH;AACJ,SAlDD;AAmDH,OArDD;AAsDH,KA9IkB;;AAAA,UA4OnBkB,UA5OmB,GA4ON,YAAM;AACf,UAAI,MAAKF,WAAL,CAAiBjB,OAAjB,CAAyBR,KAAzB,CAA+B4B,IAA/B,IAAuC,MAAKrB,aAAL,CAAmBC,OAAnB,CAA2BR,KAA3B,CAAiC4B,IAAxE,IACG,MAAKF,YAAL,CAAkBlB,OAAlB,CAA0BR,KAA1B,CAAgC4B,IADnC,IAC2C,MAAKN,UAAL,CAAgBd,OAAhB,CAAwBR,KAAxB,CAA8B4B,IADzE,IAEG,MAAKb,cAAL,CAAoBP,OAApB,CAA4BR,KAA5B,CAAkC4B,IAFrC,IAE6C,MAAKZ,eAAL,CAAqBR,OAArB,CAA6BR,KAA7B,CAAmC4B,IAFhF,IAGG,MAAKC,iBAAL,CAAuBrB,OAAvB,CAA+BR,KAA/B,CAAqC4B,IAH5C,EAGkD;AAC9C,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH,KApPkB;;AAMf,UAAK5B,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAET6B,MAAAA,YAAY,EAAE,EAFL;AAGTpB,MAAAA,SAAS,EAAE,EAHF;AAITP,MAAAA,WAAW,EAAE,EAJJ;AAKT4B,MAAAA,UAAU,EAAE;AALH,KAAb;AAOA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACA,UAAKG,eAAL,GAAuB,MAAKA,eAAL,CAAqBH,IAArB,uDAAvB;AACA,UAAKI,QAAL,GAAgB,MAAKA,QAAL,CAAcJ,IAAd,uDAAhB;AACA,UAAKK,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBL,IAAvB,uDAAzB;AAEA,UAAKP,YAAL,GAAoBpD,KAAK,CAACiE,SAAN,EAApB;AACA,UAAKxB,cAAL,GAAsBzC,KAAK,CAACiE,SAAN,EAAtB;AACA,UAAKvB,eAAL,GAAuB1C,KAAK,CAACiE,SAAN,EAAvB;AACA,UAAKjB,UAAL,GAAkBhD,KAAK,CAACiE,SAAN,EAAlB;AACA,UAAKhC,aAAL,GAAqBjC,KAAK,CAACiE,SAAN,EAArB;AACA,UAAKd,WAAL,GAAmBnD,KAAK,CAACiE,SAAN,EAAnB;AACA,UAAKV,iBAAL,GAAyBvD,KAAK,CAACiE,SAAN,EAAzB;AA1Be;AA2BlB;;;;wCAEmB;AAAA;;AAChB,UAAMtB,MAAM,GAAGpC,SAAS,CAAC,QAAD,CAAxB;AACAD,MAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,IAA7B,CAAkC,OAAlC,EAA2CC,IAA3C,CAAgD,UAAAS,QAAQ,EAAI;AACxD,YAAMmC,IAAI,GAAGnC,QAAQ,CAACN,GAAT,EAAb;;AACA,YAAIyC,IAAI,CAACC,SAAT,EAAoB;AAChB,cAAMC,UAAU,GAAGF,IAAI,CAACC,SAAL,CAAexB,MAAf,CAAnB;AACA,cAAIc,UAAU,GAAG,EAAjB;;AACA,cAAIW,UAAU,IAAIA,UAAU,CAACC,YAA7B,EAA2C;AACvC,gBAAM7C,KAAK,GAAG0C,IAAI,CAAClC,KAAL,CAAWoC,UAAU,CAACC,YAAtB,CAAd;;AACA,YAAA,MAAI,CAACzC,QAAL,CAAc;AAAEC,cAAAA,WAAW,EAAGL,KAAK,GAAGA,KAAK,CAACM,SAAT,GAAqB;AAA1C,aAAd,EAA+D,YAAM;AACjE,kBAAI,MAAI,CAACJ,KAAL,CAAWG,WAAX,IAA0B,MAAI,CAACH,KAAL,CAAWG,WAAX,KAA2B,EAAzD,EAA6D;AACzD,oBAAMG,KAAK,GAAGkC,IAAI,CAACpC,SAAL,CAAe,MAAI,CAACJ,KAAL,CAAWG,WAA1B,EAAuCG,KAAvC,CAA6CoC,UAAU,CAACC,YAAxD,CAAd;;AACA,oBAAIrC,KAAJ,EAAW;AACP,sBAAIA,KAAK,CAACsC,OAAN,IAAiB,MAAI,CAACrD,KAAL,CAAWsD,SAA5B,IAAyCvC,KAAK,CAACsC,OAAN,CAAc,MAAI,CAACrD,KAAL,CAAWsD,SAAzB,CAA7C,EAAkF;AAC9Ed,oBAAAA,UAAU,GAAG,MAAI,CAACxC,KAAL,CAAWsD,SAAxB;AACH;;AACD,kBAAA,MAAI,CAAC3C,QAAL,CAAc;AACVQ,oBAAAA,SAAS,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,IADjB;AAEVX,oBAAAA,OAAO,EAAEyC,UAAU,CAACC,YAFV;AAGVZ,oBAAAA,UAAU,EAAVA;AAHU,mBAAd,EAIG,YAAM;AACL,wBAAMlB,WAAW,GAAG,MAAI,CAACC,cAAL,CAAoBR,KAAK,CAACK,SAA1B,CAApB;;AACA,wBAAIE,WAAW,KAAK,QAApB,EAA8B;AAC1B,sBAAA,MAAI,CAACgB,iBAAL,CAAuBrB,OAAvB,CAA+BC,UAA/B;;AACA7B,sBAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,qBAAqCuB,MAArC,oBAA4D6B,GAA5D,CAAgE,EAAhE;AACA;AACH;;AACD,oBAAA,MAAI,CAACrB,WAAL,CAAiBjB,OAAjB,CAAyBC,UAAzB;AACH,mBAZD;AAaH;AACJ;AACJ,aAtBD;AAuBH,WAzBD,MAyBO,IAAI,MAAI,CAAClB,KAAL,CAAWwD,MAAf,EAAuB;AAC1B,gBAAI,MAAI,CAACxD,KAAL,CAAWsD,SAAf,EAA0B;AACtBd,cAAAA,UAAU,GAAG,MAAI,CAACxC,KAAL,CAAWsD,SAAxB;AACH;;AACD,YAAA,MAAI,CAAC3C,QAAL,CAAc;AACVD,cAAAA,OAAO,EAAE,MAAI,CAACV,KAAL,CAAWwD,MADV;AAEVhB,cAAAA,UAAU,EAAVA;AAFU,aAAd;;AAIA,YAAA,MAAI,CAACvC,cAAL;AACH;AACJ,SAtCD,MAsCO;AACHZ,UAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,qBAAqCuB,MAArC,oBAA4D6B,GAA5D,CAAgE,EAAhE;AACH;AACJ,OA3CD;AA4CH;;;mCAEcxC,K,EAAO;AAClB,UAAM0C,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;;AACA,UAAI5C,KAAK,CAAC6C,SAAN,KAAoB,MAApB,IAA+B7C,KAAK,CAAC6C,SAAN,GAAkBH,IAArD,EAA4D;AAAE;AAC1D,eAAO,QAAP;AACH,OAFD,MAEO,IAAI1C,KAAK,CAAC8C,OAAN,KAAkB,MAAlB,IAA6B9C,KAAK,CAAC8C,OAAN,GAAgBJ,IAAjD,EAAwD;AAAE;AAC7D,eAAO,MAAP;AACH;;AACD,aAAO,QAAP;AACH;;;+BA2DUK,I,EAAM;AACb,UAAI,CAAC,KAAK1B,UAAL,EAAD,IAAsB0B,IAAtB,IAA8BA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4B,UAAInE,MAAM,CAACoE,MAAP,CAAcC,OAAlB,YAAmCH,WAAnC,EAA5B,CAAlC,EAAiH;AAC7G,YAAMI,UAAU,GAAGL,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkBN,IAAI,CAACM,OAAL,CAAa,QAAb,IAAyB,CAA3C,CAAnB;AACA,YAAIC,EAAE,GAAG,EAAT;;AACA,YAAIF,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBE,UAAAA,EAAE,GAAGP,IAAI,CAACQ,SAAL,CAAeR,IAAI,CAACM,OAAL,CAAa,QAAb,IAAyB,CAAxC,EAA2CD,UAA3C,EAAuDI,OAAvD,CAA+D,KAA/D,EAAsE,EAAtE,CAAL;AACH,SAFD,MAEO;AACHF,UAAAA,EAAE,GAAGP,IAAI,CAACQ,SAAL,CAAeR,IAAI,CAACM,OAAL,CAAa,QAAb,IAAyB,CAAxC,EAA2CG,OAA3C,CAAmD,KAAnD,EAA0D,EAA1D,CAAL;AACH;;AACD,YAAM/B,UAAU,GAAG,KAAKxC,KAAL,CAAWsD,SAAX,GAAuB,KAAKtD,KAAL,CAAWsD,SAAlC,GAA8C,EAAjE;AACA,aAAK3C,QAAL,CAAc;AACVD,UAAAA,OAAO,EAAE2D,EADC;AAEV7B,UAAAA,UAAU,EAAVA;AAFU,SAAd;AAIA,aAAKvC,cAAL;AACH;AACJ;;;iCAEY;AAAA;;AACT,WAAKU,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAW8B;AADV,OAAd,EAEG,YAAM;AACL,QAAA,MAAI,CAACtC,cAAL;AACH,OAJD;AAKH;;;gCAEWuE,O,EAAS;AACjB,UAAM9C,MAAM,GAAGpC,SAAS,CAAC,QAAD,CAAxB;AACA,aAAOD,QAAQ,CAACa,QAAT,GAAoBC,GAApB,kBAAkCqE,OAAlC,GAA6CpE,IAA7C,CAAkD,OAAlD,EAA2DC,IAA3D,CAAgE,UAAAC,IAAI,EAAI;AAC3E,YAAMS,KAAK,GAAGT,IAAI,CAACE,GAAL,EAAd;;AACA,YAAIO,KAAK,IAAIA,KAAK,CAACmC,SAAf,IAA4BnC,KAAK,CAACmC,SAAN,CAAgBxB,MAAhB,CAAhC,EAAyD;AACrD,iBAAO,IAAP;AACH;;AACD,eAAO,KAAP;AACH,OANM,CAAP;AAOH;;;wCAEmB;AAAA;;AAChB,UAAMA,MAAM,GAAGpC,SAAS,CAAC,QAAD,CAAxB;AACAD,MAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,iBAAiC,KAAKM,KAAL,CAAWC,OAA5C,wBAAiEgB,MAAjE,iBAAqFtB,IAArF,CAA0F,OAA1F,EAAmGC,IAAnG,CAAwG,UAAAoE,QAAQ,EAAI;AAChH,YAAMC,QAAQ,GAAGD,QAAQ,CAACjE,GAAT,EAAjB;AACA,YAAMmE,KAAK,GAAG,EAAd;;AACA,YAAID,QAAJ,EAAc;AACV,eAAK,IAAME,IAAX,IAAmBF,QAAnB,EAA6B;AACzB,gBAAIE,IAAJ,EAAU;AACN;AACAD,cAAAA,KAAK,CAACC,IAAI,GAAG,CAAR,CAAL,GAAkBF,QAAQ,CAACE,IAAD,CAAR,CAAeP,EAAjC;AACH;AACJ;AACJ;;AACDhF,QAAAA,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,YAAxB,EAAsCC,IAAtC,CAA2C,OAA3C,EAAoDC,IAApD,CAAyD,UAAAS,QAAQ,EAAI;AACjE,cAAMD,SAAS,GAAGC,QAAQ,CAACN,GAAT,EAAlB;AACA,cAAMO,KAAK,GAAGF,SAAS,CAAC,MAAI,CAACJ,KAAL,CAAWG,WAAZ,CAAT,CAAkCG,KAAlC,CAAwC,MAAI,CAACN,KAAL,CAAWC,OAAnD,CAAd;AACA,cAAMmE,QAAQ,GAAG,EAAjB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,gBAAME,KAAK,GAAGjE,KAAK,CAACsC,OAAN,CAAcsB,KAAK,CAACG,CAAD,CAAnB,CAAd;;AACA,gBAAIE,KAAJ,EAAW;AACPH,cAAAA,QAAQ,CAACI,IAAT,CAAc;AACV5D,gBAAAA,IAAI,EAAE2D,KAAK,CAACE,KADF;AAEVb,gBAAAA,EAAE,EAAEW,KAAK,CAACX,EAAN,CAASc,QAAT,EAFM;AAGVC,gBAAAA,UAAU,EAAEJ,KAAK,CAACI,UAHR;AAIVC,gBAAAA,WAAW,EAAEL,KAAK,CAACK,WAJT;AAKVC,gBAAAA,QAAQ,EAAEN,KAAK,CAACM,QALN;AAMVC,gBAAAA,QAAQ,EAAE;AANA,eAAd;AAQH;AACJ;;AACD,UAAA,MAAI,CAACvF,KAAL,CAAWwF,kBAAX,CAA8BX,QAA9B;AACH,SAlBD,EAmBKxE,IAnBL,CAmBU,YAAM;AACR,UAAA,MAAI,CAACwC,eAAL;AACH,SArBL;AAsBH,OAjCD;AAkCH;;;sCAEiB;AACd,UAAMnB,MAAM,GAAGpC,SAAS,CAAC,QAAD,CAAxB;AACA,UAAMmG,QAAQ,GAAGpG,QAAQ,CAACa,QAAT,GAAoBC,GAApB,qBAAqCuB,MAArC,EAAjB;AACA+D,MAAAA,QAAQ,CAACC,KAAT,CAAe,cAAf,EAA+BnC,GAA/B,CAAmC,KAAK9C,KAAL,CAAWC,OAA9C;AACA,WAAKV,KAAL,CAAW2F,OAAX,CAAmB,KAAK3F,KAAL,CAAW4F,SAAX,CAAqBC,IAAxC,EAA8C,KAAKpF,KAAL,CAAWC,OAAzD,EAAkE,KAAKD,KAAL,CAAWG,WAA7E,EAA0F,KAAKH,KAAL,CAAW+B,UAArG;AACH;;;gCAEWsD,G,EAAK;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;;6BAEQG,C,EAAG;AACR,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnB,aAAKtD,UAAL;AACH;AACJ;;;6BAYQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE,KAAKnC,KAAL,CAAWU,SAAnC;AAA8C,QAAA,GAAG,EAAE,KAAKe,WAAxD;AAAqE,QAAA,OAAO,EAAE,KAAKa,iBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAK/B,aAApB;AAAmC,QAAA,MAAM,EAAC,OAA1C;AAAkD,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWU,SAAzC;AAAoD,QAAA,GAAG,EAAE,KAAKgB,YAA9D;AAA4E,QAAA,OAAO,EAAE,KAAKU,eAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKpC,KAAL,CAAWU,SAAjC;AAA4C,QAAA,MAAM,EAAC,OAAnD;AAA2D,QAAA,GAAG,EAAE,KAAKY,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWU,SAAjC;AAA4C,QAAA,GAAG,EAAE,KAAKK,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWU,SAAlC;AAA6C,QAAA,GAAG,EAAE,KAAKM,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWU,SAApC;AAA+C,QAAA,GAAG,EAAE,KAAKmB,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,KAAKG,UAAnC;AAA+C,QAAA,OAAO,EAAE,KAAKE,WAA7D;AAA0E,QAAA,KAAK,EAAE;AAAEwD,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CATJ,EAUI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,KAAK,EAAE,KAAK3F,KAAL,CAAW8B,YALtB;AAMI,QAAA,SAAS,EAAE,KAAKO,QANpB;AAOI,QAAA,QAAQ,EAAE,kBAAAmD,CAAC;AAAA,iBAAI,MAAI,CAACtF,QAAL,CAAc;AAAE4B,YAAAA,YAAY,EAAE0D,CAAC,CAACI,MAAF,CAASC;AAAzB,WAAd,CAAJ;AAAA,SAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,EAqBI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAC,YAAtD;AAAmE,QAAA,OAAO,EAAE,KAAK1D,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CArBJ,CADJ;AA6BH;;;;EArRkC7D,KAAK,CAACwH,S;;SAAxBxG,S","sourcesContent":["import React from 'react';\nimport QrReader from 'react-qr-reader';\nimport { TextField, Typography, Button } from '@material-ui/core';\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\nimport '../component_style/Voter.css';\nimport firebase from '../../firebase';\nimport { getCookie } from '../../cookies';\nimport BlockJoin from './Dialogs/BlockJoin';\nimport EarlyJoin from './Dialogs/EarlyJoin';\nimport ClosedJoin from './Dialogs/ClosedJoin';\nimport RejoinClosed from './Dialogs/RejoinClosed';\nimport NotFound from './Dialogs/NotFound';\nimport RejoinEvent from './Dialogs/RejoinEvent';\n\nconst config = require('../../config.json');\n\n/**\n * Join Event via QR Code or UID\n */\nexport default class JoinEvent extends React.Component {\n    constructor(props) {\n        super(props);\n        /** ::STATE INFO::\n         *  eventID:        Event's UID, obtained either from QRcode or textfield\n         *  idFieldValue:   The value currently in the textbox\n         */\n        this.state = {\n            eventID: '',\n            idFieldValue: '',\n            eventName: '',\n            organizerID: '',\n            entryToAdd: '',\n        };\n        this.handleScan = this.handleScan.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.handleText = this.handleText.bind(this);\n        this.handleJoinEvent = this.handleJoinEvent.bind(this);\n        this.keyPress = this.keyPress.bind(this);\n        this.handleRejoinEvent = this.handleRejoinEvent.bind(this);\n\n        this.confirmChild = React.createRef();\n        this.earlyJoinChild = React.createRef();\n        this.closedJoinChild = React.createRef();\n        this.blockChild = React.createRef();\n        this.notFoundChild = React.createRef();\n        this.rejoinChild = React.createRef();\n        this.rejoinClosedChild = React.createRef();\n    }\n\n    componentDidMount() {\n        const cookie = getCookie('UserID');\n        firebase.database().ref('/').once('value').then(snapshot => {\n            const root = snapshot.val();\n            if (root.attendees) {\n                const allCookies = root.attendees[cookie];\n                let entryToAdd = '';\n                if (allCookies && allCookies.currentEvent) {\n                    const orgID = root.event[allCookies.currentEvent];\n                    this.setState({ organizerID: (orgID ? orgID.organizer : '') }, () => {\n                        if (this.state.organizerID && this.state.organizerID !== '') {\n                            const event = root.organizer[this.state.organizerID].event[allCookies.currentEvent];\n                            if (event) {\n                                if (event.entries && this.props.scanEntry && event.entries[this.props.scanEntry]) {\n                                    entryToAdd = this.props.scanEntry;\n                                }\n                                this.setState({\n                                    eventName: event.eventData.name,\n                                    eventID: allCookies.currentEvent,\n                                    entryToAdd,\n                                }, () => {\n                                    const votingState = this.getVotingState(event.eventData);\n                                    if (votingState === 'closed') {\n                                        this.rejoinClosedChild.current.handleOpen();\n                                        firebase.database().ref(`attendees/${cookie}/currentEvent`).set('');\n                                        return;\n                                    }\n                                    this.rejoinChild.current.handleOpen();\n                                });\n                            }\n                        }\n                    });\n                } else if (this.props.scanID) {\n                    if (this.props.scanEntry) {\n                        entryToAdd = this.props.scanEntry;\n                    }\n                    this.setState({\n                        eventID: this.props.scanID,\n                        entryToAdd,\n                    });\n                    this.requestConfirm();\n                }\n            } else {\n                firebase.database().ref(`attendees/${cookie}/currentEvent`).set('');\n            }\n        });\n    }\n\n    getVotingState(event) {\n        const date = new Date().toISOString();\n        if (event.startVote === 'none' || (event.startVote > date)) { // not open yet\n            return 'before';\n        } else if (event.endVote === 'none' || (event.endVote > date)) { // open\n            return 'open';\n        }\n        return 'closed';\n    }\n\n    requestConfirm = () => {\n        firebase.database().ref('event/').once('value').then((snap) => {\n            const orgID = snap.val()[this.state.eventID];\n            this.setState({ organizerID: (orgID ? orgID.organizer : '') }, () => {\n                if (this.state.organizerID && this.state.organizerID !== '') {\n                    firebase.database().ref(`/organizer/${this.state.organizerID}/event/${this.state.eventID}`).once('value').then(snapshot => {\n                        const event = snapshot.val();\n                        if (!event) {\n                            // Event not found\n                            this.notFoundChild.current.handleOpen();\n                            return;\n                        }\n\n                        this.setState({ eventName: event.eventData.name }, () => {\n                            // Checks whether an even has not started or has ended\n                            const votingState = this.getVotingState(event.eventData);\n                            if (votingState === 'before') {\n                                this.earlyJoinChild.current.handleOpen();\n                                return;\n                            }\n\n                            if (votingState === 'closed') {\n                                this.closedJoinChild.current.handleOpen();\n                                return;\n                            }\n                            // Checks whether the user has submitted for this event previously\n                            const cookie = getCookie('UserID');\n                            firebase.database().ref(`attendees/${cookie}/pastEvents`).once('value').then(pastSnap => {\n                                const pastEvents = pastSnap.val();\n                                let check = false;\n                                for (let c in pastEvents) {\n                                    if (c === this.state.eventID) {\n                                        check = true;\n                                        this.blockChild.current.handleOpen();\n                                        return;\n                                    }\n                                }\n                                if (!check) {\n                                    this.hasRankings(this.state.eventID).then((shouldRejoin) => {\n                                        if (shouldRejoin) {\n                                            this.rejoinChild.current.handleOpen();\n                                        } else {\n                                            this.confirmChild.current.handleOpen();\n                                        }\n                                    });\n                                }\n                            });\n                        });\n                    });\n                } else {\n                    // Event not found\n                    this.notFoundChild.current.handleOpen();\n                }\n            });\n        });\n    }\n\n    handleScan(data) {\n        if (!this.dialogOpen() && data && data.toLowerCase().includes((`${config.Global.hostURL}/vote/`).toLowerCase())) {\n            const entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\n            let id = '';\n            if (entrySlash !== -1) {\n                id = data.substring(data.indexOf('/vote/') + 6, entrySlash).replace(/\\W/g, '');\n            } else {\n                id = data.substring(data.indexOf('/vote/') + 6).replace(/\\W/g, '');\n            }\n            const entryToAdd = this.props.scanEntry ? this.props.scanEntry : '';\n            this.setState({\n                eventID: id,\n                entryToAdd,\n            });\n            this.requestConfirm();\n        }\n    }\n\n    handleText() {\n        this.setState({\n            eventID: this.state.idFieldValue\n        }, () => {\n            this.requestConfirm();\n        });\n    }\n\n    hasRankings(eventId) {\n        const cookie = getCookie('UserID');\n        return firebase.database().ref(`/event/${eventId}`).once('value').then(snap => {\n            const event = snap.val();\n            if (event && event.attendees && event.attendees[cookie]) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    handleRejoinEvent() {\n        const cookie = getCookie('UserID');\n        firebase.database().ref(`event/${this.state.eventID}/attendees/${cookie}/rankings/`).once('value').then(rankSnap => {\n            const rankings = rankSnap.val();\n            const items = [];\n            if (rankings) {\n                for (const item in rankings) {\n                    if (item) {\n                        // console.log(item);\n                        items[item - 1] = rankings[item].id;\n                    }\n                }\n            }\n            firebase.database().ref('organizer/').once('value').then(snapshot => {\n                const organizer = snapshot.val();\n                const event = organizer[this.state.organizerID].event[this.state.eventID];\n                const itemList = [];\n                for (let i = 0; i < items.length; i++) {\n                    const entry = event.entries[items[i]];\n                    if (entry) {\n                        itemList.push({\n                            name: entry.title,\n                            id: entry.id.toString(),\n                            presenters: entry.presenters,\n                            entry_dates: entry.entry_dates,\n                            info_url: entry.info_url,\n                            showInfo: false,\n                        });\n                    }\n                }\n                this.props.updateItemsHandler(itemList);\n            })\n                .then(() => {\n                    this.handleJoinEvent();\n                });\n        });\n    }\n\n    handleJoinEvent() {\n        const cookie = getCookie('UserID');\n        const itemsRef = firebase.database().ref(`attendees/${cookie}`);\n        itemsRef.child('currentEvent').set(this.state.eventID);\n        this.props.handler(this.props.voteViews.RANK, this.state.eventID, this.state.organizerID, this.state.entryToAdd);\n    }\n\n    handleError(err) {\n        console.log(err);\n    }\n\n    keyPress(e) {\n        if (e.key === 'Enter') {\n            this.handleText();\n        }\n    }\n\n    dialogOpen = () => {\n        if (this.rejoinChild.current.state.open || this.notFoundChild.current.state.open\n            || this.confirmChild.current.state.open || this.blockChild.current.state.open\n            || this.earlyJoinChild.current.state.open || this.closedJoinChild.current.state.open\n            || this.rejoinClosedChild.current.state.open) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <RejoinEvent entryName={this.state.eventName} ref={this.rejoinChild} handler={this.handleRejoinEvent} />\n                <NotFound ref={this.notFoundChild} idType=\"Event\" id={this.state.eventID} />\n                <EntryConfirmation entryName={this.state.eventName} ref={this.confirmChild} handler={this.handleJoinEvent} />\n                <BlockJoin entryName={this.state.eventName} idType=\"Event\" ref={this.blockChild} />\n                <EarlyJoin eventName={this.state.eventName} ref={this.earlyJoinChild} />\n                <ClosedJoin eventName={this.state.eventName} ref={this.closedJoinChild} />\n                <RejoinClosed eventName={this.state.eventName} ref={this.rejoinClosedChild} />\n                <QrReader delay={300} onScan={this.handleScan} onError={this.handleError} style={{ width: '80%', margin: '20px auto 0px' }} />\n                <Typography variant=\"h5\" align=\"center\" className=\"QRText\">Scan QR Code or enter Event ID:</Typography>\n                <div className=\"textField\">\n                    <TextField\n                        id=\"outlined-dense\"\n                        label=\"Event ID\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.idFieldValue}\n                        onKeyDown={this.keyPress}\n                        onChange={e => this.setState({ idFieldValue: e.target.value })}\n                    />\n                </div>\n                <div className=\"submitButtonContainer\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"homeButton\" onClick={this.handleText}>\n                        Join\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}