{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/ViewEvent.js\";\nimport React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport '../component_style/ViewEvent.css';\nimport firebase from '../../firebase';\nimport ExportOrgData from './Dialogs/ExportOrgData';\nimport EditEntries from './Dialogs/EditEntries';\nimport EditEvent from './Dialogs/EditEvent';\nimport EditVoting from './Dialogs/EditVoting';\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\n\nvar ViewEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ViewEvent, _React$Component);\n\n  function ViewEvent(props) {\n    var _this;\n\n    _classCallCheck(this, ViewEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewEvent).call(this, props));\n\n    _this.handleExport = function () {\n      _this.exportChild.current.handleOpen();\n    };\n\n    _this.handleEntryEdit = function () {\n      _this.entryChild.current.handleOpen();\n    };\n\n    _this.handleEventEdit = function () {\n      _this.eventChild.current.handleOpen();\n    };\n\n    _this.handleOpenCloseVoting = function () {\n      _this.votingChild.current.handleOpen();\n    };\n\n    _this.goBack = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.state = {\n      view: 'main',\n      event: {\n        id: '',\n        name: '',\n        location: '',\n        startDate: '',\n        endDate: '',\n        automate: false,\n        startVote: '',\n        endVote: '',\n        entries: []\n      }\n    };\n    _this.exportChild = React.createRef();\n    _this.eventChild = React.createRef();\n    _this.entryChild = React.createRef();\n    _this.votingChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(ViewEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var googleId = this.props.user.googleId;\n      var query = firebase.database().ref('organizer/' + googleId + '/event');\n      query.on('value', function (snapshot) {\n        var events = snapshot.val();\n        var eventBase = events[_this2.props.curEvent]['eventData'];\n        var eventEntries = events[_this2.props.curEvent]['entries'];\n\n        _this2.setState({\n          event: {\n            id: eventBase['id'],\n            name: eventBase['name'],\n            location: eventBase['location'],\n            startDate: eventBase['startDate'],\n            endDate: eventBase['endDate'],\n            automate: eventBase['automate'],\n            startVote: eventBase['startVote'],\n            endVote: eventBase['endVote'],\n            entries: eventEntries\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    // mainContent = this.state.view === \"main\" ? (\n    //     <div className=\"box\">\n    //         <Button className=\"listButtons\" onClick={this.handleExport}>Export Event & Entry QR Codes</Button>\n    //         <Button className=\"listButtons\" onClick={this.handleEntryEdit}>View/Add/Edit Entries</Button>\n    //         <Button className=\"listButtons\" onClick={this.handleEventEdit}>View/Edit Event Details</Button>\n    //         <Button className=\"listButtons\" onClick={this.handleOpenCloseVoting}>Open/Close Voting</Button>\n    //     </div>\n    // ) : (\n    //     <div className=\"viewResults\">\n    //         View Results\n    //     </div>\n    // );\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ExportOrgData, {\n        ref: this.exportChild,\n        event: this.state.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(EditEntries, {\n        ref: this.entryChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(EditEvent, {\n        ref: this.eventChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(EditVoting, {\n        ref: this.votingChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.event.name), React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleExport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Export Event & Entry QR Codes\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleEntryEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"View/Add/Edit Entries\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleEventEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"View/Edit Event Details\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleOpenCloseVoting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Open/Close Voting\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.goBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return ViewEvent;\n}(React.Component);\n\nexport { ViewEvent as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/ViewEvent.js"],"names":["React","Typography","Button","firebase","ExportOrgData","EditEntries","EditEvent","EditVoting","ViewEvent","props","handleExport","exportChild","current","handleOpen","handleEntryEdit","entryChild","handleEventEdit","eventChild","handleOpenCloseVoting","votingChild","goBack","handler","orgViews","MAIN","state","view","event","id","name","location","startDate","endDate","automate","startVote","endVote","entries","createRef","googleId","user","query","database","ref","on","snapshot","events","val","eventBase","curEvent","eventEntries","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport '../component_style/ViewEvent.css';\r\nimport firebase from '../../firebase';\r\nimport ExportOrgData from './Dialogs/ExportOrgData';\r\nimport EditEntries from './Dialogs/EditEntries';\r\nimport EditEvent from './Dialogs/EditEvent';\r\nimport EditVoting from './Dialogs/EditVoting';\r\n\r\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\r\nexport default class ViewEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            view: 'main',\r\n            event: {\r\n                id: '', \r\n                name: '', \r\n                location:'', \r\n                startDate: '', \r\n                endDate: '', \r\n                automate: false, \r\n                startVote: '', \r\n                endVote: '',\r\n                entries: []\r\n            },\r\n        };\r\n        this.exportChild = React.createRef();\r\n        this.eventChild = React.createRef();\r\n        this.entryChild = React.createRef();\r\n        this.votingChild = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var googleId = this.props.user.googleId;\r\n        var query = firebase.database().ref('organizer/' + googleId + '/event');\r\n        query.on('value', (snapshot) => {\r\n            let events = snapshot.val();\r\n            let eventBase = events[this.props.curEvent]['eventData'];\r\n            let eventEntries = events[this.props.curEvent]['entries'];\r\n            this.setState({\r\n                event: {\r\n                    id: eventBase['id'],\r\n                    name: eventBase['name'],\r\n                    location: eventBase['location'],\r\n                    startDate: eventBase['startDate'],\r\n                    endDate: eventBase['endDate'],\r\n                    automate: eventBase['automate'],\r\n                    startVote: eventBase['startVote'],\r\n                    endVote: eventBase['endVote'],\r\n                    entries: eventEntries\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleExport = () => {\r\n        this.exportChild.current.handleOpen();\r\n    }\r\n\r\n    handleEntryEdit = () => {\r\n        this.entryChild.current.handleOpen();\r\n    }\r\n\r\n    handleEventEdit = () => {\r\n        this.eventChild.current.handleOpen();\r\n    }\r\n\r\n    handleOpenCloseVoting = () => {\r\n        this.votingChild.current.handleOpen();\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.handler(this.props.orgViews.MAIN);\r\n    }\r\n\r\n    // mainContent = this.state.view === \"main\" ? (\r\n\r\n    //     <div className=\"box\">\r\n    //         <Button className=\"listButtons\" onClick={this.handleExport}>Export Event & Entry QR Codes</Button>\r\n    //         <Button className=\"listButtons\" onClick={this.handleEntryEdit}>View/Add/Edit Entries</Button>\r\n    //         <Button className=\"listButtons\" onClick={this.handleEventEdit}>View/Edit Event Details</Button>\r\n    //         <Button className=\"listButtons\" onClick={this.handleOpenCloseVoting}>Open/Close Voting</Button>\r\n    //     </div>\r\n    // ) : (\r\n    //     <div className=\"viewResults\">\r\n    //         View Results\r\n    //     </div>\r\n    // );\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <ExportOrgData ref={this.exportChild} event={this.state.event}/>\r\n                <EditEntries ref={this.entryChild}/>\r\n                <EditEvent ref={this.eventChild}/>\r\n                <EditVoting ref={this.votingChild}/>\r\n                <Typography variant=\"h3\" align='center' gutterBottom>{this.state.event.name}</Typography>\r\n                <div className=\"options\">\r\n                    <Button className=\"button1\" variant=\"contained\" color=\"primary\">Manage Event</Button>\r\n                    <Button className=\"button1\" variant=\"contained\">View Results</Button>\r\n                </div>\r\n                <div className=\"box\">\r\n                    <Button className=\"listButtons\" onClick={this.handleExport}>Export Event & Entry QR Codes</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleEntryEdit}>View/Add/Edit Entries</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleEventEdit}>View/Edit Event Details</Button>\r\n                    <Button className=\"listButtons\" onClick={this.handleOpenCloseVoting}>Open/Close Voting</Button>\r\n                </div>\r\n                <br />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttons\"\r\n                    type=\"button\"\r\n                    onClick={this.goBack} >\r\n                    Back\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}