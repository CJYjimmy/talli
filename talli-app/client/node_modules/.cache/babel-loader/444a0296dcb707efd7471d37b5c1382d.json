{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/Organizer.js\";\nimport React, { Component } from 'react';\nimport { navigate } from 'react-mini-router';\nimport { Button } from '@material-ui/core';\nimport NewEvent from './OrganizerView/NewEventForm';\nimport EventList from './OrganizerView/EventList';\nimport AddEntry from './OrganizerView/AddEntryOrg';\nimport ViewEvent from './OrganizerView/ViewEvent';\nimport './component_style/Organizer.css';\nvar orgViews = {\n  MAIN: 'EventList',\n  CREATE: 'NewEvent',\n  ADD: 'AddEntry',\n  VIEW: 'ViewEvent'\n};\n/**\r\n * OrganizerView > Organizer\r\n * Container which all organizer view will be rendered in.\r\n */\n\nvar Organizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Organizer, _Component);\n\n  function Organizer(props) {\n    var _this;\n\n    _classCallCheck(this, Organizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Organizer).call(this, props));\n    _this.state = {\n      curView: orgViews.MAIN,\n      curEventID: ''\n    };\n    _this.setView = _this.setView.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setEvent = _this.setEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Organizer, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }, {\n    key: \"setView\",\n    value: function setView(newView) {\n      this.setState({\n        curView: newView\n      });\n    }\n  }, {\n    key: \"setEvent\",\n    value: function setEvent(eventID) {\n      this.setState({\n        curEventID: eventID\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.ChangeView('/');\n      this.props.logout();\n    }\n  }, {\n    key: \"getCurrView\",\n    value: function getCurrView() {\n      switch (this.state.curView) {\n        case orgViews.CREATE:\n          return React.createElement(NewEvent, {\n            orgViews: orgViews,\n            handler: this.setView,\n            setEvent: this.setEvent,\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n\n        case orgViews.ADD:\n          return React.createElement(AddEntry, {\n            orgViews: orgViews,\n            handler: this.setView,\n            curEvent: this.state.curEventID,\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n\n        case orgViews.VIEW:\n          return React.createElement(ViewEvent, {\n            orgViews: orgViews,\n            handler: this.setView,\n            curEvent: this.state.curEventID,\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(EventList, {\n            orgViews: orgViews,\n            handler: this.setView,\n            setEvent: this.setEvent,\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"buttons\",\n        onClick: this.logout.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Logout\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.getCurrView()));\n    }\n  }]);\n\n  return Organizer;\n}(Component);\n\nexport { Organizer as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/Organizer.js"],"names":["React","Component","navigate","Button","NewEvent","EventList","AddEntry","ViewEvent","orgViews","MAIN","CREATE","ADD","VIEW","Organizer","props","state","curView","curEventID","setView","bind","setEvent","page","newView","setState","eventID","ChangeView","logout","user","getCurrView"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { navigate } from 'react-mini-router';\r\nimport { Button } from '@material-ui/core';\r\nimport NewEvent from './OrganizerView/NewEventForm';\r\nimport EventList from './OrganizerView/EventList';\r\nimport AddEntry from './OrganizerView/AddEntryOrg';\r\nimport ViewEvent from './OrganizerView/ViewEvent';\r\nimport './component_style/Organizer.css';\r\n\r\nconst orgViews = {\r\n    MAIN: 'EventList',\r\n    CREATE: 'NewEvent',\r\n    ADD: 'AddEntry',\r\n    VIEW: 'ViewEvent',\r\n};\r\n\r\n/**\r\n * OrganizerView > Organizer\r\n * Container which all organizer view will be rendered in.\r\n */\r\nexport default class Organizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            curView: orgViews.MAIN,\r\n            curEventID: ''\r\n        };\r\n        this.setView = this.setView.bind(this);\r\n        this.setEvent = this.setEvent.bind(this);\r\n    }\r\n\r\n    ChangeView(page) {\r\n        navigate(page);\r\n    }\r\n\r\n    setView(newView) {\r\n        this.setState({ curView: newView });\r\n    }\r\n\r\n    setEvent(eventID) {\r\n        this.setState({ curEventID: eventID });\r\n    }\r\n\r\n    logout() {\r\n        this.ChangeView('/');\r\n        this.props.logout();\r\n    }\r\n\r\n    getCurrView() {\r\n        switch (this.state.curView) {\r\n            case orgViews.CREATE:\r\n                return (<NewEvent orgViews={orgViews} handler={this.setView} setEvent={this.setEvent} user={this.props.user} />);\r\n            case orgViews.ADD:\r\n                return (<AddEntry orgViews={orgViews} handler={this.setView} curEvent={this.state.curEventID} user={this.props.user} />);\r\n            case orgViews.VIEW:\r\n                return (<ViewEvent orgViews={orgViews} handler={this.setView} curEvent={this.state.curEventID} user={this.props.user} />);\r\n            default:\r\n                return (<EventList orgViews={orgViews} handler={this.setView} setEvent={this.setEvent} user={this.props.user} />);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                {/* <GoogleLogout \r\n                    buttonText=\"Logout\"\r\n                    render={renderProps => (\r\n                        <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={renderProps.onClick}>Logout</Button>\r\n                    )}\r\n                    onLogoutSuccess={this.logout.bind(this)} /> */}\r\n                {/* temp solution to logout issue */}\r\n                <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={this.logout.bind(this)}>Logout</Button>\r\n                <div>{this.getCurrView()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}