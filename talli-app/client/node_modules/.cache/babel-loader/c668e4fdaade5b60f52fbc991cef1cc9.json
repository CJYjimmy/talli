{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js\";\nimport React from 'react';\nimport { Typography, Button } from '@material-ui/core'; // import '../component_style/Organizer.css';\n\nimport '../component_style/ViewEvent.css';\n/**\r\n * Event View, unimplemented\r\n * TODO: read existing events from database and render\r\n */\n//  const views = {\n//      MAIN: 'MAIN',\n//      QR: 'ExportQR',\n//  };\n\nvar ViewEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ViewEvent, _React$Component);\n\n  function ViewEvent() {\n    var _this;\n\n    _classCallCheck(this, ViewEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewEvent).call(this));\n\n    _this.setView = function (view) {\n      _this.setState({\n        view: view\n      });\n    };\n\n    _this.goBack = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.handleClick = function (e) {\n      console.log('entries clicked');\n\n      _this.setState({\n        hidden: !_this.state.hidden\n      });\n    };\n\n    _this.state = {\n      view: 'main',\n      entries: [\"Entry 1 (Dates attending) - Presenter 1, Presenter 2\", \"Entry 2 (Dates attending) - Presenter 1\", \"Entry 3 (Dates attending) - Presenter 1, Presenter 2\"],\n      hidden: true\n    };\n    return _this;\n  }\n\n  _createClass(ViewEvent, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.view);\n      var entriesList = this.state.entries.map(function (entry) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, entry);\n      });\n\n      if (this.state.view === 'ExportQR') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Export QR Page\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h3\",\n          align: \"center\",\n          gutterBottom: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Sample Event\"), React.createElement(\"div\", {\n          className: \"options\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"button1\",\n          variant: \"contained\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Manage Event\"), React.createElement(Button, {\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"View Results\")), React.createElement(\"div\", {\n          className: \"box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: this.setView('ExportQR'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Export Event & Entry QR Codes\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"View/Add/Edit Entries\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"View/Edit Event Details\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Open/Close Voting\")));\n      } // return (\n      //     <div>\n      //         <Typography variant=\"h4\" align='center' gutterBottom>Sample Event</Typography>\n      //         <div className=\"eventDetails\">\n      //             <Typography variant='h5' align='left'> Details</Typography>\n      //             <div><b>Event Name</b>: Sample Event</div>\n      //             <div><b>Date(s)</b>: January 30 - Feb 2</div>\n      //             <div><b>Location</b>: Atlanta, GA</div>\n      //             <div className=\"viewEntries\" onClick={this.handleClick}>\n      //                 <div><b>Entries (click to expand)</b></div>\n      //                 <div className=\"entriesList\">\n      //                     {!this.state.hidden && entriesList}\n      //                 </div>\n      //             </div>\n      //             <Button \n      //                 variant=\"contained\"\n      //                 className=\"buttons\"\n      //                 type=\"button\"\n      //                 onClick={this.goBack} >\n      //                 Back\n      //             </Button>\n      //         </div>\n      //     </div>\n      // );\n\n    }\n  }]);\n\n  return ViewEvent;\n}(React.Component);\n\nexport { ViewEvent as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js"],"names":["React","Typography","Button","ViewEvent","setView","view","setState","goBack","props","handler","orgViews","MAIN","handleClick","e","console","log","hidden","state","entries","entriesList","map","entry","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC,C,CACA;;AACA,OAAO,kCAAP;AAEA;;;;AAKA;AACA;AACA;AACA;;IAEqBC,S;;;;;AACjB,uBAAc;AAAA;;AAAA;;AACV;;AADU,UAadC,OAbc,GAaJ,UAACC,IAAD,EAAU;AAChB,YAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAfa;;AAAA,UAiBdE,MAjBc,GAiBL,YAAM;AACX,YAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,QAAX,CAAoBC,IAAvC;AACH,KAnBa;;AAAA,UAqBdC,WArBc,GAqBA,UAACC,CAAD,EAAO;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,YAAKT,QAAL,CAAc;AAACU,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAArB,OAAd;AACH,KAxBa;;AAEV,UAAKC,KAAL,GAAa;AACTZ,MAAAA,IAAI,EAAE,MADG;AAETa,MAAAA,OAAO,EAAE,CACL,sDADK,EAEL,yCAFK,EAGL,sDAHK,CAFA;AAOTF,MAAAA,MAAM,EAAE;AAPC,KAAb;AAFU;AAWb;;;;6BAeQ;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWZ,IAAvB;AACA,UAAIc,WAAW,GAAG,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,GAAnB,CAAuB,UAAAC,KAAK,EAAI;AAC9C,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAN,CAAR;AACH,OAFiB,CAAlB;;AAIA,UAAI,KAAKJ,KAAL,CAAWZ,IAAX,KAAoB,UAAxB,EAAoC;AAChC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ;AAKH,OAND,MAMO;AACH,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,QAA/B;AAAwC,UAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,OAAO,EAAC,WAApC;AAAgD,UAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAFJ,EAMI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,OAAO,EAAE,KAAKD,OAAL,CAAa,UAAb,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,CANJ,CADJ;AAeH,OA5BI,CA6BL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;;;EAhFkCJ,KAAK,CAACsB,S;;SAAxBnB,S","sourcesContent":["import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\n// import '../component_style/Organizer.css';\r\nimport '../component_style/ViewEvent.css';\r\n\r\n/**\r\n * Event View, unimplemented\r\n * TODO: read existing events from database and render\r\n */\r\n\r\n//  const views = {\r\n//      MAIN: 'MAIN',\r\n//      QR: 'ExportQR',\r\n//  };\r\n\r\nexport default class ViewEvent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            view: 'main',\r\n            entries: [\r\n                \"Entry 1 (Dates attending) - Presenter 1, Presenter 2\",\r\n                \"Entry 2 (Dates attending) - Presenter 1\",\r\n                \"Entry 3 (Dates attending) - Presenter 1, Presenter 2\"\r\n            ],\r\n            hidden: true\r\n        };\r\n    }\r\n\r\n    setView = (view) => {\r\n        this.setState({view: view});\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.handler(this.props.orgViews.MAIN);\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        console.log('entries clicked');\r\n        this.setState({hidden: !this.state.hidden});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.view);\r\n        let entriesList = this.state.entries.map(entry => {\r\n            return (<div>{entry}</div>)\r\n        })\r\n\r\n        if (this.state.view === 'ExportQR') {\r\n            return (\r\n                <div>\r\n                    Export QR Page\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"main\">\r\n                    <Typography variant=\"h3\" align='center' gutterBottom>Sample Event</Typography>\r\n                    <div className=\"options\">\r\n                        <Button className=\"button1\" variant=\"contained\" color=\"primary\">Manage Event</Button>\r\n                        <Button variant=\"contained\">View Results</Button>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        <div onClick={this.setView('ExportQR')}>Export Event & Entry QR Codes</div>\r\n                        <div>View/Add/Edit Entries</div>\r\n                        <div>View/Edit Event Details</div>\r\n                        <div>Open/Close Voting</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        // return (\r\n        //     <div>\r\n        //         <Typography variant=\"h4\" align='center' gutterBottom>Sample Event</Typography>\r\n        //         <div className=\"eventDetails\">\r\n        //             <Typography variant='h5' align='left'> Details</Typography>\r\n        //             <div><b>Event Name</b>: Sample Event</div>\r\n        //             <div><b>Date(s)</b>: January 30 - Feb 2</div>\r\n        //             <div><b>Location</b>: Atlanta, GA</div>\r\n        //             <div className=\"viewEntries\" onClick={this.handleClick}>\r\n        //                 <div><b>Entries (click to expand)</b></div>\r\n        //                 <div className=\"entriesList\">\r\n        //                     {!this.state.hidden && entriesList}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <Button \r\n        //                 variant=\"contained\"\r\n        //                 className=\"buttons\"\r\n        //                 type=\"button\"\r\n        //                 onClick={this.goBack} >\r\n        //                 Back\r\n        //             </Button>\r\n        //         </div>\r\n        //     </div>\r\n        // );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}