{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js\";\nimport React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport '../component_style/Organizer.css';\n/**\r\n * Event View, unimplemented\r\n * TODO: read existing events from database and render\r\n */\n\nvar ViewEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ViewEvent, _React$Component);\n\n  function ViewEvent() {\n    var _this;\n\n    _classCallCheck(this, ViewEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewEvent).call(this));\n\n    _this.goBack = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.handleClick = function (e) {\n      console.log('entries clicked');\n\n      _this.setState({\n        hidden: !_this.state.hidden\n      });\n    };\n\n    _this.state = {\n      entries: [\"Entry 1 (Dates attending) - Presenter 1, Presenter 2\", \"Entry 2 (Dates attending) - Presenter 1\", \"Entry 3 (Dates attending) - Presenter 1, Presenter 2\"],\n      hidden: true\n    };\n    return _this;\n  }\n\n  _createClass(ViewEvent, [{\n    key: \"render\",\n    value: function render() {\n      var entriesList = this.state.entries.map(function (entry) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, entry);\n      }); // return (\n      //     <div>\n      //         <Typography variant=\"h4\" align='center' gutterBottom>Sample Event</Typography>\n      //         <div className=\"eventDetails\">\n      //             <Typography variant='h5' align='left'> Details</Typography>\n      //             <div><b>Event Name</b>: Sample Event</div>\n      //             <div><b>Date(s)</b>: January 30 - Feb 2</div>\n      //             <div><b>Location</b>: Atlanta, GA</div>\n      //             <div className=\"viewEntries\" onClick={this.handleClick}>\n      //                 <div><b>Entries (click to expand)</b></div>\n      //                 <div className=\"entriesList\">\n      //                     {!this.state.hidden && entriesList}\n      //                 </div>\n      //             </div>\n      //             <Button \n      //                 variant=\"contained\"\n      //                 className=\"buttons\"\n      //                 type=\"button\"\n      //                 onClick={this.goBack} >\n      //                 Back\n      //             </Button>\n      //         </div>\n      //     </div>\n      // );\n\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Sample Event\"));\n    }\n  }]);\n\n  return ViewEvent;\n}(React.Component);\n\nexport { ViewEvent as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/ViewEvent.js"],"names":["React","Typography","Button","ViewEvent","goBack","props","handler","orgViews","MAIN","handleClick","e","console","log","setState","hidden","state","entries","entriesList","map","entry","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAO,kCAAP;AAEA;;;;;IAIqBC,S;;;;;AAEjB,uBAAc;AAAA;;AAAA;;AACV;;AADU,UAYdC,MAZc,GAYL,YAAM;AACX,YAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,QAAX,CAAoBC,IAAvC;AACH,KAda;;AAAA,UAgBdC,WAhBc,GAgBA,UAACC,CAAD,EAAO;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAArB,OAAd;AAEH,KApBa;;AAEV,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CACL,sDADK,EAEL,yCAFK,EAGL,sDAHK,CADA;AAMTF,MAAAA,MAAM,EAAE;AANC,KAAb;AAFU;AAUb;;;;6BAYQ;AACL,UAAIG,WAAW,GAAG,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,GAAnB,CAAuB,UAAAC,KAAK,EAAI;AAC9C,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAN,CAAR;AACH,OAFiB,CAAlB,CADK,CAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,QAA/B;AAAwC,QAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ;AAKH;;;;EAzDkCnB,KAAK,CAACoB,S;;SAAxBjB,S","sourcesContent":["import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport '../component_style/Organizer.css';\r\n\r\n/**\r\n * Event View, unimplemented\r\n * TODO: read existing events from database and render\r\n */\r\nexport default class ViewEvent extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            entries: [\r\n                \"Entry 1 (Dates attending) - Presenter 1, Presenter 2\",\r\n                \"Entry 2 (Dates attending) - Presenter 1\",\r\n                \"Entry 3 (Dates attending) - Presenter 1, Presenter 2\"\r\n            ],\r\n            hidden: true\r\n        };\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.handler(this.props.orgViews.MAIN);\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        console.log('entries clicked');\r\n        this.setState({hidden: !this.state.hidden});\r\n\r\n    }\r\n\r\n    render() {\r\n        let entriesList = this.state.entries.map(entry => {\r\n            return (<div>{entry}</div>)\r\n        })\r\n        // return (\r\n        //     <div>\r\n        //         <Typography variant=\"h4\" align='center' gutterBottom>Sample Event</Typography>\r\n        //         <div className=\"eventDetails\">\r\n        //             <Typography variant='h5' align='left'> Details</Typography>\r\n        //             <div><b>Event Name</b>: Sample Event</div>\r\n        //             <div><b>Date(s)</b>: January 30 - Feb 2</div>\r\n        //             <div><b>Location</b>: Atlanta, GA</div>\r\n        //             <div className=\"viewEntries\" onClick={this.handleClick}>\r\n        //                 <div><b>Entries (click to expand)</b></div>\r\n        //                 <div className=\"entriesList\">\r\n        //                     {!this.state.hidden && entriesList}\r\n        //                 </div>\r\n        //             </div>\r\n        //             <Button \r\n        //                 variant=\"contained\"\r\n        //                 className=\"buttons\"\r\n        //                 type=\"button\"\r\n        //                 onClick={this.goBack} >\r\n        //                 Back\r\n        //             </Button>\r\n        //         </div>\r\n        //     </div>\r\n        // );\r\n        return (\r\n            <div className=\"main\">\r\n                <Typography variant=\"h3\" align='center' gutterBottom>Sample Event</Typography>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}