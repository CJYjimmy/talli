{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/JoinEvent.js\";\nimport React from 'react';\nimport QrReader from 'react-qr-reader';\nimport { TextField, Typography, Button } from '@material-ui/core';\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\nimport '../component_style/Voter.css';\nimport firebase from '../../firebase';\nimport { getCookie } from '../../cookies';\nimport BlockJoin from './Dialogs/BlockJoin';\nimport EarlyJoin from './Dialogs/EarlyJoin';\nimport ClosedJoin from './Dialogs/ClosedJoin';\nimport RejoinClosed from './Dialogs/RejoinClosed';\nimport NotFound from './Dialogs/NotFound';\nimport RejoinEvent from './Dialogs/RejoinEvent';\n\nvar config = require('../../config.json');\n/**\r\n * Join Event via QR Code or UID\r\n */\n\n\nvar JoinEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JoinEvent, _React$Component);\n\n  function JoinEvent(props) {\n    var _this;\n\n    _classCallCheck(this, JoinEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JoinEvent).call(this, props));\n    /** ::STATE INFO::\r\n     *  eventID:        Event's UID, obtained either from QRcode or textfield\r\n     *  idFieldValue:   The value currently in the textbox\r\n     */\n\n    _this.requestConfirm = function () {\n      firebase.database().ref('event/').once('value').then(function (snap) {\n        var orgID = snap.val()[_this.state.eventID];\n\n        _this.setState({\n          organizerID: orgID ? orgID.organizer : ''\n        }, function () {\n          if (_this.state.organizerID && _this.state.organizerID !== '') {\n            firebase.database().ref(\"/organizer/\".concat(_this.state.organizerID, \"/event/\").concat(_this.state.eventID)).once('value').then(function (snapshot) {\n              var event = snapshot.val();\n\n              if (!event) {\n                // Event not found\n                _this.notFoundChild.current.handleOpen();\n\n                return;\n              }\n\n              _this.setState({\n                eventName: event.eventData.name\n              }, function () {\n                // Checks whether an even has not started or has ended\n                var votingState = _this.getVotingState(event.eventData);\n\n                if (votingState === 'before') {\n                  _this.earlyJoinChild.current.handleOpen();\n\n                  return;\n                }\n\n                if (votingState === 'closed') {\n                  _this.closedJoinChild.current.handleOpen();\n\n                  return;\n                } // Checks whether the user has submitted for this event previously\n\n\n                var cookies = getCookie('UserID');\n                firebase.database().ref(\"attendees/\".concat(cookies, \"/pastEvents\")).once('value').then(function (pastSnap) {\n                  var pastEvents = pastSnap.val();\n                  var check = false;\n\n                  for (var c in pastEvents) {\n                    if (c === _this.state.eventID) {\n                      check = true;\n\n                      _this.blockChild.current.handleOpen();\n\n                      return;\n                    }\n                  }\n\n                  if (!check) {\n                    _this.hasRankings(_this.state.eventID).then(function (shouldRejoin) {\n                      if (shouldRejoin) {\n                        _this.rejoinChild.current.handleOpen();\n                      } else {\n                        _this.confirmChild.current.handleOpen();\n                      }\n                    });\n                  }\n                });\n              });\n            });\n          } else {\n            // Event not found\n            _this.notFoundChild.current.handleOpen();\n          }\n        });\n      });\n    };\n\n    _this.dialogOpen = function () {\n      if (_this.rejoinChild.current.state.open || _this.notFoundChild.current.state.open || _this.confirmChild.current.state.open || _this.blockChild.current.state.open || _this.earlyJoinChild.current.state.open || _this.closedJoinChild.current.state.open || _this.rejoinClosedChild.current.state.open) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.state = {\n      eventID: '',\n      idFieldValue: '',\n      eventName: '',\n      organizerID: '',\n      entryToAdd: ''\n    };\n    _this.handleScan = _this.handleScan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleText = _this.handleText.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleJoinEvent = _this.handleJoinEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyPress = _this.keyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRejoinEvent = _this.handleRejoinEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirmChild = React.createRef();\n    _this.earlyJoinChild = React.createRef();\n    _this.closedJoinChild = React.createRef();\n    _this.blockChild = React.createRef();\n    _this.notFoundChild = React.createRef();\n    _this.rejoinChild = React.createRef();\n    _this.rejoinClosedChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(JoinEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookie = getCookie('UserID');\n      firebase.database().ref('/').once('value').then(function (snapshot) {\n        var root = snapshot.val();\n        var allCookies = root.attendees[cookie];\n        var entryToAdd = 'na';\n\n        if (allCookies && allCookies.currentEvent) {\n          var orgID = root.event[allCookies.currentEvent];\n\n          _this2.setState({\n            organizerID: orgID ? orgID.organizer : ''\n          }, function () {\n            if (_this2.state.organizerID && _this2.state.organizerID !== '') {\n              var event = root.organizer[_this2.state.organizerID].event[allCookies.currentEvent];\n\n              if (event) {\n                if (event.entries && _this2.props.scanEntry && event.entries[_this2.props.scanEntry]) {\n                  entryToAdd = _this2.props.scanEntry;\n                }\n\n                _this2.setState({\n                  eventName: event.eventData.name,\n                  eventID: allCookies.currentEvent,\n                  entryToAdd: entryToAdd\n                }, function () {\n                  var votingState = _this2.getVotingState(event.eventData);\n\n                  if (votingState === 'closed') {\n                    _this2.rejoinClosedChild.current.handleOpen();\n\n                    firebase.database().ref(\"attendees/\".concat(cookie, \"/currentEvent\")).set('');\n                    return;\n                  }\n\n                  _this2.rejoinChild.current.handleOpen();\n                });\n              }\n            }\n          });\n        } else if (_this2.props.scanID) {\n          if (_this2.props.scanEntry) {\n            entryToAdd = _this2.props.scanEntry;\n          }\n\n          _this2.setState({\n            eventID: _this2.props.scanID,\n            entryToAdd: entryToAdd\n          });\n\n          _this2.requestConfirm();\n        }\n      });\n    }\n  }, {\n    key: \"getVotingState\",\n    value: function getVotingState(event) {\n      var date = new Date().toISOString();\n\n      if (event.startVote === 'none' || event.startVote > date) {\n        // not open yet\n        return 'before';\n      } else if (event.endVote === 'none' || event.endVote > date) {\n        // open\n        return 'open';\n      }\n\n      return 'closed';\n    }\n  }, {\n    key: \"handleScan\",\n    value: function handleScan(data) {\n      if (!this.dialogOpen() && data && data.toLowerCase().includes(\"\".concat(config.Global.hostURL, \"/vote/\").toLowerCase())) {\n        var entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\n        var id = '';\n\n        if (entrySlash !== -1) {\n          id = data.substring(data.indexOf('/vote/') + 6, entrySlash).replace(/\\W/g, '');\n        } else {\n          id = data.substring(data.indexOf('/vote/') + 6).replace(/\\W/g, '');\n        }\n\n        var entryToAdd = this.props.scanEntry ? this.props.scanEntry : 'na';\n        this.setState({\n          eventID: id,\n          entryToAdd: entryToAdd\n        });\n        this.requestConfirm();\n      }\n    }\n  }, {\n    key: \"handleText\",\n    value: function handleText() {\n      var _this3 = this;\n\n      this.setState({\n        eventID: this.state.idFieldValue\n      }, function () {\n        _this3.requestConfirm();\n      });\n    }\n  }, {\n    key: \"hasRankings\",\n    value: function hasRankings(eventId) {\n      var cookie = getCookie('UserID');\n      return firebase.database().ref(\"/event/\".concat(eventId)).once('value').then(function (snap) {\n        var event = snap.val();\n\n        if (event && event.attendees && event.attendees[cookie]) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  }, {\n    key: \"handleRejoinEvent\",\n    value: function handleRejoinEvent() {\n      var _this4 = this;\n\n      var cookie = getCookie('UserID');\n      firebase.database().ref(\"event/\".concat(this.state.eventID, \"/attendees/\").concat(cookie, \"/rankings/\")).once('value').then(function (rankSnap) {\n        var rankings = rankSnap.val();\n        var items = [];\n\n        if (rankings) {\n          for (var item in rankings) {\n            if (item) {\n              items[rankings[item] - 1] = item;\n            }\n          }\n        }\n\n        firebase.database().ref('organizer/').once('value').then(function (snapshot) {\n          var organizer = snapshot.val();\n          var event = organizer[_this4.state.organizerID].event[_this4.state.eventID];\n          var itemList = [];\n\n          for (var i = 0; i < items.length; i++) {\n            var entry = event.entries[items[i]];\n\n            if (entry) {\n              itemList.push({\n                name: entry.title,\n                id: entry.id.toString(),\n                presenters: entry.presenters,\n                entry_dates: entry.entry_dates,\n                showInfo: false\n              });\n            }\n          }\n\n          _this4.props.updateItemsHandler(itemList);\n        }).then(function () {\n          _this4.handleJoinEvent();\n        });\n      });\n    }\n  }, {\n    key: \"handleJoinEvent\",\n    value: function handleJoinEvent() {\n      var cookie = getCookie('UserID');\n      var itemsRef = firebase.database().ref(\"attendees/\".concat(cookie));\n      itemsRef.child('currentEvent').set(this.state.eventID);\n      this.props.handler(this.props.voteViews.RANK, this.state.eventID, this.state.organizerID, this.state.entryToAdd);\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      console.log(err);\n    }\n  }, {\n    key: \"keyPress\",\n    value: function keyPress(e) {\n      if (e.key === 'Enter') {\n        this.handleText();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(RejoinEvent, {\n        entryName: this.state.eventName,\n        ref: this.rejoinChild,\n        handler: this.handleRejoinEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(NotFound, {\n        ref: this.notFoundChild,\n        idType: \"Event\",\n        id: this.state.eventID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(EntryConfirmation, {\n        entryName: this.state.eventName,\n        ref: this.confirmChild,\n        handler: this.handleJoinEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(BlockJoin, {\n        entryName: this.state.eventName,\n        idType: \"Event\",\n        ref: this.blockChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(EarlyJoin, {\n        eventName: this.state.eventName,\n        ref: this.earlyJoinChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(ClosedJoin, {\n        eventName: this.state.eventName,\n        ref: this.closedJoinChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(RejoinClosed, {\n        eventName: this.state.eventName,\n        ref: this.rejoinClosedChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(QrReader, {\n        delay: 300,\n        onScan: this.handleScan,\n        onError: this.handleError,\n        style: {\n          width: '80%',\n          margin: '20px auto 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        className: \"QRText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Scan QR Code or enter Event ID:\"), React.createElement(\"div\", {\n        className: \"textField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-dense\",\n        label: \"Event ID\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: this.state.idFieldValue,\n        onKeyDown: this.keyPress,\n        onChange: function onChange(e) {\n          return _this5.setState({\n            idFieldValue: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"homeButton\",\n        onClick: this.handleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Join\")));\n    }\n  }]);\n\n  return JoinEvent;\n}(React.Component);\n\nexport { JoinEvent as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/JoinEvent.js"],"names":["React","QrReader","TextField","Typography","Button","EntryConfirmation","firebase","getCookie","BlockJoin","EarlyJoin","ClosedJoin","RejoinClosed","NotFound","RejoinEvent","config","require","JoinEvent","props","requestConfirm","database","ref","once","then","snap","orgID","val","state","eventID","setState","organizerID","organizer","snapshot","event","notFoundChild","current","handleOpen","eventName","eventData","name","votingState","getVotingState","earlyJoinChild","closedJoinChild","cookies","pastSnap","pastEvents","check","c","blockChild","hasRankings","shouldRejoin","rejoinChild","confirmChild","dialogOpen","open","rejoinClosedChild","idFieldValue","entryToAdd","handleScan","bind","handleError","handleText","handleJoinEvent","keyPress","handleRejoinEvent","createRef","cookie","root","allCookies","attendees","currentEvent","entries","scanEntry","set","scanID","date","Date","toISOString","startVote","endVote","data","toLowerCase","includes","Global","hostURL","entrySlash","indexOf","id","substring","replace","eventId","rankSnap","rankings","items","item","itemList","i","length","entry","push","title","toString","presenters","entry_dates","showInfo","updateItemsHandler","itemsRef","child","handler","voteViews","RANK","err","console","log","e","key","width","margin","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport QrReader from 'react-qr-reader';\r\nimport { TextField, Typography, Button } from '@material-ui/core';\r\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\r\nimport '../component_style/Voter.css';\r\nimport firebase from '../../firebase';\r\nimport { getCookie } from '../../cookies';\r\nimport BlockJoin from './Dialogs/BlockJoin';\r\nimport EarlyJoin from './Dialogs/EarlyJoin';\r\nimport ClosedJoin from './Dialogs/ClosedJoin';\r\nimport RejoinClosed from './Dialogs/RejoinClosed';\r\nimport NotFound from './Dialogs/NotFound';\r\nimport RejoinEvent from './Dialogs/RejoinEvent';\r\n\r\nconst config = require('../../config.json');\r\n\r\n/**\r\n * Join Event via QR Code or UID\r\n */\r\nexport default class JoinEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        /** ::STATE INFO::\r\n         *  eventID:        Event's UID, obtained either from QRcode or textfield\r\n         *  idFieldValue:   The value currently in the textbox\r\n         */\r\n        this.state = {\r\n            eventID: '',\r\n            idFieldValue: '',\r\n            eventName: '',\r\n            organizerID: '',\r\n            entryToAdd: '',\r\n        };\r\n        this.handleScan = this.handleScan.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        this.handleText = this.handleText.bind(this);\r\n        this.handleJoinEvent = this.handleJoinEvent.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.handleRejoinEvent = this.handleRejoinEvent.bind(this);\r\n\r\n        this.confirmChild = React.createRef();\r\n        this.earlyJoinChild = React.createRef();\r\n        this.closedJoinChild = React.createRef();\r\n        this.blockChild = React.createRef();\r\n        this.notFoundChild = React.createRef();\r\n        this.rejoinChild = React.createRef();\r\n        this.rejoinClosedChild = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cookie = getCookie('UserID');\r\n        firebase.database().ref('/').once('value').then(snapshot => {\r\n            const root = snapshot.val();\r\n            const allCookies = root.attendees[cookie];\r\n            let entryToAdd = 'na';\r\n            if (allCookies && allCookies.currentEvent) {\r\n                const orgID = root.event[allCookies.currentEvent];\r\n                this.setState({ organizerID: (orgID ? orgID.organizer : '') }, () => {\r\n                    if (this.state.organizerID && this.state.organizerID !== '') {\r\n                        const event = root.organizer[this.state.organizerID].event[allCookies.currentEvent];\r\n                        if (event) {\r\n                            if (event.entries && this.props.scanEntry && event.entries[this.props.scanEntry]) {\r\n                                entryToAdd = this.props.scanEntry;\r\n                            }\r\n                            this.setState({\r\n                                eventName: event.eventData.name,\r\n                                eventID: allCookies.currentEvent,\r\n                                entryToAdd,\r\n                            }, () => {\r\n                                const votingState = this.getVotingState(event.eventData);\r\n                                if (votingState === 'closed') {\r\n                                    this.rejoinClosedChild.current.handleOpen();\r\n                                    firebase.database().ref(`attendees/${cookie}/currentEvent`).set('');\r\n                                    return;\r\n                                }\r\n                                this.rejoinChild.current.handleOpen();\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            } else if (this.props.scanID) {\r\n                if (this.props.scanEntry) {\r\n                    entryToAdd = this.props.scanEntry;\r\n                }\r\n                this.setState({\r\n                    eventID: this.props.scanID,\r\n                    entryToAdd,\r\n                });\r\n                this.requestConfirm();\r\n            }\r\n        });\r\n    }\r\n\r\n    getVotingState(event) {\r\n        const date = new Date().toISOString();\r\n        if (event.startVote === 'none' || (event.startVote > date)) { // not open yet\r\n            return 'before';\r\n        } else if (event.endVote === 'none' || (event.endVote > date)) { // open\r\n            return 'open';\r\n        }\r\n        return 'closed';\r\n    }\r\n\r\n    requestConfirm = () => {\r\n        firebase.database().ref('event/').once('value').then((snap) => {\r\n            const orgID = snap.val()[this.state.eventID];\r\n            this.setState({ organizerID: (orgID ? orgID.organizer : '') }, () => {\r\n                if (this.state.organizerID && this.state.organizerID !== '') {\r\n                    firebase.database().ref(`/organizer/${this.state.organizerID}/event/${this.state.eventID}`).once('value').then(snapshot => {\r\n                        const event = snapshot.val();\r\n                        if (!event) {\r\n                            // Event not found\r\n                            this.notFoundChild.current.handleOpen();\r\n                            return;\r\n                        }\r\n\r\n                        this.setState({ eventName: event.eventData.name }, () => {\r\n                            // Checks whether an even has not started or has ended\r\n                            const votingState = this.getVotingState(event.eventData);\r\n                            if (votingState === 'before') {\r\n                                this.earlyJoinChild.current.handleOpen();\r\n                                return;\r\n                            }\r\n\r\n                            if (votingState === 'closed') {\r\n                                this.closedJoinChild.current.handleOpen();\r\n                                return;\r\n                            }\r\n                            // Checks whether the user has submitted for this event previously\r\n                            const cookies = getCookie('UserID');\r\n                            firebase.database().ref(`attendees/${cookies}/pastEvents`).once('value').then(pastSnap => {\r\n                                const pastEvents = pastSnap.val();\r\n                                let check = false;\r\n                                for (let c in pastEvents) {\r\n                                    if (c === this.state.eventID) {\r\n                                        check = true;\r\n                                        this.blockChild.current.handleOpen();\r\n                                        return;\r\n                                    }\r\n                                }\r\n                                if (!check) {\r\n                                    this.hasRankings(this.state.eventID).then((shouldRejoin) => {\r\n                                        if (shouldRejoin) {\r\n                                            this.rejoinChild.current.handleOpen();\r\n                                        } else {\r\n                                            this.confirmChild.current.handleOpen();\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        });\r\n                    });\r\n                } else {\r\n                    // Event not found\r\n                    this.notFoundChild.current.handleOpen();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleScan(data) {\r\n        if (!this.dialogOpen() && data && data.toLowerCase().includes((`${config.Global.hostURL}/vote/`).toLowerCase())) {\r\n            const entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\r\n            let id = '';\r\n            if (entrySlash !== -1) {\r\n                id = data.substring(data.indexOf('/vote/') + 6, entrySlash).replace(/\\W/g, '');\r\n            } else {\r\n                id = data.substring(data.indexOf('/vote/') + 6).replace(/\\W/g, '');\r\n            }\r\n            const entryToAdd = this.props.scanEntry ? this.props.scanEntry : 'na';\r\n            this.setState({\r\n                eventID: id,\r\n                entryToAdd,\r\n            });\r\n            this.requestConfirm();\r\n        }\r\n    }\r\n\r\n    handleText() {\r\n        this.setState({\r\n            eventID: this.state.idFieldValue\r\n        }, () => {\r\n            this.requestConfirm();\r\n        });\r\n    }\r\n\r\n    hasRankings(eventId) {\r\n        const cookie = getCookie('UserID');\r\n        return firebase.database().ref(`/event/${eventId}`).once('value').then(snap => {\r\n            const event = snap.val();\r\n            if (event && event.attendees && event.attendees[cookie]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    handleRejoinEvent() {\r\n        const cookie = getCookie('UserID');\r\n        firebase.database().ref(`event/${this.state.eventID}/attendees/${cookie}/rankings/`).once('value').then(rankSnap => {\r\n            const rankings = rankSnap.val();\r\n            const items = [];\r\n            if (rankings) {\r\n                for (const item in rankings) {\r\n                    if (item) {\r\n                        items[rankings[item] - 1] = item;\r\n                    }\r\n                }\r\n            }\r\n            firebase.database().ref('organizer/').once('value').then(snapshot => {\r\n                const organizer = snapshot.val();\r\n                const event = organizer[this.state.organizerID].event[this.state.eventID];\r\n                const itemList = [];\r\n                for (let i = 0; i < items.length; i++) {\r\n                    const entry = event.entries[items[i]];\r\n                    if (entry) {\r\n                        itemList.push({\r\n                            name: entry.title,\r\n                            id: entry.id.toString(),\r\n                            presenters: entry.presenters,\r\n                            entry_dates: entry.entry_dates,\r\n                            showInfo: false,\r\n                        });\r\n                    }\r\n                }\r\n                this.props.updateItemsHandler(itemList);\r\n            })\r\n                .then(() => {\r\n                    this.handleJoinEvent();\r\n                });\r\n        });\r\n    }\r\n\r\n    handleJoinEvent() {\r\n        const cookie = getCookie('UserID');\r\n        const itemsRef = firebase.database().ref(`attendees/${cookie}`);\r\n        itemsRef.child('currentEvent').set(this.state.eventID);\r\n        this.props.handler(this.props.voteViews.RANK, this.state.eventID, this.state.organizerID, this.state.entryToAdd);\r\n    }\r\n\r\n    handleError(err) {\r\n        console.log(err);\r\n    }\r\n\r\n    keyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            this.handleText();\r\n        }\r\n    }\r\n\r\n    dialogOpen = () => {\r\n        if (this.rejoinChild.current.state.open || this.notFoundChild.current.state.open\r\n            || this.confirmChild.current.state.open || this.blockChild.current.state.open\r\n            || this.earlyJoinChild.current.state.open || this.closedJoinChild.current.state.open\r\n            || this.rejoinClosedChild.current.state.open) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RejoinEvent entryName={this.state.eventName} ref={this.rejoinChild} handler={this.handleRejoinEvent} />\r\n                <NotFound ref={this.notFoundChild} idType=\"Event\" id={this.state.eventID} />\r\n                <EntryConfirmation entryName={this.state.eventName} ref={this.confirmChild} handler={this.handleJoinEvent} />\r\n                <BlockJoin entryName={this.state.eventName} idType=\"Event\" ref={this.blockChild} />\r\n                <EarlyJoin eventName={this.state.eventName} ref={this.earlyJoinChild} />\r\n                <ClosedJoin eventName={this.state.eventName} ref={this.closedJoinChild} />\r\n                <RejoinClosed eventName={this.state.eventName} ref={this.rejoinClosedChild} />\r\n                <QrReader delay={300} onScan={this.handleScan} onError={this.handleError} style={{ width: '80%', margin: '20px auto 0px' }} />\r\n                <Typography variant=\"h5\" align=\"center\" className=\"QRText\">Scan QR Code or enter Event ID:</Typography>\r\n                <div className=\"textField\">\r\n                    <TextField\r\n                        id=\"outlined-dense\"\r\n                        label=\"Event ID\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.idFieldValue}\r\n                        onKeyDown={this.keyPress}\r\n                        onChange={e => this.setState({ idFieldValue: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"submitButtonContainer\">\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"homeButton\" onClick={this.handleText}>\r\n                        Join\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}