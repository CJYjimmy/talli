{"ast":null,"code":"var _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/routing/routing.js\";\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Voter from '../components/Voter';\nimport Organizer from '../components/Organizer';\nimport CookieInfo from '../components/CookieInfo';\n\nvar RouterMixin = require('react-mini-router').RouterMixin;\n/**\n * RoutedApp handles routing between each of the main views as well\n * as error handling when a non-existant page is queried\n */\n\n\nvar RoutedApp = createReactClass({\n  displayName: \"RoutedApp\",\n  getInitialState: function getInitialState() {\n    return {\n      loggedIn: this.props.loggedIn\n    };\n  },\n  mixins: [RouterMixin],\n  routes: {\n    '/': 'home',\n    '/vote': 'vote',\n    '/vote/:text': 'voteWithID',\n    '/vote/:event/:entry': 'joinWithEntry',\n    '/organizer': 'organizer',\n    '/cookies': 'cookies'\n  },\n  render: function render() {\n    return this.renderCurrentRoute();\n  },\n  home: function home() {\n    return React.createElement(MainPage, {\n      loggedIn: this.props.loggedIn,\n      onSuccess: this.onSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  },\n  vote: function vote() {\n    return React.createElement(Voter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  },\n  voteWithID: function voteWithID(text) {\n    return React.createElement(Voter, {\n      scanID: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  },\n  joinWithEntry: function joinWithEntry(event, entry) {\n    return React.createElement(Voter, {\n      scanID: event,\n      scanEntry: entry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  },\n  organizer: function organizer() {\n    return React.createElement(Organizer, {\n      logout: this.logout,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  },\n  cookies: function cookies() {\n    return React.createElement(CookieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  },\n  notFound: function notFound(path) {\n    return React.createElement(\"div\", {\n      className: \"not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Page Not Found: \", path);\n  },\n  onSuccess: function onSuccess(response) {\n    this.props.onSuccess(response);\n  },\n  logout: function logout() {\n    this.props.logout();\n  }\n});\nexport default RoutedApp;","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/routing/routing.js"],"names":["React","createReactClass","MainPage","Voter","Organizer","CookieInfo","RouterMixin","require","RoutedApp","getInitialState","loggedIn","props","mixins","routes","render","renderCurrentRoute","home","onSuccess","vote","voteWithID","text","joinWithEntry","event","entry","organizer","logout","user","cookies","notFound","path","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BD,WAAjD;AAEA;;;;;;AAIA,IAAME,SAAS,GAAGP,gBAAgB,CAAC;AAAA;AAC/BQ,EAAAA,eAD+B,6BACb;AACd,WAAO;AAAEC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD;AAAvB,KAAP;AACH,GAH8B;AAK/BE,EAAAA,MAAM,EAAE,CAACN,WAAD,CALuB;AAO/BO,EAAAA,MAAM,EAAE;AACJ,SAAK,MADD;AAEJ,aAAS,MAFL;AAGJ,mBAAe,YAHX;AAIJ,2BAAuB,eAJnB;AAKJ,kBAAc,WALV;AAMJ,gBAAY;AANR,GAPuB;AAgB/BC,EAAAA,MAhB+B,oBAgBtB;AACL,WAAO,KAAKC,kBAAL,EAAP;AACH,GAlB8B;AAoB/BC,EAAAA,IApB+B,kBAoBxB;AACH,WACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKO,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GA3B8B;AA6B/BC,EAAAA,IA7B+B,kBA6BxB;AACH,WAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GA/B8B;AAiC/BC,EAAAA,UAjC+B,sBAiCpBC,IAjCoB,EAiCd;AACb,WAAO,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAnC8B;AAqC/BC,EAAAA,aArC+B,yBAqCjBC,KArCiB,EAqCVC,KArCU,EAqCH;AACxB,WAAO,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAED,KAAf;AAAsB,MAAA,SAAS,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAvC8B;AAyC/BC,EAAAA,SAzC+B,uBAyCnB;AACR,WACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAE,KAAKC,MADjB;AAEI,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWe,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GAhD8B;AAkD/BC,EAAAA,OAlD+B,qBAkDrB;AACN,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GApD8B;AAsD/BC,EAAAA,QAtD+B,oBAsDtBC,IAtDsB,EAsDhB;AACX,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4CA,IAA5C,CAAP;AACH,GAxD8B;AA0D/BZ,EAAAA,SA1D+B,qBA0DrBa,QA1DqB,EA0DX;AAChB,SAAKnB,KAAL,CAAWM,SAAX,CAAqBa,QAArB;AACH,GA5D8B;AA8D/BL,EAAAA,MA9D+B,oBA8DtB;AACL,SAAKd,KAAL,CAAWc,MAAX;AACH;AAhE8B,CAAD,CAAlC;AAmEA,eAAejB,SAAf","sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Voter from '../components/Voter';\nimport Organizer from '../components/Organizer';\nimport CookieInfo from '../components/CookieInfo';\n\nconst RouterMixin = require('react-mini-router').RouterMixin;\n\n/**\n * RoutedApp handles routing between each of the main views as well\n * as error handling when a non-existant page is queried\n */\nconst RoutedApp = createReactClass({\n    getInitialState() {\n        return { loggedIn: this.props.loggedIn };\n    },\n\n    mixins: [RouterMixin],\n\n    routes: {\n        '/': 'home',\n        '/vote': 'vote',\n        '/vote/:text': 'voteWithID',\n        '/vote/:event/:entry': 'joinWithEntry',\n        '/organizer': 'organizer',\n        '/cookies': 'cookies'\n    },\n\n    render() {\n        return this.renderCurrentRoute();\n    },\n\n    home() {\n        return (\n            <MainPage\n                loggedIn={this.props.loggedIn}\n                onSuccess={this.onSuccess}\n            />\n        );\n    },\n\n    vote() {\n        return <Voter />;\n    },\n\n    voteWithID(text) {\n        return <Voter scanID={text} />;\n    },\n\n    joinWithEntry(event, entry) {\n        return <Voter scanID={event} scanEntry={entry} />;\n    },\n\n    organizer() {\n        return (\n            <Organizer\n                logout={this.logout}\n                user={this.props.user}\n            />\n        );\n    },\n\n    cookies() {\n        return <CookieInfo />;\n    },\n\n    notFound(path) {\n        return <div className=\"not-found\">Page Not Found: {path}</div>;\n    },\n\n    onSuccess(response) {\n        this.props.onSuccess(response);\n    },\n\n    logout() {\n        this.props.logout();\n    }\n});\n\nexport default RoutedApp;\n"]},"metadata":{},"sourceType":"module"}