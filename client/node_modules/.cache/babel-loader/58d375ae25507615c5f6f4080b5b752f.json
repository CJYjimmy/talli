{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/NewEventForm.js\";\nimport React, { Component } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport openSocket from 'socket.io-client';\nimport SheetDialog from './Dialogs/SheetDialog';\nimport ShowError from './Dialogs/ShowError';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase';\n\nvar config = require('../../config.json');\n\nvar socket = openSocket(config.Global.devMode ? \"http://localhost:\".concat(config.Global.serverPort) : \"\".concat(config.Global.sslEnabled ? \"https\" : \"http\", \"://\").concat(config.Global.hostURL));\n\nvar NewEventForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewEventForm, _Component);\n\n  function NewEventForm(props) {\n    var _this;\n\n    _classCallCheck(this, NewEventForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewEventForm).call(this, props));\n\n    _this.handleError = function (message) {\n      _this.showError.current.handleOpen(message);\n    };\n\n    _this.openSheetDialog = function () {\n      _this.sheetDialog.current.handleOpen();\n    };\n\n    _this.handleSubmit = function (e) {\n      // url check and next page if successful\n      e.preventDefault();\n      socket.emit('send_url', {\n        url: _this.state.eventData.sheetURL,\n        googleId: null,\n        eventId: null\n      });\n\n      _this.setState({\n        eventData: _this.state.eventData,\n        connecting: true\n      });\n    };\n\n    _this.addEntries = function () {\n      var item = _this.state.eventData;\n      var googleId = _this.props.user.googleId;\n      var ref = firebase.database().ref('event');\n      ref.once('value', function (snapshot) {\n        var maxEvent = 100;\n        snapshot.forEach(function (childSnapshot) {\n          maxEvent = childSnapshot.key;\n        });\n        item.id = 1 + parseInt(maxEvent, 10);\n        ref.child(item.id).set({\n          'organizer': googleId\n        });\n        var itemsRef = firebase.database().ref(\"organizer/\".concat(googleId, \"/event/\").concat(item.id));\n        item.startDate = item.startDate.toISOString();\n        item.endDate = item.endDate.toISOString();\n\n        if (item.automate) {\n          item.startVote = item.startVote.toISOString();\n          item.endVote = item.endVote.toISOString();\n        } else {\n          item.startVote = 'none';\n          item.endVote = 'none';\n        }\n\n        itemsRef.child('eventData').set(item);\n\n        _this.props.setEvent(item.id);\n\n        _this.props.handler(_this.props.orgViews.ADD);\n      });\n    };\n\n    _this.toggleAutomation = function () {\n      var oldData = _this.state.eventData;\n      oldData.automate = !_this.state.eventData.automate;\n\n      _this.setState({\n        eventData: oldData,\n        connecting: _this.state.connecting\n      });\n    };\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.eventData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          eventData: oldData,\n          connecting: _this.state.connecting\n        });\n      };\n    };\n\n    _this.handleDateChange = function (field) {\n      return function (date) {\n        var oldData = _this.state.eventData;\n        oldData[field] = date;\n\n        _this.setState({\n          eventData: oldData,\n          connecting: _this.state.connecting\n        });\n      };\n    };\n\n    _this.cancelAddition = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    _this.state = {\n      eventData: {\n        name: '',\n        id: '',\n        location: '',\n        startDate: new Date(),\n        endDate: new Date(),\n        automate: false,\n        sheetURL: '',\n        startVote: new Date(),\n        endVote: new Date(),\n        weights: {\n          first: 3,\n          second: 2,\n          third: 1\n        }\n      },\n      connecting: false\n    };\n    _this.sheetDialog = React.createRef();\n    _this.showError = React.createRef();\n    return _this;\n  }\n\n  _createClass(NewEventForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('error', function (data) {\n        console.log(data.error);\n\n        _this2.handleError(data.error);\n\n        _this2.setState({\n          eventData: _this2.state.eventData,\n          connecting: false\n        });\n      });\n      socket.on('url_confirm', function () {\n        _this2.addEntries();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      socket.removeAllListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"newEventForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(SheetDialog, {\n        ref: this.sheetDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(ShowError, {\n        ref: this.showError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Create a new event\"), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Event Details\"), React.createElement(TextField, {\n        required: true,\n        label: \"Event Name\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.name,\n        onChange: this.handleEventChange('name'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Location\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.location,\n        onChange: this.handleEventChange('location'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"urlField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Google Sheet URL\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.sheetURL,\n        onChange: this.handleEventChange('sheetURL'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Button, {\n        align: \"bottom\",\n        onClick: this.openSheetDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Sheet setup requirements\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        required: true,\n        label: \"Start Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startDate,\n        onChange: this.handleDateChange('startDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        required: true,\n        label: \"End Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endDate,\n        onChange: this.handleDateChange('endDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.eventData.automate,\n          onChange: function onChange() {\n            return _this3.toggleAutomation();\n          },\n          value: this.state.eventData.automate,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }),\n        label: \"Automate Voting Time Period?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), this.state.eventData.automate && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Start Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startVote,\n        onChange: this.handleDateChange('startVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"End Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endVote,\n        onChange: this.handleDateChange('endVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.cancelAddition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Next\"), this.state.connecting && React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Connecting to google sheet...\")));\n    }\n  }]);\n\n  return NewEventForm;\n}(Component);\n\nexport { NewEventForm as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/NewEventForm.js"],"names":["React","Component","DateFnsUtils","MuiPickersUtilsProvider","DateTimePicker","DatePicker","Typography","TextField","InputAdornment","Button","FormControlLabel","Switch","CalendarIcon","openSocket","SheetDialog","ShowError","firebase","config","require","socket","Global","devMode","serverPort","sslEnabled","hostURL","NewEventForm","props","handleError","message","showError","current","handleOpen","openSheetDialog","sheetDialog","handleSubmit","e","preventDefault","emit","url","state","eventData","sheetURL","googleId","eventId","setState","connecting","addEntries","item","user","ref","database","once","snapshot","maxEvent","forEach","childSnapshot","key","id","parseInt","child","set","itemsRef","startDate","toISOString","endDate","automate","startVote","endVote","setEvent","handler","orgViews","ADD","toggleAutomation","oldData","handleEventChange","field","event","target","value","handleDateChange","date","cancelAddition","MAIN","name","location","Date","weights","first","second","third","createRef","on","data","console","log","error","removeAllListeners","shrink","startAdornment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport openSocket from 'socket.io-client';\nimport SheetDialog from './Dialogs/SheetDialog';\nimport ShowError from './Dialogs/ShowError';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase';\n\n\nconst config = require('../../config.json');\n\nconst socket = openSocket(\n    (config.Global.devMode ?\n        `http://localhost:${config.Global.serverPort}` :\n        `${(config.Global.sslEnabled ? \"https\" : \"http\")}://${config.Global.hostURL}`\n    )\n);\n\nexport default class NewEventForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventData: {\n                name: '',\n                id: '',\n                location: '',\n                startDate: new Date(),\n                endDate: new Date(),\n                automate: false,\n                sheetURL: '',\n                startVote: new Date(),\n                endVote: new Date(),\n                weights: {\n                    first: 3,\n                    second: 2,\n                    third: 1\n                }\n            },\n            connecting: false,\n        };\n        this.sheetDialog = React.createRef();\n        this.showError = React.createRef();\n    }\n\n    componentDidMount() {\n        socket.on('error', (data) => {\n            console.log(data.error);\n            this.handleError(data.error);\n            this.setState({\n                eventData: this.state.eventData,\n                connecting: false\n            });\n        });\n\n        socket.on('url_confirm', () => {\n            this.addEntries();\n        });\n    }\n\n    componentWillUnmount() {\n        socket.removeAllListeners();\n    }\n\n    handleError = (message) => {\n        this.showError.current.handleOpen(message);\n    }\n\n    openSheetDialog = () => {\n        this.sheetDialog.current.handleOpen();\n    }\n\n    handleSubmit = (e) => {\n        // url check and next page if successful\n        e.preventDefault();\n        socket.emit('send_url', {\n            url: this.state.eventData.sheetURL,\n            googleId: null,\n            eventId: null\n        });\n        this.setState({\n            eventData: this.state.eventData,\n            connecting: true\n        });\n    }\n\n    // Sends form data to Firebase and navigates to the next page\n    addEntries = () => {\n        const item = this.state.eventData;\n        const googleId = this.props.user.googleId;\n\n        const ref = firebase.database().ref('event');\n        ref.once('value', (snapshot) => {\n            let maxEvent = 100;\n            snapshot.forEach((childSnapshot) => {\n                maxEvent = childSnapshot.key;\n            });\n\n            item.id = 1 + parseInt(maxEvent, 10);\n\n            ref.child(item.id).set({ 'organizer': googleId });\n\n            const itemsRef = firebase.database().ref(`organizer/${googleId}/event/${item.id}`);\n            item.startDate = item.startDate.toISOString();\n            item.endDate = item.endDate.toISOString();\n            if (item.automate) {\n                item.startVote = item.startVote.toISOString();\n                item.endVote = item.endVote.toISOString();\n            } else {\n                item.startVote = 'none';\n                item.endVote = 'none';\n            }\n            itemsRef.child('eventData').set(item);\n            this.props.setEvent(item.id);\n            this.props.handler(this.props.orgViews.ADD);\n        });\n    }\n\n    toggleAutomation = () => {\n        const oldData = this.state.eventData;\n        oldData.automate = !this.state.eventData.automate;\n        this.setState({\n            eventData: oldData,\n            connecting: this.state.connecting\n        });\n    }\n\n    handleEventChange = field => event => {\n        const oldData = this.state.eventData;\n        oldData[field] = event.target.value;\n        this.setState({\n            eventData: oldData,\n            connecting: this.state.connecting\n        });\n    }\n\n    handleDateChange = field => date => {\n        const oldData = this.state.eventData;\n        oldData[field] = date;\n        this.setState({\n            eventData: oldData,\n            connecting: this.state.connecting\n        });\n    }\n\n    cancelAddition = () => {\n        this.props.handler(this.props.orgViews.MAIN);\n    }\n\n    render() {\n        return (\n            <div className=\"newEventForm\">\n                <SheetDialog ref={this.sheetDialog} />\n                <ShowError ref={this.showError} />\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>Create a new event</Typography>\n                <form className=\"eventForm\" onSubmit={this.handleSubmit}>\n                    <Typography variant=\"h6\">Event Details</Typography>\n                    <TextField\n                        required\n                        label=\"Event Name\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.name}\n                        onChange={this.handleEventChange('name')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <TextField\n                        required\n                        label=\"Location\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.location}\n                        onChange={this.handleEventChange('location')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <div className=\"urlField\">\n                        <TextField\n                            required\n                            label=\"Google Sheet URL\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.sheetURL}\n                            onChange={this.handleEventChange('sheetURL')}\n                            InputLabelProps={{ shrink: true }}\n                        />\n                        <Button align=\"bottom\" onClick={this.openSheetDialog}>Sheet setup requirements</Button>\n                    </div>\n                    <br /> <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            label=\"Start Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.startDate}\n                            onChange={this.handleDateChange('startDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <DatePicker\n                            required\n                            label=\"End Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.endDate}\n                            onChange={this.handleDateChange('endDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <br /> <br />\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                checked={this.state.eventData.automate}\n                                onChange={() => this.toggleAutomation()}\n                                value={this.state.eventData.automate}\n                                color=\"primary\"\n                            />\n                        )}\n                        label=\"Automate Voting Time Period?\"\n                        labelPlacement=\"start\"\n                    />\n                    {this.state.eventData.automate && (\n                        <div>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Typography className=\"votePeriodText\">Start Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.startVote}\n                                    onChange={this.handleDateChange('startVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography className=\"votePeriodText\">End Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.endVote}\n                                    onChange={this.handleDateChange('endVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </div>\n                    )}\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={this.cancelAddition}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                        color=\"primary\"\n                    >\n                        Next\n                    </Button>\n                    { this.state.connecting && <Typography>Connecting to google sheet...</Typography>}\n                </form>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}