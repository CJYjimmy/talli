{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/EventList.js\";\nimport React from 'react';\nimport { Typography, Grid, Button } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase.js';\n/**\r\n * OrganizerView > EventList\r\n * Organizer landing page which shows them all\r\n * of their events and the option to add a new one.\r\n */\n\nvar EventList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventList, _React$Component);\n\n  function EventList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: []\n    };\n    return _this;\n  }\n\n  _createClass(EventList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var googleId = this.props.user.googleId;\n      var query = firebase.database().ref('organizer/' + googleId + '/event');\n      var allEvents = [];\n      query.on('value', function (snapshot) {\n        var events = snapshot.val();\n\n        for (var event in events) {\n          var refPrefix = '' + event + '/eventData';\n          var id = snapshot.child(refPrefix + '/id').val();\n          var name = snapshot.child(refPrefix + '/name').val();\n          var location = snapshot.child(refPrefix + '/location').val();\n          var startDate = snapshot.child(refPrefix + '/startDate').val();\n          var endDate = snapshot.child(refPrefix + '/endDate').val();\n          var automate = snapshot.child(refPrefix + '/automate').val();\n          var startVote = snapshot.child(refPrefix + '/startVote').val();\n          var endVote = snapshot.child(refPrefix + '/endVote').val();\n          allEvents.push({\n            id: id,\n            name: name,\n            location: location,\n            startDate: startDate,\n            endDate: endDate,\n            automate: automate,\n            startVote: startVote,\n            endVote: endVote\n          });\n        }\n\n        _this2.setState({\n          events: allEvents\n        });\n      });\n    }\n  }, {\n    key: \"parseDate\",\n    value: function parseDate(localeDate) {\n      var ind = localeDate.indexOf(',');\n      return localeDate.substring(0, ind);\n    }\n  }, {\n    key: \"AddEvent\",\n    value: function AddEvent() {\n      this.props.handler(this.props.orgViews.CREATE);\n      /* unimplemented */\n    }\n  }, {\n    key: \"viewEvent\",\n    value: function viewEvent(id) {\n      this.props.setEvent(id);\n      this.props.handler(this.props.orgViews.VIEW);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, sessionStorage.getItem('name'), \"'s Events\"), React.createElement(Grid, {\n        container: true,\n        className: \"organizerEvents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        className: \"eventContainer\",\n        id: \"addEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(AddCircleIcon, {\n        color: \"primary\",\n        id: \"addCircleIcon\",\n        onClick: function onClick() {\n          return _this3.AddEvent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), this.state.events.map(function (event, index) {\n        return React.createElement(Button, {\n          className: \"eventContainer\",\n          variant: \"contained\",\n          color: \"primary\",\n          id: \"openEvent\",\n          onClick: function onClick() {\n            return _this3.viewEvent(event.id);\n          },\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, event.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), _this3.parseDate(event.startDate), \" - \", _this3.parseDate(event.endDate), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), \"Voting period is \", event.automate ? \"automated.\" : \"not automated.\");\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventList;\n}(React.Component);\n\nexport { EventList as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/EventList.js"],"names":["React","Typography","Grid","Button","AddCircleIcon","firebase","EventList","state","events","googleId","props","user","query","database","ref","allEvents","on","snapshot","val","event","refPrefix","id","child","name","location","startDate","endDate","automate","startVote","endVote","push","setState","localeDate","ind","indexOf","substring","handler","orgViews","CREATE","setEvent","VIEW","sessionStorage","getItem","AddEvent","map","index","viewEvent","parseDate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, Grid, Button } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport '../component_style/Organizer.css';\r\nimport firebase from '../../firebase.js'\r\n\r\n/**\r\n * OrganizerView > EventList\r\n * Organizer landing page which shows them all\r\n * of their events and the option to add a new one.\r\n */\r\nexport default class EventList extends React.Component {\r\n\r\n    state = {\r\n        events: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        var googleId = this.props.user.googleId;\r\n        var query = firebase.database().ref('organizer/' + googleId + '/event');\r\n        let allEvents = [];\r\n        query.on('value', (snapshot) => {\r\n            let events = snapshot.val();\r\n            for (let event in events) {\r\n                let refPrefix = '' + event + '/eventData';\r\n                var id = snapshot.child(refPrefix + '/id').val();\r\n                var name = snapshot.child(refPrefix + '/name').val();\r\n                var location = snapshot.child(refPrefix + '/location').val();\r\n                var startDate = snapshot.child(refPrefix + '/startDate').val();\r\n                var endDate = snapshot.child(refPrefix + '/endDate').val();\r\n                var automate = snapshot.child(refPrefix + '/automate').val();\r\n                var startVote = snapshot.child(refPrefix + '/startVote').val();\r\n                var endVote = snapshot.child(refPrefix + '/endVote').val();\r\n\r\n                allEvents.push({\r\n                    id: id,\r\n                    name: name,\r\n                    location: location,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    automate: automate,\r\n                    startVote: startVote,\r\n                    endVote: endVote\r\n                });\r\n            }\r\n            this.setState({\r\n                events: allEvents\r\n            });\r\n        })\r\n    }\r\n\r\n    parseDate(localeDate) {\r\n        let ind = localeDate.indexOf(',');\r\n        return localeDate.substring(0, ind);\r\n    }\r\n\r\n    AddEvent() {\r\n        this.props.handler(this.props.orgViews.CREATE);\r\n        /* unimplemented */\r\n    }\r\n\r\n    viewEvent(id) {\r\n        this.props.setEvent(id);\r\n        this.props.handler(this.props.orgViews.VIEW);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant='h4' align='center' gutterBottom>{sessionStorage.getItem('name')}'s Events</Typography>\r\n                <Grid container className='organizerEvents'>\r\n                    <Grid item className='eventContainer' id='addEvent'>\r\n                        <AddCircleIcon color='primary' id='addCircleIcon' onClick={() => this.AddEvent()} />\r\n                    </Grid>\r\n                    {this.state.events.map((event, index) => (\r\n                        <Button className=\"eventContainer\" variant=\"contained\" color=\"primary\" id=\"openEvent\" onClick={() => this.viewEvent(event.id)} key={index}>\r\n                            {event.name}\r\n                            <br/>\r\n                            {this.parseDate(event.startDate)} - {this.parseDate(event.endDate)}\r\n                            <br/>\r\n                            <br/>\r\n                            Voting period is {event.automate ? \"automated.\" : \"not automated.\"}\r\n                        </Button>\r\n                    ))}\r\n                </Grid>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}