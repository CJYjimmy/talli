{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/ExportOrgData.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport qr from 'qr-image';\nimport JsPDF from 'jspdf';\n\nvar config = require('../../../config.json');\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nvar ExportOrgData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExportOrgData, _Component);\n\n  function ExportOrgData(props) {\n    var _this;\n\n    _classCallCheck(this, ExportOrgData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExportOrgData).call(this, props));\n\n    _this.toggleEntryExport = function () {\n      _this.setState({\n        exportEntry: !_this.state.exportEntry\n      });\n    };\n\n    _this.toggleEventExport = function () {\n      _this.setState({\n        exportEvent: !_this.state.exportEvent\n      });\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.generatePDF = function () {\n      if (_this.state.exportEntry || _this.state.exportEvent) {\n        // set up document\n        var doc = new JsPDF('portrait', 'mm', 'letter');\n        var title = '';\n        var qrCode;\n        var contents = '';\n\n        if (_this.state.exportEvent) {\n          // add event qr code\n          contents = 'Event';\n          title = \"Event ID: \".concat(_this.props.event.id);\n          qrCode = qr.imageSync(\"\".concat(config.Global.hostURL, \"/vote/\").concat(_this.props.event.id));\n          doc.addImage(qrCode, 'PNG', 18, 40, 180, 180); // (image, type, x, y, w, h)\n\n          doc.text(_this.props.event.name, 108, 40, 'center'); // (string, x, y, align)\n\n          doc.text(title, 108, 225, 'center');\n          doc.setFontType(\"bold\");\n          doc.text(\"Join the voting at tallivote.com!\", 108, 20, 'center');\n          doc.setFontType(\"regular\");\n          doc.setFont(\"helvetica\");\n        }\n\n        if (_this.state.exportEntry) {\n          // add entry qr codes\n          contents += 'Entries';\n          var entry;\n          var entryTitle;\n          var offset = 0;\n\n          for (var entryID in _this.props.event.entries) {\n            entry = _this.props.event.entries[entryID];\n\n            if (offset === 0) {\n              doc.addPage();\n            }\n\n            title = \"Entry ID: \".concat(entry.id);\n            entryTitle = doc.splitTextToSize(entry.title, 180);\n            qrCode = qr.imageSync(\"\".concat(config.Global.hostURL, \"/vote/\").concat(_this.props.event.id, \"/\").concat(entry.id));\n            doc.addImage(qrCode, 'PNG', 58, 20 + offset, 100, 100); // QR code\n\n            doc.text(entryTitle, 108, 20 + offset, 'center'); // entry title\n\n            doc.text(title, 108, 118 + offset, 'center'); // entry id\n\n            offset = offset === 0 ? 140 : 0;\n          }\n        } // save document to local machine\n\n\n        var nameNoSpaces = _this.props.event.name.replace(/\\s+/g, '');\n\n        doc.save(\"\".concat(nameNoSpaces).concat(contents, \"QRCodes.pdf\"));\n      }\n    };\n\n    _this.state = {\n      open: false,\n      exportEntry: true,\n      exportEvent: true\n    };\n    return _this;\n  }\n\n  _createClass(ExportOrgData, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" Export \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.exportEvent,\n          onChange: function onChange() {\n            return _this2.toggleEventExport();\n          },\n          value: this.state.exportEvent,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }),\n        label: \"Export Event QR\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.exportEntry,\n          onChange: function onChange() {\n            return _this2.toggleEntryExport();\n          },\n          value: this.state.exportEntry,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }),\n        label: \"Export Entry QR\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        onClick: this.generatePDF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Export QR to PDF\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Go Back\"))));\n    }\n  }]);\n\n  return ExportOrgData;\n}(Component);\n\nexport { ExportOrgData as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/ExportOrgData.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Button","FormControlLabel","Switch","qr","JsPDF","config","require","Transition","props","ExportOrgData","toggleEntryExport","setState","exportEntry","state","toggleEventExport","exportEvent","handleOpen","open","handleClose","generatePDF","doc","title","qrCode","contents","event","id","imageSync","Global","hostURL","addImage","text","name","setFontType","setFont","entry","entryTitle","offset","entryID","entries","addPage","splitTextToSize","nameNoSpaces","replace","save"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, FormControlLabel, Switch } from '@material-ui/core';\r\nimport qr from 'qr-image';\r\nimport JsPDF from 'jspdf';\r\n\r\nconst config = require('../../../config.json');\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport default class ExportOrgData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            exportEntry: true,\r\n            exportEvent: true\r\n        };\r\n    }\r\n\r\n    toggleEntryExport = () => {\r\n        this.setState({\r\n            exportEntry: !this.state.exportEntry,\r\n        });\r\n    }\r\n\r\n    toggleEventExport = () => {\r\n        this.setState({\r\n            exportEvent: !this.state.exportEvent,\r\n        });\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    generatePDF = () => {\r\n        if (this.state.exportEntry || this.state.exportEvent) {\r\n            // set up document\r\n            const doc = new JsPDF('portrait', 'mm', 'letter');\r\n            let title = '';\r\n            let qrCode;\r\n            let contents = '';\r\n\r\n            if (this.state.exportEvent) {\r\n                // add event qr code\r\n                contents = 'Event';\r\n                title = `Event ID: ${this.props.event.id}`;\r\n                qrCode = qr.imageSync(`${config.Global.hostURL}/vote/${this.props.event.id}`);\r\n                doc.addImage(qrCode, 'PNG', 18, 40, 180, 180); // (image, type, x, y, w, h)\r\n                doc.text(this.props.event.name, 108, 40, 'center'); // (string, x, y, align)\r\n                doc.text(title, 108, 225, 'center');\r\n                doc.setFontType(\"bold\");\r\n                doc.text(\"Join the voting at tallivote.com!\", 108, 20, 'center');\r\n                doc.setFontType(\"regular\");\r\n                doc.setFont(\"helvetica\");\r\n            }\r\n\r\n            if (this.state.exportEntry) {\r\n                // add entry qr codes\r\n                contents += 'Entries';\r\n                let entry;\r\n                let entryTitle;\r\n                let offset = 0;\r\n                for (let entryID in this.props.event.entries) {\r\n                    entry = this.props.event.entries[entryID];\r\n                    if (offset === 0) { doc.addPage(); }\r\n                    title = `Entry ID: ${entry.id}`;\r\n                    entryTitle = doc.splitTextToSize(entry.title, 180);\r\n                    qrCode = qr.imageSync(`${config.Global.hostURL}/vote/${this.props.event.id}/${entry.id}`);\r\n                    doc.addImage(qrCode, 'PNG', 58, 20 + offset, 100, 100); // QR code\r\n                    doc.text(entryTitle, 108, 20 + offset, 'center'); // entry title\r\n                    doc.text(title, 108, 118 + offset, 'center'); // entry id\r\n                    offset = (offset === 0) ? 140 : 0;\r\n                }\r\n            }\r\n            // save document to local machine\r\n            const nameNoSpaces = this.props.event.name.replace(/\\s+/g, '');\r\n            doc.save(`${nameNoSpaces}${contents}QRCodes.pdf`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    TransitionComponent={Transition}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle> Export </DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={(\r\n                                <Switch\r\n                                    checked={this.state.exportEvent}\r\n                                    onChange={() => this.toggleEventExport()}\r\n                                    value={this.state.exportEvent}\r\n                                    color=\"primary\"\r\n                                />\r\n                            )}\r\n                            label=\"Export Event QR\"\r\n                            labelPlacement=\"start\"\r\n                        /> <br />\r\n                        <FormControlLabel\r\n                            control={(\r\n                                <Switch\r\n                                    checked={this.state.exportEntry}\r\n                                    onChange={() => this.toggleEntryExport()}\r\n                                    value={this.state.exportEntry}\r\n                                    color=\"primary\"\r\n                                />\r\n                            )}\r\n                            label=\"Export Entry QR\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                        <br /><br />\r\n                        <Button variant=\"contained\" onClick={this.generatePDF}>Export QR to PDF</Button>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">Go Back</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}