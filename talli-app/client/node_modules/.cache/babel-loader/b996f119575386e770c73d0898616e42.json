{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/VoterView/RankingContainer.js\";\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\nimport SliderIcon from '@material-ui/icons/Sort';\nimport PlusIcon from '@material-ui/icons/ControlPoint';\nimport '../component_style/RankingContainer.css';\nimport { Typography } from '@material-ui/core';\nvar DragHandle = SortableHandle(function () {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \" \", React.createElement(SliderIcon, {\n    className: \"Sliders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n});\nvar SortableItem = SortableElement(function (_ref) {\n  var value = _ref.value;\n  return React.createElement(\"li\", {\n    className: \"rankings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, value, React.createElement(DragHandle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n});\nvar SortableList = SortableContainer(function (_ref2) {\n  var items = _ref2.items;\n  return React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, items.map(function (value, index) {\n    return React.createElement(SortableItem, {\n      key: \"item-\".concat(index),\n      index: index,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }));\n});\n\nvar SortContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SortContainer, _Component);\n\n  function SortContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SortContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SortContainer).call(this, props));\n    /**\r\n     * TODO: This list should be populated as empty for first-time\r\n     *       voters or with the previous entries for voters returning\r\n     *       to their previous session\r\n     */\n\n    _this.eventName = 'My Event';\n\n    _this.onSortEnd = function (_ref3) {\n      var oldIndex = _ref3.oldIndex,\n          newIndex = _ref3.newIndex;\n\n      _this.setState({\n        items: arrayMove(_this.state.items, oldIndex, newIndex)\n      });\n    };\n\n    _this.state = {\n      items: ['Entry A', 'Entry B', 'Entry C']\n    };\n    _this.handleAddEvent = _this.handleAddEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SortContainer, [{\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(e) {\n      e.preventDefault();\n      this.props.handler(this.props.voteViews.ADD);\n    } // TODO: Set event name here\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        className: \"eventName\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.eventName), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(PlusIcon, {\n        className: \"AddEvent\",\n        onClick: this.handleAddEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SortContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(SortableList, {\n        items: this.state.items,\n        onSortEnd: this.onSortEnd,\n        lockAxis: \"y\",\n        useDragHandle: true,\n        helperClass: \"sortHelp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SortContainer;\n}(Component);\n\nexport { SortContainer as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/VoterView/RankingContainer.js"],"names":["React","Component","SortableContainer","SortableElement","SortableHandle","arrayMove","SliderIcon","PlusIcon","Typography","DragHandle","SortableItem","value","SortableList","items","map","index","SortContainer","props","eventName","onSortEnd","oldIndex","newIndex","setState","state","handleAddEvent","bind","e","preventDefault","handler","voteViews","ADD","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\r\nimport SliderIcon from '@material-ui/icons/Sort';\r\nimport PlusIcon from '@material-ui/icons/ControlPoint';\r\nimport '../component_style/RankingContainer.css';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst DragHandle = SortableHandle(() => <span> <SliderIcon className=\"Sliders\" /></span>);\r\n\r\nconst SortableItem = SortableElement(({ value }) =>\r\n    <li className=\"rankings\">{value}<DragHandle /></li>\r\n);\r\n\r\nconst SortableList = SortableContainer(({ items }) => {\r\n    return (\r\n        <ol>\r\n            {items.map((value, index) => (\r\n                <SortableItem key={`item-${index}`} index={index} value={value} />\r\n            ))}\r\n        </ol>\r\n    );\r\n});\r\n\r\nexport default class SortContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         * TODO: This list should be populated as empty for first-time\r\n         *       voters or with the previous entries for voters returning\r\n         *       to their previous session\r\n         */ \r\n        this.state = { items: ['Entry A', 'Entry B', 'Entry C'] };\r\n        this.handleAddEvent = this.handleAddEvent.bind(this);\r\n    }\r\n\r\n    handleAddEvent(e) {\r\n        e.preventDefault();\r\n        this.props.handler(this.props.voteViews.ADD);\r\n    }\r\n\r\n    // TODO: Set event name here\r\n    eventName = 'My Event';\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState({\r\n            items: arrayMove(this.state.items, oldIndex, newIndex),\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant='h4' align='center' className=\"eventName\" gutterBottom>{this.eventName}</Typography>\r\n                <div style={{textAlign: 'center'}}>\r\n                    <PlusIcon className=\"AddEvent\" onClick={this.handleAddEvent} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"SortContainer\">\r\n                        <SortableList items={this.state.items} onSortEnd={this.onSortEnd} lockAxis='y'\r\n                            useDragHandle={true} helperClass='sortHelp' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}