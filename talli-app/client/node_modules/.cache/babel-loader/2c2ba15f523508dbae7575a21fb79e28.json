{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/Organizer.js\";\nimport React from 'react';\nimport NewEvent from './OrganizerView/NewEventForm';\nimport EventList from './OrganizerView/EventList';\nimport AddEntry from './OrganizerView/AddEntryOrg';\nimport ViewEvent from './OrganizerView/ViewEvent';\nimport { GoogleLogout } from 'react-google-login';\nimport { navigate } from 'react-mini-router';\nimport { Button } from '@material-ui/core';\nimport './component_style/Organizer.css';\nvar orgViews = {\n  MAIN: 'EventList',\n  CREATE: 'NewEvent',\n  ADD: 'AddEntry',\n  VIEW: 'ViewEvent'\n  /**\r\n   * Organizer/Event Management view, unimplemented\r\n   */\n\n};\n\nvar Organizer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Organizer, _React$Component);\n\n  function Organizer(props) {\n    var _this;\n\n    _classCallCheck(this, Organizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Organizer).call(this, props));\n    _this.state = {\n      curView: orgViews.MAIN,\n      curEventID: ''\n    };\n    _this.setView = _this.setView.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setEvent = _this.setEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Organizer, [{\n    key: \"ChangeView\",\n    value: function ChangeView(page) {\n      navigate(page);\n    }\n  }, {\n    key: \"setView\",\n    value: function setView(newView) {\n      this.setState({\n        curView: newView\n      });\n    }\n  }, {\n    key: \"setEvent\",\n    value: function setEvent(eventID) {\n      this.setState({\n        curEventID: eventID\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.ChangeView('/');\n      this.props.logout();\n    }\n  }, {\n    key: \"getCurrView\",\n    value: function getCurrView() {\n      switch (this.state.curView) {\n        case orgViews.CREATE:\n          return React.createElement(NewEvent, {\n            orgViews: orgViews,\n            handler: this.setView,\n            setEvent: this.setEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n\n        case orgViews.ADD:\n          return React.createElement(AddEntry, {\n            orgViews: orgViews,\n            handler: this.setView,\n            curEvent: this.state.curEventID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n\n        case orgViews.VIEW:\n          return React.createElement(ViewEvent, {\n            orgViews: orgViews,\n            handler: this.setView,\n            curEvent: this.state.curEventID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(EventList, {\n            orgViews: orgViews,\n            handler: this.setView,\n            setEvent: this.setEvent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(GoogleLogout, {\n        buttonText: \"Logout\",\n        render: function render(renderProps) {\n          return React.createElement(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            className: \"buttons\",\n            onClick: renderProps.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"Logout\");\n        },\n        onLogoutSuccess: this.logout.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.getCurrView()));\n    }\n  }]);\n\n  return Organizer;\n}(React.Component);\n\nexport { Organizer as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/Organizer.js"],"names":["React","NewEvent","EventList","AddEntry","ViewEvent","GoogleLogout","navigate","Button","orgViews","MAIN","CREATE","ADD","VIEW","Organizer","props","state","curView","curEventID","setView","bind","setEvent","page","newView","setState","eventID","ChangeView","logout","renderProps","onClick","getCurrView","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,iCAAP;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,MAAM,EAAE,UAFK;AAGbC,EAAAA,GAAG,EAAE,UAHQ;AAIbC,EAAAA,IAAI,EAAE;AAGV;;;;AAPiB,CAAjB;;IAUqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAER,QAAQ,CAACC,IAApB;AAA0BQ,MAAAA,UAAU,EAAE;AAAtC,KAAb;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AAJe;AAKlB;;;;+BAEUE,I,EAAM;AACbf,MAAAA,QAAQ,CAACe,IAAD,CAAR;AACH;;;4BAEOC,O,EAAS;AACb,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEM;AAAX,OAAd;AACH;;;6BAEQE,O,EAAS;AACd,WAAKD,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEO;AAAd,OAAd;AACH;;;6BAEQ;AACL,WAAKC,UAAL,CAAgB,GAAhB;AACA,WAAKX,KAAL,CAAWY,MAAX;AACH;;;kCAEa;AACV,cAAO,KAAKX,KAAL,CAAWC,OAAlB;AACI,aAAKR,QAAQ,CAACE,MAAd;AACI,iBAAQ,oBAAC,QAAD;AAAU,YAAA,QAAQ,EAAEF,QAApB;AAA8B,YAAA,OAAO,EAAE,KAAKU,OAA5C;AAAqD,YAAA,QAAQ,EAAE,KAAKE,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;;AACJ,aAAKZ,QAAQ,CAACG,GAAd;AACI,iBAAQ,oBAAC,QAAD;AAAU,YAAA,QAAQ,EAAEH,QAApB;AAA8B,YAAA,OAAO,EAAE,KAAKU,OAA5C;AAAqD,YAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;;AACJ,aAAKT,QAAQ,CAACI,IAAd;AACI,iBAAQ,oBAAC,SAAD;AAAW,YAAA,QAAQ,EAAEJ,QAArB;AAA+B,YAAA,OAAO,EAAE,KAAKU,OAA7C;AAAsD,YAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;;AACJ;AACI,iBAAQ,oBAAC,SAAD;AAAW,YAAA,QAAQ,EAAET,QAArB;AAA+B,YAAA,OAAO,EAAE,KAAKU,OAA7C;AAAsD,YAAA,QAAQ,EAAE,KAAKE,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AARR;AAUH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AACI,QAAA,UAAU,EAAC,QADf;AAEI,QAAA,MAAM,EAAE,gBAAAO,WAAW;AAAA,iBACf,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,WAAlC;AAA8C,YAAA,SAAS,EAAC,SAAxD;AAAkE,YAAA,OAAO,EAAEA,WAAW,CAACC,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADe;AAAA,SAFvB;AAKI,QAAA,eAAe,EAAE,KAAKF,MAAL,CAAYP,IAAZ,CAAiB,IAAjB,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKU,WAAL,EAAN,CATJ,CADJ;AAaH;;;;EApDkC7B,KAAK,CAAC8B,S;;SAAxBjB,S","sourcesContent":["import React from 'react';\r\nimport NewEvent from './OrganizerView/NewEventForm';\r\nimport EventList from './OrganizerView/EventList';\r\nimport AddEntry from './OrganizerView/AddEntryOrg';\r\nimport ViewEvent from './OrganizerView/ViewEvent';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { navigate } from 'react-mini-router';\r\nimport { Button } from '@material-ui/core';\r\nimport './component_style/Organizer.css';\r\n\r\nconst orgViews = {\r\n    MAIN: 'EventList',\r\n    CREATE: 'NewEvent',\r\n    ADD: 'AddEntry',\r\n    VIEW: 'ViewEvent',\r\n}\r\n\r\n/**\r\n * Organizer/Event Management view, unimplemented\r\n */\r\nexport default class Organizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { curView: orgViews.MAIN, curEventID: '' };\r\n        this.setView = this.setView.bind(this);\r\n        this.setEvent = this.setEvent.bind(this);\r\n    }\r\n\r\n    ChangeView(page) {\r\n        navigate(page);\r\n    }\r\n\r\n    setView(newView) {\r\n        this.setState({ curView: newView });\r\n    }\r\n\r\n    setEvent(eventID) {\r\n        this.setState({ curEventID: eventID });\r\n    }\r\n\r\n    logout() {\r\n        this.ChangeView('/');\r\n        this.props.logout();\r\n    }\r\n\r\n    getCurrView() {\r\n        switch(this.state.curView) {\r\n            case orgViews.CREATE:\r\n                return( <NewEvent orgViews={orgViews} handler={this.setView} setEvent={this.setEvent} /> );\r\n            case orgViews.ADD:\r\n                return( <AddEntry orgViews={orgViews} handler={this.setView} curEvent={this.state.curEventID} /> );\r\n            case orgViews.VIEW:\r\n                return( <ViewEvent orgViews={orgViews} handler={this.setView} curEvent={this.state.curEventID} /> );\r\n            default:\r\n                return( <EventList orgViews={orgViews} handler={this.setView} setEvent={this.setEvent} /> ); \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <GoogleLogout \r\n                    buttonText=\"Logout\"\r\n                    render={renderProps => (\r\n                        <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={renderProps.onClick}>Logout</Button>\r\n                    )}\r\n                    onLogoutSuccess={this.logout.bind(this)} />\r\n                {/* temp solution to logout issue */}\r\n                {/* <Button variant=\"contained\" color=\"secondary\" className=\"buttons\" onClick={this.logout.bind(this)}>Logout</Button> */}\r\n                <div>{this.getCurrView()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}