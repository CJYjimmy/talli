{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/RankingContainer.js\";\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\nimport SliderIcon from '@material-ui/icons/Sort';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { Typography, Button } from '@material-ui/core';\nimport BellIcon from '@material-ui/icons/NotificationImportant';\nimport openSocket from 'socket.io-client';\nimport firebase from '../../firebase';\nimport { getCookie } from '../../cookies';\nimport SubmitConfirm from './Dialogs/SubmitConfirm';\nimport Countdown from './Countdown';\nimport EventClosed from './Dialogs/EventClosed';\nimport '../component_style/RankingContainer.css';\n\nvar config = require('../../config.json');\n\nvar socket = openSocket(config.Global.devMode ? \"http://localhost:\".concat(config.Global.serverPort) : \"\".concat(config.Global.sslEnabled ? \"https\" : \"http\", \"://\").concat(config.Global.hostURL, \":\").concat(config.Global.serverPort));\nvar DragHandle = SortableHandle(function () {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(SliderIcon, {\n    className: \"Sliders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n});\n\nvar SortContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SortContainer, _Component);\n\n  function SortContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SortContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SortContainer).call(this, props));\n\n    _this.onSortEnd = function (_ref) {\n      var oldIndex = _ref.oldIndex,\n          newIndex = _ref.newIndex;\n\n      _this.setState({\n        items: arrayMove(_this.state.items, oldIndex, newIndex)\n      });\n\n      _this.updateDatabaseRankings(_this.state.items);\n    };\n\n    _this.toggleShowInfo = function (item) {\n      var oldItems = _this.state.items;\n      oldItems[item].showInfo = !oldItems[item].showInfo;\n\n      _this.setState({\n        items: oldItems\n      });\n    };\n\n    _this.state = {\n      items: [],\n      event: {\n        id: '',\n        name: '',\n        location: '',\n        startDate: '',\n        endDate: '',\n        automate: false,\n        startVote: '',\n        endVote: '',\n        entries: []\n      }\n    };\n    _this.handleAddEvent = _this.handleAddEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitConfirm = _this.submitConfirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitted = _this.submitted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countdownFinished = _this.countdownFinished.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirmChild = React.createRef();\n    _this.closedChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(SortContainer, [{\n    key: \"handleAddEvent\",\n    value: function handleAddEvent(e) {\n      e.preventDefault();\n      this.props.updateItemsHandler(this.state.items);\n      this.props.handler(this.props.voteViews.ADD);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        items: this.props.rankItems\n      }, function () {\n        firebase.database().ref(\"/organizer/\".concat(_this2.props.organizer, \"/event/\")).once('value').then(function (snapshot) {\n          var events = snapshot.val();\n\n          if (!events || !events[_this2.props.eventID]) {\n            // Error\n            console.log('DEV ERROR');\n          }\n\n          var eventBase = events[_this2.props.eventID].eventData;\n          var eventEntries = events[_this2.props.eventID].entries;\n          var itemList = _this2.state.items;\n\n          if (eventEntries && _this2.props.entryToAdd && !_this2.state.items.some(function (e) {\n            return e.id === _this2.props.entryToAdd;\n          })) {\n            var entryId = _this2.props.entryToAdd;\n            itemList.push({\n              name: eventEntries[entryId].title,\n              id: entryId,\n              presenters: eventEntries[entryId].presenters,\n              entry_dates: eventEntries[entryId].entry_dates,\n              showInfo: false\n            });\n\n            _this2.updateDatabaseRankings(itemList);\n          }\n\n          _this2.setState({\n            event: {\n              id: eventBase.id,\n              name: eventBase.name,\n              location: eventBase.location,\n              startDate: eventBase.startDate,\n              endDate: eventBase.endDate,\n              automate: eventBase.automate,\n              startVote: eventBase.startVote,\n              endVote: eventBase.endVote,\n              entries: eventEntries\n            },\n            items: itemList\n          }, function () {\n            _this2.props.updateItemsHandler(_this2.state.items);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"updateDatabaseRankings\",\n    value: function updateDatabaseRankings(items) {\n      var cookie = getCookie('UserID');\n      var ref = firebase.database().ref(\"event/\".concat(this.props.eventID, \"/attendees/\").concat(cookie, \"/rankings/\"));\n\n      for (var i = 0; i < items.length; i++) {\n        ref.child(items[i].id).set(i + 1);\n      }\n    }\n  }, {\n    key: \"submitConfirm\",\n    value: function submitConfirm() {\n      this.props.updateItemsHandler(this.state.items);\n      this.confirmChild.current.handleOpen();\n    }\n  }, {\n    key: \"submitted\",\n    value: function submitted() {\n      var items = this.state.items;\n      var organizerId = this.props.organizer;\n      var eventId = this.state.event.id;\n      socket.emit('send_votes', {\n        eventId: eventId,\n        organizerId: organizerId,\n        votes: items\n      });\n      this.props.handler(this.props.voteViews.SUBMITTED);\n    }\n  }, {\n    key: \"countdownFinished\",\n    value: function countdownFinished() {\n      var cookie = getCookie('UserID');\n      var itemsRef = firebase.database().ref(\"attendees/\".concat(cookie));\n      itemsRef.child('currentEvent').set('');\n      itemsRef.child(\"pastEvents/\".concat(this.props.eventID, \"/\")).set(this.props.eventID);\n      this.closedChild.current.handleOpen();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var SortableItem = SortableElement(function (_ref2) {\n        var value = _ref2.value,\n            item = _ref2.item;\n        return React.createElement(\"li\", {\n          className: \"rankings\",\n          onClick: function onClick() {\n            return _this3.toggleShowInfo(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"rankNumber\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, item + 1), React.createElement(\"div\", {\n          id: \"rankTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, value.name, value.showInfo ? React.createElement(\"div\", {\n          id: \"expandedInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"By:\"), \" \", value.presenters, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Attendance:\"), \" \", value.entry_dates) : ''), React.createElement(DragHandle, {\n          id: \"rankHandle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }));\n      });\n      var SortableList = SortableContainer(function (_ref3) {\n        var items = _ref3.items;\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, items.length !== 0 ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Tap the Plus to add an entry\"), items.map(function (value, index) {\n          return React.createElement(SortableItem, {\n            key: \"item-\".concat(index),\n            item: index,\n            index: index,\n            value: value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          });\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(EventClosed, {\n        handler: this.submitted,\n        ref: this.closedChild,\n        eventName: this.state.event.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(SubmitConfirm, {\n        handler: this.submitted,\n        ref: this.confirmChild,\n        items: this.state.items,\n        eventID: this.state.event.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        className: \"eventName\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.event.name), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(AddCircleIcon, {\n        className: \"AddEvent\",\n        id: \"addEntry\",\n        color: \"secondary\",\n        onClick: this.handleAddEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SortContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(SortableList, {\n        items: this.state.items,\n        onSortEnd: this.onSortEnd,\n        lockAxis: \"y\",\n        useDragHandle: true,\n        helperClass: \"sortHelp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), this.state.event.endVote !== 'none' ? React.createElement(\"div\", {\n        className: \"SubmitDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(BellIcon, {\n        className: \"BellIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SubmitText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Voting will close in:\", React.createElement(Countdown, {\n        date: this.state.event.endVote,\n        onFinished: this.countdownFinished,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submitConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \" Submit \"))) : React.createElement(\"div\", {\n        className: \"CenterSubmitDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CenterButtonDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submitConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \" Submit \"))));\n    }\n  }]);\n\n  return SortContainer;\n}(Component);\n\nexport { SortContainer as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/RankingContainer.js"],"names":["React","Component","SortableContainer","SortableElement","SortableHandle","arrayMove","SliderIcon","AddCircleIcon","Typography","Button","BellIcon","openSocket","firebase","getCookie","SubmitConfirm","Countdown","EventClosed","config","require","socket","Global","devMode","serverPort","sslEnabled","hostURL","DragHandle","SortContainer","props","onSortEnd","oldIndex","newIndex","setState","items","state","updateDatabaseRankings","toggleShowInfo","item","oldItems","showInfo","event","id","name","location","startDate","endDate","automate","startVote","endVote","entries","handleAddEvent","bind","submitConfirm","submitted","countdownFinished","confirmChild","createRef","closedChild","e","preventDefault","updateItemsHandler","handler","voteViews","ADD","rankItems","database","ref","organizer","once","then","snapshot","events","val","eventID","console","log","eventBase","eventData","eventEntries","itemList","entryToAdd","some","entryId","push","title","presenters","entry_dates","cookie","i","length","child","set","current","handleOpen","organizerId","eventId","emit","votes","SUBMITTED","itemsRef","SortableItem","value","SortableList","map","index","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement, SortableHandle, arrayMove } from 'react-sortable-hoc';\r\nimport SliderIcon from '@material-ui/icons/Sort';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport BellIcon from '@material-ui/icons/NotificationImportant';\r\nimport openSocket from 'socket.io-client';\r\nimport firebase from '../../firebase';\r\nimport { getCookie } from '../../cookies';\r\nimport SubmitConfirm from './Dialogs/SubmitConfirm';\r\nimport Countdown from './Countdown';\r\nimport EventClosed from './Dialogs/EventClosed';\r\nimport '../component_style/RankingContainer.css';\r\n\r\nconst config = require('../../config.json');\r\n\r\nconst socket = openSocket(\r\n    (config.Global.devMode ?\r\n        `http://localhost:${config.Global.serverPort}` :\r\n        `${(config.Global.sslEnabled ? \"https\" : \"http\")}://${config.Global.hostURL}:${config.Global.serverPort}`\r\n    )\r\n);\r\nconst DragHandle = SortableHandle(() => <span><SliderIcon className=\"Sliders\" /></span>);\r\n\r\nexport default class SortContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            event: {\r\n                id: '',\r\n                name: '',\r\n                location: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                automate: false,\r\n                startVote: '',\r\n                endVote: '',\r\n                entries: []\r\n            },\r\n        };\r\n        this.handleAddEvent = this.handleAddEvent.bind(this);\r\n        this.submitConfirm = this.submitConfirm.bind(this);\r\n        this.submitted = this.submitted.bind(this);\r\n        this.countdownFinished = this.countdownFinished.bind(this);\r\n\r\n        this.confirmChild = React.createRef();\r\n        this.closedChild = React.createRef();\r\n    }\r\n\r\n    handleAddEvent(e) {\r\n        e.preventDefault();\r\n        this.props.updateItemsHandler(this.state.items);\r\n        this.props.handler(this.props.voteViews.ADD);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            items: this.props.rankItems,\r\n        }, () => {\r\n            firebase.database().ref(`/organizer/${this.props.organizer}/event/`).once('value').then(snapshot => {\r\n                const events = snapshot.val();\r\n                if (!events || !events[this.props.eventID]) {\r\n                    // Error\r\n                    console.log('DEV ERROR');\r\n                }\r\n                const eventBase = events[this.props.eventID].eventData;\r\n                const eventEntries = events[this.props.eventID].entries;\r\n                const itemList = this.state.items;\r\n                if (eventEntries && this.props.entryToAdd && !this.state.items.some(e => e.id === this.props.entryToAdd)) {\r\n                    const entryId = this.props.entryToAdd;\r\n                    itemList.push({\r\n                        name: eventEntries[entryId].title,\r\n                        id: entryId,\r\n                        presenters: eventEntries[entryId].presenters,\r\n                        entry_dates: eventEntries[entryId].entry_dates,\r\n                        showInfo: false,\r\n                    });\r\n                    this.updateDatabaseRankings(itemList);\r\n                }\r\n                this.setState({\r\n                    event: {\r\n                        id: eventBase.id,\r\n                        name: eventBase.name,\r\n                        location: eventBase.location,\r\n                        startDate: eventBase.startDate,\r\n                        endDate: eventBase.endDate,\r\n                        automate: eventBase.automate,\r\n                        startVote: eventBase.startVote,\r\n                        endVote: eventBase.endVote,\r\n                        entries: eventEntries\r\n                    },\r\n                    items: itemList,\r\n                }, () => {\r\n                    this.props.updateItemsHandler(this.state.items);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState({\r\n            items: arrayMove(this.state.items, oldIndex, newIndex),\r\n        });\r\n        this.updateDatabaseRankings(this.state.items);\r\n    };\r\n\r\n    updateDatabaseRankings(items) {\r\n        const cookie = getCookie('UserID');\r\n        const ref = firebase.database().ref(`event/${this.props.eventID}/attendees/${cookie}/rankings/`);\r\n        for (let i = 0; i < items.length; i++) {\r\n            ref.child(items[i].id).set(i + 1);\r\n        }\r\n    }\r\n\r\n    submitConfirm() {\r\n        this.props.updateItemsHandler(this.state.items);\r\n        this.confirmChild.current.handleOpen();\r\n    }\r\n\r\n    submitted() {\r\n        const items = this.state.items;\r\n        const organizerId = this.props.organizer;\r\n        const eventId = this.state.event.id;\r\n        socket.emit('send_votes', {\r\n            eventId,\r\n            organizerId,\r\n            votes: items\r\n        });\r\n        this.props.handler(this.props.voteViews.SUBMITTED);\r\n    }\r\n\r\n    countdownFinished() {\r\n        const cookie = getCookie('UserID');\r\n        const itemsRef = firebase.database().ref(`attendees/${cookie}`);\r\n        itemsRef.child('currentEvent').set('');\r\n        itemsRef.child(`pastEvents/${this.props.eventID}/`).set(this.props.eventID);\r\n        this.closedChild.current.handleOpen();\r\n    }\r\n\r\n    toggleShowInfo = (item) => {\r\n        const oldItems = this.state.items;\r\n        oldItems[item].showInfo = !oldItems[item].showInfo;\r\n        this.setState({\r\n            items: oldItems\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const SortableItem = SortableElement(({ value, item }) => (\r\n            <li className=\"rankings\" onClick={() => this.toggleShowInfo(item)}>\r\n                <div id='rankNumber'>{item + 1}</div>\r\n                <div id='rankTitle'>\r\n                    {value.name}\r\n                    {\r\n                        value.showInfo ?\r\n                            (\r\n                                <div id=\"expandedInfo\">\r\n                                    <b>By:</b> {value.presenters} <br />\r\n                                    <b>Attendance:</b> {value.entry_dates}\r\n                                </div>\r\n                            ) : ''\r\n                    }\r\n                </div>\r\n                <DragHandle id='rankHandle' />\r\n            </li>\r\n        ));\r\n\r\n        const SortableList = SortableContainer(({ items }) => {\r\n            return (\r\n                <ul>\r\n                    {items.length !== 0 ? <div /> : <div>Tap the Plus to add an entry</div>}\r\n                    {items.map((value, index) => (\r\n                        <SortableItem\r\n                            key={`item-${index}`}\r\n                            item={index}\r\n                            index={index}\r\n                            value={value}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <EventClosed handler={this.submitted} ref={this.closedChild} eventName={this.state.event.name} />\r\n                <SubmitConfirm handler={this.submitted} ref={this.confirmChild} items={this.state.items} eventID={this.state.event.id} />\r\n                <Typography variant=\"h4\" align=\"center\" className=\"eventName\" gutterBottom>{this.state.event.name}</Typography>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <AddCircleIcon className=\"AddEvent\" id=\"addEntry\" color=\"secondary\" onClick={this.handleAddEvent} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"SortContainer\">\r\n                        <SortableList\r\n                            items={this.state.items}\r\n                            onSortEnd={this.onSortEnd}\r\n                            lockAxis=\"y\"\r\n                            useDragHandle\r\n                            helperClass=\"sortHelp\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {(this.state.event.endVote !== 'none') ? (\r\n                    <div className=\"SubmitDiv\">\r\n                        <BellIcon className=\"BellIcon\" />\r\n                        <div className=\"SubmitText\">\r\n                            Voting will close in:\r\n                                <Countdown date={this.state.event.endVote} onFinished={this.countdownFinished} />\r\n                        </div>\r\n                        <div className=\"buttonDiv\">\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.submitConfirm}> Submit </Button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"CenterSubmitDiv\">\r\n                            <div className=\"CenterButtonDiv\">\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.submitConfirm}> Submit </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}