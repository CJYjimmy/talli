{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/AddEntryVote.js\";\nimport React, { Component } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\nimport firebase from '../../firebase';\nimport '../component_style/Voter.css';\nimport NotFound from './Dialogs/NotFound';\nimport BlockJoin from './Dialogs/BlockJoin';\n\nvar config = require('../../config.json');\n/**\r\n * Entry Add\r\n */\n\n\nvar AddEntryVote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddEntryVote, _Component);\n\n  function AddEntryVote(props) {\n    var _this;\n\n    _classCallCheck(this, AddEntryVote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEntryVote).call(this, props));\n    /** ::STATE INFO::\r\n     *  entryID:        Entry's UID, obtained either from QRcode or textfield\r\n     *  idFieldValue:   The value currently in the textbox\r\n     */\n\n    _this.requestConfirm = function () {\n      var itemMatch = _this.props.rankItems.filter(function (item) {\n        return item.id === _this.state.entryID;\n      });\n\n      if (itemMatch.length > 0) {\n        _this.setState({\n          entryTitle: itemMatch[0].name\n        }, function () {\n          _this.blockChild.current.handleOpen();\n        });\n\n        return;\n      }\n\n      firebase.database().ref('organizer/').once('value').then(function (snapshot) {\n        var organizer = snapshot.val();\n        var event = organizer[_this.props.organizer].event[_this.props.eventID];\n        var entry = event.entries[_this.state.entryID];\n\n        if (!entry) {\n          _this.notFoundChild.current.handleOpen();\n\n          return;\n        }\n\n        _this.setState({\n          entryTitle: entry.title\n        }, function () {\n          _this.confirmChild.current.handleOpen();\n        });\n      });\n    };\n\n    _this.handleGoBack = function () {\n      _this.props.handler(_this.props.voteViews.RANK);\n    };\n\n    _this.state = {\n      entryID: '',\n      idFieldValue: '',\n      entryTitle: ''\n    };\n    _this.handleScan = _this.handleScan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleText = _this.handleText.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddEntry = _this.handleAddEntry.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyPress = _this.keyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirmChild = React.createRef();\n    _this.notFoundChild = React.createRef();\n    _this.blockChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(AddEntryVote, [{\n    key: \"handleScan\",\n    value: function handleScan(data) {\n      if (data && data.toLowerCase().includes(\"\".concat(config.Global.hostURL, \"/vote/\").toLowerCase()) && data.indexOf('/', data.indexOf('/vote/') + 6) !== -1) {\n        var entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\n        var id = data.substring(entrySlash).replace(/\\W/g, '');\n        this.setState({\n          entryID: id\n        });\n        this.requestConfirm();\n      }\n    }\n  }, {\n    key: \"handleText\",\n    value: function handleText() {\n      var _this2 = this;\n\n      if (this.state.idFieldValue.length > 2) {\n        this.setState({\n          entryID: this.state.idFieldValue\n        }, function () {\n          _this2.requestConfirm();\n        });\n      }\n    }\n  }, {\n    key: \"handleAddEntry\",\n    value: function handleAddEntry() {\n      this.props.handler(this.props.voteViews.RANK, 'na', 'na', this.state.entryID);\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      console.log(err);\n    }\n  }, {\n    key: \"keyPress\",\n    value: function keyPress(e) {\n      if (e.key === 'Enter') {\n        this.handleText();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NotFound, {\n        ref: this.notFoundChild,\n        idType: \"Entry\",\n        id: this.state.entryID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(EntryConfirmation, {\n        entryName: this.state.entryTitle,\n        ref: this.confirmChild,\n        handler: this.handleAddEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(BlockJoin, {\n        entryName: this.state.entryTitle,\n        idType: \"Entry\",\n        ref: this.blockChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(QrReader, {\n        delay: 300,\n        onScan: this.handleScan,\n        onError: this.handleError,\n        style: {\n          width: '80%',\n          margin: '20px auto 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        className: \"QRText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Scan QR Code or enter Entry ID:\"), React.createElement(\"div\", {\n        className: \"textField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-dense\",\n        label: \"Entry ID\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        value: this.state.idFieldValue,\n        onKeyPress: this.keyPress,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            idFieldValue: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: \"goBackButton\",\n        onClick: this.handleGoBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Back\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"confirmButton\",\n        onClick: this.handleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return AddEntryVote;\n}(Component);\n\nexport { AddEntryVote as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/VoterView/AddEntryVote.js"],"names":["React","Component","Typography","TextField","Button","QrReader","EntryConfirmation","firebase","NotFound","BlockJoin","config","require","AddEntryVote","props","requestConfirm","itemMatch","rankItems","filter","item","id","state","entryID","length","setState","entryTitle","name","blockChild","current","handleOpen","database","ref","once","then","snapshot","organizer","val","event","eventID","entry","entries","notFoundChild","title","confirmChild","handleGoBack","handler","voteViews","RANK","idFieldValue","handleScan","bind","handleError","handleText","handleAddEntry","keyPress","createRef","data","toLowerCase","includes","Global","hostURL","indexOf","entrySlash","substring","replace","err","console","log","e","key","width","margin","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\nimport QrReader from 'react-qr-reader';\r\nimport EntryConfirmation from './Dialogs/EntryConfirmation';\r\nimport firebase from '../../firebase';\r\nimport '../component_style/Voter.css';\r\nimport NotFound from './Dialogs/NotFound';\r\nimport BlockJoin from './Dialogs/BlockJoin';\r\n\r\nconst config = require('../../config.json');\r\n\r\n/**\r\n * Entry Add\r\n */\r\nexport default class AddEntryVote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        /** ::STATE INFO::\r\n         *  entryID:        Entry's UID, obtained either from QRcode or textfield\r\n         *  idFieldValue:   The value currently in the textbox\r\n         */\r\n        this.state = {\r\n            entryID: '',\r\n            idFieldValue: '',\r\n            entryTitle: ''\r\n        };\r\n        this.handleScan = this.handleScan.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        this.handleText = this.handleText.bind(this);\r\n        this.handleAddEntry = this.handleAddEntry.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n\r\n        this.confirmChild = React.createRef();\r\n        this.notFoundChild = React.createRef();\r\n        this.blockChild = React.createRef();\r\n    }\r\n\r\n    requestConfirm = () => {\r\n        const itemMatch = this.props.rankItems.filter(item => item.id === this.state.entryID);\r\n        if (itemMatch.length > 0) {\r\n            this.setState({ entryTitle: itemMatch[0].name }, () => {\r\n                this.blockChild.current.handleOpen();\r\n            });\r\n            return;\r\n        }\r\n        firebase.database().ref('organizer/').once('value').then((snapshot) => {\r\n            const organizer = snapshot.val();\r\n            const event = organizer[this.props.organizer].event[this.props.eventID];\r\n            const entry = event.entries[this.state.entryID];\r\n            if (!entry) {\r\n                this.notFoundChild.current.handleOpen();\r\n                return;\r\n            }\r\n            this.setState({ entryTitle: entry.title }, () => {\r\n                this.confirmChild.current.handleOpen();\r\n            });\r\n        });\r\n    }\r\n\r\n    handleScan(data) {\r\n        if (data\r\n            && data.toLowerCase().includes((`${config.Global.hostURL}/vote/`).toLowerCase())\r\n            && data.indexOf('/', data.indexOf('/vote/') + 6) !== -1\r\n        ) {\r\n            const entrySlash = data.indexOf('/', data.indexOf('/vote/') + 6);\r\n            const id = data.substring(entrySlash).replace(/\\W/g, '');\r\n            this.setState({ entryID: id });\r\n            this.requestConfirm();\r\n        }\r\n    }\r\n\r\n    handleText() {\r\n        if (this.state.idFieldValue.length > 2) {\r\n            this.setState({ entryID: this.state.idFieldValue }, () => {\r\n                this.requestConfirm();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddEntry() {\r\n        this.props.handler(this.props.voteViews.RANK, 'na', 'na', this.state.entryID);\r\n    }\r\n\r\n    handleGoBack = () => {\r\n        this.props.handler(this.props.voteViews.RANK);\r\n    }\r\n\r\n    handleError(err) {\r\n        console.log(err);\r\n    }\r\n\r\n    keyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            this.handleText();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NotFound ref={this.notFoundChild} idType=\"Entry\" id={this.state.entryID} />\r\n                <EntryConfirmation entryName={this.state.entryTitle} ref={this.confirmChild} handler={this.handleAddEntry} />\r\n                <BlockJoin entryName={this.state.entryTitle} idType=\"Entry\" ref={this.blockChild} />\r\n                <QrReader delay={300} onScan={this.handleScan} onError={this.handleError} style={{ width: '80%', margin: '20px auto 0px' }} />\r\n                <Typography variant=\"h5\" align=\"center\" className=\"QRText\">Scan QR Code or enter Entry ID:</Typography>\r\n                <div className=\"textField\">\r\n                    <TextField\r\n                        id=\"outlined-dense\"\r\n                        label=\"Entry ID\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.idFieldValue}\r\n                        onKeyPress={this.keyPress}\r\n                        onChange={e => this.setState({ idFieldValue: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"submitButtonContainer\">\r\n                    <Button variant=\"contained\" color=\"default\" className=\"goBackButton\" onClick={this.handleGoBack}>\r\n                        Back\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"confirmButton\" onClick={this.handleText}>\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}