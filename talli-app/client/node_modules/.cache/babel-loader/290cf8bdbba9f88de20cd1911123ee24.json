{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/ViewEvent.js\";\nimport React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport '../component_style/ViewEvent.css';\nimport firebase from '../../firebase';\nimport ExportOrgData from './Dialogs/ExportOrgData';\nimport EditEntries from './Dialogs/EditEntries';\nimport EditEvent from './Dialogs/EditEvent';\nimport EditVoting from './Dialogs/EditVoting';\nimport AddEntries from './Dialogs/AddEntries';\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\n\nvar ViewEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ViewEvent, _React$Component);\n\n  function ViewEvent(props) {\n    var _this;\n\n    _classCallCheck(this, ViewEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewEvent).call(this, props));\n\n    _this.handleExport = function () {\n      _this.exportChild.current.handleOpen();\n    };\n\n    _this.handleOpenEntries = function () {\n      _this.setState({\n        view: 'entries',\n        event: _this.state.event\n      });\n    };\n\n    _this.handleAddEntry = function () {\n      _this.addChild.current.handleOpen();\n    };\n\n    _this.handleEventEdit = function () {\n      _this.eventChild.current.handleOpen();\n    };\n\n    _this.handleOpenCloseVoting = function () {\n      _this.votingChild.current.handleOpen();\n    };\n\n    _this.goBack = function () {\n      if (_this.state.view === 'main') {\n        _this.props.handler(_this.props.orgViews.MAIN);\n      } else if (_this.state.view === 'entries') {\n        _this.setState({\n          view: 'main',\n          event: _this.state.event\n        });\n      }\n    };\n\n    _this.viewResults = function () {\n      _this.setState({\n        view: \"results\"\n      });\n    };\n\n    _this.manageEvent = function () {\n      _this.setState({\n        view: \"main\"\n      });\n    };\n\n    _this.state = {\n      view: 'main',\n      event: {\n        id: '',\n        name: '',\n        location: '',\n        startDate: '',\n        endDate: '',\n        automate: false,\n        startVote: '',\n        endVote: '',\n        entries: []\n      }\n    };\n    _this.exportChild = React.createRef();\n    _this.eventChild = React.createRef();\n    _this.entryChild = React.createRef();\n    _this.addChild = React.createRef();\n    _this.votingChild = React.createRef();\n    return _this;\n  }\n\n  _createClass(ViewEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var googleId = this.props.user.googleId;\n      var query = firebase.database().ref('organizer/' + googleId + '/event');\n      query.on('value', function (snapshot) {\n        var events = snapshot.val();\n        var eventBase = events[_this2.props.curEvent]['eventData'];\n        var eventEntries = events[_this2.props.curEvent]['entries'];\n\n        _this2.setState({\n          view: _this2.state.view,\n          event: {\n            id: eventBase['id'],\n            name: eventBase['name'],\n            location: eventBase['location'],\n            startDate: eventBase['startDate'],\n            endDate: eventBase['endDate'],\n            automate: eventBase['automate'],\n            startVote: eventBase['startVote'],\n            endVote: eventBase['endVote'],\n            entries: eventEntries\n          }\n        });\n      });\n    }\n  }, {\n    key: \"handleEntryEdit\",\n    value: function handleEntryEdit(entryID) {\n      this.entryChild.current.handleOpen(entryID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ExportOrgData, {\n        ref: this.exportChild,\n        event: this.state.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(EditEntries, {\n        ref: this.entryChild,\n        event: this.state.event,\n        googleId: this.props.user.googleId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(AddEntries, {\n        ref: this.addChild,\n        event: this.state.event,\n        googleId: this.props.user.googleId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(EditEvent, {\n        ref: this.eventChild,\n        event: this.state.event,\n        googleId: this.props.user.googleId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(EditVoting, {\n        ref: this.votingChild,\n        event: this.state.event,\n        googleId: this.props.user.googleId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.event.name), this.state.view === 'main' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.manageEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        onClick: this.viewResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleExport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Export Event & Entry QR Codes\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleOpenEntries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"View/Add/Edit Entries\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleEventEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"View/Edit Event Details\"), React.createElement(Button, {\n        className: \"listButtons\",\n        onClick: this.handleOpenCloseVoting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Open/Close Voting\"))), this.state.view === 'entries' && this.state.event.entries !== undefined && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.manageEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        onClick: this.viewResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, Object.values(this.state.event.entries).map(function (entry, index) {\n        return React.createElement(Button, {\n          className: \"listButtons\",\n          onClick: function onClick() {\n            return _this3.handleEntryEdit(entry.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, entry.title, \" by \", entry.presenters);\n      }), React.createElement(Button, {\n        className: \"listButtons\",\n        color: \"primary\",\n        onClick: this.handleAddEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Add New Entry\"))), this.state.view === 'entries' && this.state.event.entries === undefined && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.manageEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        onClick: this.viewResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"listButtons\",\n        color: \"primary\",\n        onClick: this.handleAddEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Add New Entry\"))), this.state.view === \"results\" && React.createElement(\"div\", {\n        className: \"viewResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        onClick: this.manageEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Manage Event\"), React.createElement(Button, {\n        className: \"button1\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.viewResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"View Results\")), React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Set up google sheets for results:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"1. Create a Google Sheet in your desired location\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"2. Grab the spreadsheet ID from the URL and paste it here: \", React.createElement(\"input\", {\n        className: \"sheetId\",\n        placeholder: \"Google sheet ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"- https://docs.google.com/spreadsheets/d/\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"SPREADSHEET ID\"), \"/edit#gid=0\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"3. Share the spreadsheet with editing rights with \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"talli-455@talli-229017.iam.gserviceaccount.com\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.goBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return ViewEvent;\n}(React.Component);\n\nexport { ViewEvent as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/ViewEvent.js"],"names":["React","Typography","Button","firebase","ExportOrgData","EditEntries","EditEvent","EditVoting","AddEntries","ViewEvent","props","handleExport","exportChild","current","handleOpen","handleOpenEntries","setState","view","event","state","handleAddEntry","addChild","handleEventEdit","eventChild","handleOpenCloseVoting","votingChild","goBack","handler","orgViews","MAIN","viewResults","manageEvent","id","name","location","startDate","endDate","automate","startVote","endVote","entries","createRef","entryChild","googleId","user","query","database","ref","on","snapshot","events","val","eventBase","curEvent","eventEntries","entryID","undefined","Object","values","map","entry","index","handleEntryEdit","title","presenters","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport '../component_style/ViewEvent.css';\r\nimport firebase from '../../firebase';\r\nimport ExportOrgData from './Dialogs/ExportOrgData';\r\nimport EditEntries from './Dialogs/EditEntries';\r\nimport EditEvent from './Dialogs/EditEvent';\r\nimport EditVoting from './Dialogs/EditVoting';\r\nimport AddEntries from './Dialogs/AddEntries';\r\n\r\n/**\r\n * OrganizerView > ViewEvent\r\n * Allows organizers to view the details of an event\r\n * that they have already created.\r\n * TODO: read existing events from database and render\r\n */\r\nexport default class ViewEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            view: 'main',\r\n            event: {\r\n                id: '', \r\n                name: '', \r\n                location:'', \r\n                startDate: '', \r\n                endDate: '', \r\n                automate: false, \r\n                startVote: '', \r\n                endVote: '',\r\n                entries: []\r\n            },\r\n        };\r\n        this.exportChild = React.createRef();\r\n        this.eventChild = React.createRef();\r\n        this.entryChild = React.createRef();\r\n        this.addChild = React.createRef();\r\n        this.votingChild = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var googleId = this.props.user.googleId;\r\n        var query = firebase.database().ref('organizer/' + googleId + '/event');\r\n        query.on('value', (snapshot) => {\r\n            let events = snapshot.val();\r\n            let eventBase = events[this.props.curEvent]['eventData'];\r\n            let eventEntries = events[this.props.curEvent]['entries'];\r\n            this.setState({ \r\n                view: this.state.view,\r\n                event: {\r\n                    id: eventBase['id'],\r\n                    name: eventBase['name'],\r\n                    location: eventBase['location'],\r\n                    startDate: eventBase['startDate'],\r\n                    endDate: eventBase['endDate'],\r\n                    automate: eventBase['automate'],\r\n                    startVote: eventBase['startVote'],\r\n                    endVote: eventBase['endVote'],\r\n                    entries: eventEntries\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleExport = () => {\r\n        this.exportChild.current.handleOpen();\r\n    }\r\n\r\n    handleEntryEdit(entryID) {\r\n        this.entryChild.current.handleOpen(entryID);\r\n    }\r\n\r\n    handleOpenEntries = () => {\r\n        this.setState({\r\n                view: 'entries',\r\n                event: this.state.event\r\n        });\r\n    }\r\n\r\n    handleAddEntry = () => {\r\n        this.addChild.current.handleOpen();\r\n    }\r\n\r\n    handleEventEdit = () => {\r\n        this.eventChild.current.handleOpen();\r\n    }\r\n\r\n    handleOpenCloseVoting = () => {\r\n        this.votingChild.current.handleOpen();\r\n    }\r\n\r\n    goBack = () => {\r\n        if (this.state.view === 'main') {\r\n            this.props.handler(this.props.orgViews.MAIN);\r\n        } else if (this.state.view === 'entries') {\r\n            this.setState({\r\n                view: 'main',\r\n                event: this.state.event\r\n            });\r\n        }\r\n    }\r\n\r\n    viewResults = () => {\r\n        this.setState({\r\n            view: \"results\"\r\n        })\r\n    }\r\n\r\n    manageEvent = () => {\r\n        this.setState({\r\n            view: \"main\"\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <ExportOrgData ref={this.exportChild} event={this.state.event}/>\r\n                <EditEntries ref={this.entryChild} event={this.state.event} googleId={this.props.user.googleId}/>\r\n                <AddEntries ref={this.addChild} event={this.state.event} googleId={this.props.user.googleId}/>\r\n                <EditEvent ref={this.eventChild} event={this.state.event} googleId={this.props.user.googleId}/>\r\n                <EditVoting ref={this.votingChild} event={this.state.event} googleId={this.props.user.googleId}/>\r\n                <Typography variant=\"h3\" align='center' gutterBottom>{this.state.event.name}</Typography>\r\n                { \r\n                    this.state.view === 'main' && \r\n                    <div>\r\n                        <div className=\"options\">\r\n                            <Button className=\"button1\" variant=\"contained\" color=\"primary\" onClick={this.manageEvent}>Manage Event</Button>\r\n                            <Button className=\"button1\" variant=\"contained\" onClick={this.viewResults}>View Results</Button>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <Button className=\"listButtons\" onClick={this.handleExport}>Export Event & Entry QR Codes</Button>\r\n                            <Button className=\"listButtons\" onClick={this.handleOpenEntries}>View/Add/Edit Entries</Button>\r\n                            <Button className=\"listButtons\" onClick={this.handleEventEdit}>View/Edit Event Details</Button>\r\n                            <Button className=\"listButtons\" onClick={this.handleOpenCloseVoting}>Open/Close Voting</Button>\r\n                        </div> \r\n                    </div>\r\n                }\r\n                { \r\n                    this.state.view === 'entries' && this.state.event.entries !== undefined &&\r\n                    <div>\r\n                        <div className=\"options\">\r\n                            <Button className=\"button1\" variant=\"contained\" color=\"primary\" onClick={this.manageEvent}>Manage Event</Button>\r\n                            <Button className=\"button1\" variant=\"contained\" onClick={this.viewResults}>View Results</Button>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            {\r\n                                \r\n                                Object.values(this.state.event.entries).map((entry, index) => \r\n                                    <Button className=\"listButtons\" onClick={() => this.handleEntryEdit(entry.id)}>\r\n                                        {entry.title} by {entry.presenters}\r\n                                    </Button>\r\n                                )\r\n                            }\r\n                            <Button className=\"listButtons\" color=\"primary\" onClick={this.handleAddEntry}>Add New Entry</Button>\r\n                        </div> \r\n                    </div>\r\n                }\r\n                {\r\n                   this.state.view === 'entries' && this.state.event.entries === undefined &&\r\n                   <div>\r\n                        <div className=\"options\">\r\n                            <Button className=\"button1\" variant=\"contained\" color=\"primary\" onClick={this.manageEvent}>Manage Event</Button>\r\n                            <Button className=\"button1\" variant=\"contained\" onClick={this.viewResults}>View Results</Button>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <Button className=\"listButtons\" color=\"primary\" onClick={this.handleAddEntry}>Add New Entry</Button>\r\n                        </div>  \r\n                   </div>\r\n                }\r\n                {\r\n                    this.state.view === \"results\" &&\r\n                    <div className=\"viewResults\">\r\n                        <div className=\"options\">\r\n                            <Button className=\"button1\" variant=\"contained\" onClick={this.manageEvent}>Manage Event</Button>\r\n                            <Button className=\"button1\" variant=\"contained\" color=\"primary\" onClick={this.viewResults}>View Results</Button>\r\n                        </div>\r\n                        <Typography variant=\"h5\">Set up google sheets for results:</Typography>\r\n                        <br />\r\n                        <div className=\"instructions\">\r\n                            <div>1. Create a Google Sheet in your desired location</div>\r\n                            <div>\r\n                                {/* TODO: This should automatically save, probably to firebase */}\r\n                                2. Grab the spreadsheet ID from the URL and paste it here: <input className=\"sheetId\" placeholder=\"Google sheet ID\"></input>\r\n                                <div className=\"note\">- https://docs.google.com/spreadsheets/d/<b>SPREADSHEET ID</b>/edit#gid=0</div>\r\n                            </div>\r\n                            <div>3. Share the spreadsheet with editing rights with <b>talli-455@talli-229017.iam.gserviceaccount.com</b></div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <br />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttons\"\r\n                    type=\"button\"\r\n                    onClick={this.goBack} >\r\n                    Back\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}