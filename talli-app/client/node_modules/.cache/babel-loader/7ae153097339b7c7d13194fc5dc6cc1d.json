{"ast":null,"code":"import _defineProperty from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddEntries.js\";\nimport React from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from '@material-ui/core';\nimport firebase from '../../../firebase.js';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n}\n\nvar AddEntries =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddEntries, _React$Component);\n\n  function AddEntries() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddEntries);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddEntries)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      title: '',\n      id: undefined,\n      presenters: '',\n      entry_dates: ''\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false,\n        title: '',\n        id: undefined,\n        presenters: '',\n        entry_dates: ''\n      });\n    };\n\n    _this.handleSaveClose = function () {\n      var tempId = _this.state.id; // autogenerate ID if necessary\n\n      if (!tempId) {\n        tempId = Math.floor(Math.random() * 10000 + 1);\n      } // change ID to ensure uniqueness\n\n\n      if (_this.props.event.entries) {\n        var existingEntry = _this.props.event.entries[tempId];\n\n        while (existingEntry !== undefined) {\n          tempId++;\n          existingEntry = _this.props.event.entries[tempId];\n        }\n      } // save new entry to database\n\n\n      var itemsRef = firebase.database().ref('organizer/' + _this.props.googleId + '/event/' + _this.props.event.id + '/entries/' + tempId);\n      itemsRef.child('title').set(_this.state.title);\n      itemsRef.child('id').set(tempId);\n      itemsRef.child('presenters').set(_this.state.presenters);\n      itemsRef.child('entry_dates').set(_this.state.entry_dates); // close dialog\n\n      _this.handleClose();\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEntries, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Add New Entry \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        label: \"Entry Title\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        defaultValue: this.state.title,\n        onChange: this.handleChange('title'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"ID (auto if blank)\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        defaultValue: this.state.id,\n        onChange: this.handleChange('id'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Presenters\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        defaultValue: this.state.presenters,\n        onChange: this.handleChange('presenters'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Date(s) Attending\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        defaultValue: this.state.entry_dates,\n        onChange: this.handleChange('entry_dates'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleSaveClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return AddEntries;\n}(React.Component);\n\nexport { AddEntries as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddEntries.js"],"names":["React","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","firebase","Transition","props","AddEntries","state","open","title","id","undefined","presenters","entry_dates","handleOpen","setState","handleClose","handleSaveClose","tempId","Math","floor","random","event","entries","existingEntry","itemsRef","database","ref","googleId","child","set","handleChange","name","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField } from '@material-ui/core';\nimport firebase from '../../../firebase.js';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport default class AddEntries extends React.Component {\n    state = {\n        open: false,\n        title: '',\n        id: undefined,\n        presenters: '',\n        entry_dates: ''\n    };\n\n    handleOpen = () => {\n        this.setState({ \n            open: true, \n        });\n    };\n\n    handleClose = () => {\n        this.setState({ \n            open: false,\n            title: '',\n            id: undefined,\n            presenters: '',\n            entry_dates: ''\n        });\n    }\n\n    handleSaveClose = () => {\n        var tempId = this.state.id;\n        // autogenerate ID if necessary\n        if (!tempId) {\n             tempId = Math.floor((Math.random() * 10000) + 1);\n        }\n        // change ID to ensure uniqueness\n        if (this.props.event.entries) {\n            var existingEntry = this.props.event.entries[tempId];\n            while (existingEntry !== undefined) {\n                tempId++;\n                existingEntry = this.props.event.entries[tempId];\n            }\n        }\n        // save new entry to database\n        let itemsRef = firebase.database().ref('organizer/' + this.props.googleId +\n                                               '/event/' + this.props.event.id + \n                                               '/entries/' + tempId);\n        itemsRef.child('title').set(this.state.title);\n        itemsRef.child('id').set(tempId);\n        itemsRef.child('presenters').set(this.state.presenters);\n        itemsRef.child('entry_dates').set(this.state.entry_dates);\n        // close dialog\n        this.handleClose();\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle> Add New Entry </DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            required\n                            label=\"Entry Title\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            defaultValue={this.state.title}\n                            onChange={this.handleChange('title')}\n                        />\n                        <TextField\n                            label=\"ID (auto if blank)\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            defaultValue={this.state.id}\n                            onChange={this.handleChange('id')}\n                        />\n                        <br />\n                        <TextField\n                            required\n                            label=\"Presenters\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            defaultValue={this.state.presenters}\n                            onChange={this.handleChange('presenters')}\n                        />\n                        <TextField\n                            required\n                            label=\"Date(s) Attending\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            defaultValue={this.state.entry_dates}\n                            onChange={this.handleChange('entry_dates')}\n                        />\n                    </DialogContent>\n                    <DialogActions>    \n                        <Button onClick={this.handleClose}>Cancel</Button>\n                        <Button onClick={this.handleSaveClose} color=\"primary\">Add</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}