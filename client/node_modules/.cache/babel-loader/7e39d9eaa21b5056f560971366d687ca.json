{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/EditVoting.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\nimport firebase from '../../../firebase';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n}\n\nvar EditVoting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditVoting, _Component);\n\n  function EditVoting(props) {\n    var _this;\n\n    _classCallCheck(this, EditVoting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditVoting).call(this, props));\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.openVoting = function () {\n      var itemsRef = firebase.database().ref(\"organizer/\".concat(_this.props.googleId, \"/event/\").concat(_this.props.event.id, \"/eventData/\"));\n      itemsRef.child('startVote').set(new Date().toISOString());\n      itemsRef.child('endVote').set('none');\n\n      _this.handleClose();\n    };\n\n    _this.closeVoting = function () {\n      var itemsRef = firebase.database().ref(\"organizer/\".concat(_this.props.googleId, \"/event/\").concat(_this.props.event.id, \"/eventData/\"));\n      itemsRef.child('endVote').set(new Date().toISOString());\n\n      _this.handleClose();\n    };\n\n    _this.reopenVoting = function () {\n      var itemsRef = firebase.database().ref(\"organizer/\".concat(_this.props.googleId, \"/event/\").concat(_this.props.event.id, \"/eventData/\"));\n      itemsRef.child('startVote').set(new Date().toISOString());\n      itemsRef.child('endVote').set('none');\n\n      _this.handleClose();\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(EditVoting, [{\n    key: \"getVotingState\",\n    value: function getVotingState() {\n      if (this.props.event.startVote === 'none' || this.props.event.startVote > new Date().toISOString()) {\n        // not open yet\n        return 'before';\n      }\n\n      if (this.props.event.endVote === 'none' || this.props.event.endVote > new Date().toISOString()) {\n        // open\n        return 'open';\n      }\n\n      return 'closed';\n    }\n  }, {\n    key: \"addLeadingZeros\",\n    value: function addLeadingZeros(value) {\n      var valueStr = String(value);\n\n      while (valueStr.length < 2) {\n        valueStr = \"0\".concat(valueStr);\n      }\n\n      return valueStr;\n    }\n  }, {\n    key: \"parseDate\",\n    value: function parseDate(isoDate) {\n      var dateString = \"\".concat(isoDate.substring(5, 7), \"/\").concat(isoDate.substring(8, 10), \"/\").concat(isoDate.substring(0, 4));\n      return dateString;\n    }\n  }, {\n    key: \"parseTime\",\n    value: function parseTime(isoDate) {\n      var date = new Date(isoDate);\n      var timeString = \"\".concat(date.getHours(), \":\").concat(this.addLeadingZeros(date.getMinutes()));\n      return timeString;\n    }\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      switch (this.getVotingState()) {\n        case 'before':\n          return React.createElement(DialogContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"The voting period has not been opened.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }), \"Automated voting period \", this.props.event.automate ? 'is' : 'is not', \" enabled. \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }), this.props.event.automate ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Voting will open on \", this.parseDate(this.props.event.startVote), \" at \", this.parseTime(this.props.event.startVote), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          })) : '', React.createElement(\"i\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, \"Note: Manually opening voting will override automated start time.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }), React.createElement(Button, {\n            variant: \"contained\",\n            onClick: this.openVoting,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Open Voting\"));\n\n        case 'open':\n          return React.createElement(DialogContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"The voting period is currently open.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), \"Automated voting period \", this.props.event.automate ? 'is' : 'is not', \" enabled.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }), this.props.event.automate ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"Voting will close on \", this.parseDate(this.props.event.endVote), \" at \", this.parseTime(this.props.event.endVote), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          })) : '', React.createElement(\"i\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"Note: Manually closing voting will override automated end time.\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }), React.createElement(Button, {\n            variant: \"contained\",\n            onClick: this.closeVoting,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Close Voting\"));\n\n        default:\n          // closed\n          return React.createElement(DialogContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"The voting period has closed.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }), React.createElement(Button, {\n            variant: \"contained\",\n            onClick: this.reopenVoting,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Re-Open Voting\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return !this.state.open ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" Open/Close Voting \"), this.renderOptions(), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Go Back\"))));\n    }\n  }]);\n\n  return EditVoting;\n}(Component);\n\nexport { EditVoting as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/EditVoting.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Button","firebase","Transition","props","EditVoting","handleOpen","setState","open","handleClose","openVoting","itemsRef","database","ref","googleId","event","id","child","set","Date","toISOString","closeVoting","reopenVoting","state","startVote","endVote","value","valueStr","String","length","isoDate","dateString","substring","date","timeString","getHours","addLeadingZeros","getMinutes","getVotingState","automate","parseDate","parseTime","renderOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\nimport firebase from '../../../firebase';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport default class EditVoting extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    openVoting = () => {\n        const itemsRef = firebase.database().ref(\n            `organizer/${this.props.googleId}/event/${this.props.event.id}/eventData/`\n        );\n        itemsRef.child('startVote').set(new Date().toISOString());\n        itemsRef.child('endVote').set('none');\n        this.handleClose();\n    }\n\n    closeVoting = () => {\n        const itemsRef = firebase.database().ref(\n            `organizer/${this.props.googleId}/event/${this.props.event.id}/eventData/`\n        );\n        itemsRef.child('endVote').set(new Date().toISOString());\n        this.handleClose();\n    }\n\n    reopenVoting = () => {\n        const itemsRef = firebase.database().ref(\n            `organizer/${this.props.googleId}/event/${this.props.event.id}/eventData/`\n        );\n        itemsRef.child('startVote').set(new Date().toISOString());\n        itemsRef.child('endVote').set('none');\n        this.handleClose();\n    }\n\n    getVotingState() {\n        if (this.props.event.startVote === 'none' || (this.props.event.startVote > new Date().toISOString())) { // not open yet\n            return 'before';\n        }\n        if (this.props.event.endVote === 'none' || (this.props.event.endVote > new Date().toISOString())) { // open\n            return 'open';\n        }\n        return 'closed';\n    }\n\n    addLeadingZeros(value) {\n        let valueStr = String(value);\n        while (valueStr.length < 2) {\n            valueStr = `0${valueStr}`;\n        }\n        return valueStr;\n    }\n\n    parseDate(isoDate) {\n        const dateString = `${isoDate.substring(5, 7)}/${isoDate.substring(8, 10)}/${isoDate.substring(0, 4)}`;\n        return dateString;\n    }\n\n    parseTime(isoDate) {\n        const date = new Date(isoDate);\n        const timeString = `${date.getHours()}:${this.addLeadingZeros(date.getMinutes())}`;\n        return timeString;\n    }\n\n    renderOptions() {\n        switch (this.getVotingState()) {\n            case 'before':\n                return (\n                    <DialogContent>\n                        The voting period has not been opened.<br /><br />\n                        Automated voting period {this.props.event.automate ? 'is' : 'is not'} enabled. <br />\n                        {this.props.event.automate ? (\n                            <div>\n                                Voting will open on {\n                                    this.parseDate(this.props.event.startVote)\n                                } at {\n                                    this.parseTime(this.props.event.startVote)\n                                }\n                                <br />\n                                <br />\n                            </div>\n                        ) : ('')}\n                        <i>Note: Manually opening voting will override automated start time.</i>\n                        <br /><br />\n                        <Button variant=\"contained\" onClick={this.openVoting}>Open Voting</Button>\n                    </DialogContent>\n                );\n            case 'open':\n                return (\n                    <DialogContent>\n                        The voting period is currently open.\n                        <br />\n                        <br />\n                        Automated voting period {this.props.event.automate ? 'is' : 'is not'} enabled.\n                        <br />\n                        {this.props.event.automate ? (\n                            <div>\n                                Voting will close on {\n                                    this.parseDate(this.props.event.endVote)\n                                } at {\n                                    this.parseTime(this.props.event.endVote)\n                                }\n                                <br />\n                                <br />\n                            </div>\n                        ) : ('')}\n                        <i>Note: Manually closing voting will override automated end time.</i>\n                        <br />\n                        <br />\n                        <Button variant=\"contained\" onClick={this.closeVoting}>Close Voting</Button>\n                    </DialogContent>\n                );\n            default: // closed\n                return (\n                    <DialogContent>\n                        The voting period has closed.\n                        <br />\n                        <br />\n                        <Button variant=\"contained\" onClick={this.reopenVoting}>Re-Open Voting</Button>\n                    </DialogContent>\n                );\n        }\n    }\n\n    render() {\n        return !this.state.open ? null : (\n            <div>\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\n                    <DialogTitle> Open/Close Voting </DialogTitle>\n                    {this.renderOptions()}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">Go Back</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}