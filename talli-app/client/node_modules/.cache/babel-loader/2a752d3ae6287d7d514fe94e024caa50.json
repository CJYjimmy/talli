{"ast":null,"code":"var _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/routing/routing.js\";\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport MainPage from '../components/MainPage';\nimport Voter from '../components/Voter';\nimport Organizer from '../components/Organizer';\nimport HelpView from '../components/Help';\n\nvar RouterMixin = require('react-mini-router').RouterMixin; // class RoutedApp extends React.Component {\n//     render() {\n//     }\n// }\n\n/**\r\n * RoutedApp handles routing between each of the main views as well\r\n * as error handling when a non-existant page is queried\r\n */\n\n\nvar RoutedApp = createReactClass({\n  displayName: \"RoutedApp\",\n  getInitialState: function getInitialState() {\n    return {\n      loggedIn: this.props.loggedIn\n    };\n  },\n  mixins: [RouterMixin],\n  // TODO: Set up /vote/:text (voteWithID) to handle url-injected event IDs\n  //      (currently displays the same as /vote)\n  routes: {\n    '/': 'home',\n    '/vote': 'vote',\n    '/vote/:text': 'voteWithID',\n    '/organizer': 'organizer',\n    '/help': 'help'\n  },\n  render: function render() {\n    return this.renderCurrentRoute();\n  },\n  home: function home() {\n    return React.createElement(MainPage, {\n      loggedIn: this.props.loggedIn,\n      onSuccess: this.onSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  },\n  vote: function vote() {\n    return React.createElement(Voter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  },\n  voteWithID: function voteWithID(text) {\n    return React.createElement(Voter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  },\n  organizer: function organizer() {\n    return React.createElement(Organizer, {\n      logout: this.logout,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  },\n  help: function help() {\n    return React.createElement(HelpView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  },\n  notFound: function notFound(path) {\n    return React.createElement(\"div\", {\n      className: \"not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Page Not Found: \", path);\n  },\n  onSuccess: function onSuccess(response) {\n    this.props.onSuccess(response);\n  },\n  logout: function logout() {\n    this.props.logout();\n  }\n});\nexport default RoutedApp;","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/routing/routing.js"],"names":["React","createReactClass","MainPage","Voter","Organizer","HelpView","RouterMixin","require","RoutedApp","getInitialState","loggedIn","props","mixins","routes","render","renderCurrentRoute","home","onSuccess","vote","voteWithID","text","organizer","logout","user","help","notFound","path","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BD,WAA/C,C,CAEA;AAEA;AAEA;AACA;;AAEA;;;;;;AAIA,IAAIE,SAAS,GAAGP,gBAAgB,CAAC;AAAA;AAE7BQ,EAAAA,eAAe,EAAE,2BAAW;AACxB,WAAO;AAACC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD;AAAtB,KAAP;AACH,GAJ4B;AAM7BE,EAAAA,MAAM,EAAE,CAACN,WAAD,CANqB;AAQ7B;AACA;AACAO,EAAAA,MAAM,EAAE;AACJ,SAAK,MADD;AAEJ,aAAS,MAFL;AAGJ,mBAAe,YAHX;AAIJ,kBAAc,WAJV;AAKJ,aAAS;AALL,GAVqB;AAkB7BC,EAAAA,MAAM,EAAE,kBAAY;AAChB,WAAO,KAAKC,kBAAL,EAAP;AACH,GApB4B;AAsB7BC,EAAAA,IAAI,EAAE,gBAAY;AACd,WACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKO,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH,GA5B4B;AA8B7BC,EAAAA,IAAI,EAAE,gBAAY;AACd,WAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAhC4B;AAkC7BC,EAAAA,UAAU,EAAE,oBAAUC,IAAV,EAAgB;AACxB,WAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GApC4B;AAsC7BC,EAAAA,SAAS,EAAE,qBAAY;AACnB,WACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAE,KAAKC,MADjB;AAEI,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH,GA5C4B;AA8C7BC,EAAAA,IAAI,EAAE,gBAAY;AACd,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAhD4B;AAkD7BC,EAAAA,QAAQ,EAAE,kBAAUC,IAAV,EAAgB;AACtB,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4CA,IAA5C,CAAP;AACH,GApD4B;AAsD7BT,EAAAA,SAAS,EAAE,mBAASU,QAAT,EAAmB;AAC1B,SAAKhB,KAAL,CAAWM,SAAX,CAAqBU,QAArB;AACH,GAxD4B;AA0D7BL,EAAAA,MAAM,EAAE,kBAAW;AACf,SAAKX,KAAL,CAAWW,MAAX;AACH;AA5D4B,CAAD,CAAhC;AA+DA,eAAed,SAAf","sourcesContent":["import React from 'react';\r\nimport createReactClass from 'create-react-class';\r\nimport MainPage from '../components/MainPage';\r\nimport Voter from '../components/Voter';\r\nimport Organizer from '../components/Organizer';\r\nimport HelpView from '../components/Help';\r\nvar RouterMixin = require('react-mini-router').RouterMixin;\r\n\r\n// class RoutedApp extends React.Component {\r\n\r\n//     render() {\r\n\r\n//     }\r\n// }\r\n\r\n/**\r\n * RoutedApp handles routing between each of the main views as well\r\n * as error handling when a non-existant page is queried\r\n */\r\nvar RoutedApp = createReactClass({\r\n\r\n    getInitialState: function() {\r\n        return {loggedIn: this.props.loggedIn};\r\n    },\r\n\r\n    mixins: [RouterMixin],\r\n\r\n    // TODO: Set up /vote/:text (voteWithID) to handle url-injected event IDs\r\n    //      (currently displays the same as /vote)\r\n    routes: {\r\n        '/': 'home',\r\n        '/vote': 'vote',\r\n        '/vote/:text': 'voteWithID',\r\n        '/organizer': 'organizer',\r\n        '/help': 'help',\r\n    },\r\n\r\n    render: function () {\r\n        return this.renderCurrentRoute();\r\n    },\r\n\r\n    home: function () {\r\n        return (\r\n            <MainPage \r\n                loggedIn={this.props.loggedIn}\r\n                onSuccess={this.onSuccess} />\r\n        );\r\n    },\r\n\r\n    vote: function () {\r\n        return <Voter />;\r\n    },\r\n\r\n    voteWithID: function (text) {\r\n        return <Voter />;\r\n    },\r\n\r\n    organizer: function () {\r\n        return (\r\n            <Organizer\r\n                logout={this.logout}\r\n                user={this.props.user} />\r\n        );\r\n    },\r\n\r\n    help: function () {\r\n        return <HelpView />;\r\n    },\r\n\r\n    notFound: function (path) {\r\n        return <div className=\"not-found\">Page Not Found: {path}</div>;\r\n    },\r\n\r\n    onSuccess: function(response) {\r\n        this.props.onSuccess(response);\r\n    },\r\n\r\n    logout: function() {\r\n        this.props.logout();\r\n    }\r\n});\r\n\r\nexport default RoutedApp;"]},"metadata":{},"sourceType":"module"}