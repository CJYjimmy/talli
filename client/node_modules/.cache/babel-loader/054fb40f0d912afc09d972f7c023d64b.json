{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/junior_design/talli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/SheetDialog.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@material-ui/core';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n} // maybe for future, have it load current weights into text fields\n\n\nvar SheetDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SheetDialog, _Component);\n\n  function SheetDialog(props) {\n    var _this;\n\n    _classCallCheck(this, SheetDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SheetDialog).call(this, props));\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(SheetDialog, [{\n    key: \"render\",\n    value: function render() {\n      return !this.state.open ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" Google Sheet Setup \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Follow these steps in order\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"1. Create a new Google Sheet in a desired location in your drive\"), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"2. Share the spreadsheet with editing rights with:\"), React.createElement(Typography, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"talli-455@talli-229017.iam.gserviceaccount.com\")), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"3. Copy and paste the entire URL of the spreadsheet into the text field\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return SheetDialog;\n}(Component);\n\nexport { SheetDialog as default };","map":{"version":3,"sources":["/Users/chenjiayuan/junior_design/talli/client/src/components/OrganizerView/Dialogs/SheetDialog.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","Transition","props","SheetDialog","handleOpen","setState","open","handleClose","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,aAArC,EAAoDC,aAApD,EAAmEC,MAAnE,EAA2EC,UAA3E,QAA6F,mBAA7F;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,C,CAED;;;IACqBC,W;;;;;AACjB,uBAAYD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAOnBE,UAPmB,GAON,YAAM;AACf,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KATkB;;AAAA,UAWnBC,WAXmB,GAWL,YAAM;AAChB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAbkB;;AAEf,UAAKE,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE;AADG,KAAb;AAFe;AAKlB;;;;6BAUQ;AACL,aAAO,CAAC,KAAKE,KAAL,CAAWF,IAAZ,GAAmB,IAAnB,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF,IADrB;AAEI,QAAA,mBAAmB,EAAEL,UAFzB;AAGI,QAAA,OAAO,EAAE,KAAKM,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJJ,EAKI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAA3B,CALJ,EAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFANJ,CANJ,EAcI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAdJ,CADJ,CADJ;AAsBH;;;;EAvCoCd,S;;SAApBU,W","sourcesContent":["import React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@material-ui/core';\n\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\n// maybe for future, have it load current weights into text fields\nexport default class SheetDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        return !this.state.open ? null : (\n            <div>\n                <Dialog\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> Google Sheet Setup </DialogTitle>\n                    <DialogContent>\n                        <Typography color=\"error\">Follow these steps in order</Typography>\n                        <br />\n                        <Typography>1. Create a new Google Sheet in a desired location in your drive</Typography>\n                        <Typography>2. Share the spreadsheet with editing rights with:</Typography>\n                        <Typography align=\"center\"><b>talli-455@talli-229017.iam.gserviceaccount.com</b></Typography>\n                        <Typography>3. Copy and paste the entire URL of the spreadsheet into the text field</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">Close</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}