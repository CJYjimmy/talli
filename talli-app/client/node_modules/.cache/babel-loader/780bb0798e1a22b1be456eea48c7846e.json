{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddBallotEntry.js\";\nimport React, { Component } from 'react';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport '../../component_style/Organizer.css';\nimport { TextField } from '@material-ui/core';\nimport firebase from '../../../firebase';\n\nvar AddVoteEntryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddVoteEntryForm, _Component);\n\n  function AddVoteEntryForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddVoteEntryForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddVoteEntryForm).call(this, props));\n\n    _this.delEntry = function () {\n      _this.setState({\n        show: false\n      }, function () {\n        _this.props.updateEntry(_this.state, _this.props.index);\n      });\n    };\n\n    _this.handleIdChange = function (event) {\n      _this.setState({\n        rank: _this.props.entriesInVote[_this.props.index].rank,\n        id: event.target.value\n      }, function () {\n        var title = '';\n        var entry = _this.state.entries[_this.state.id];\n\n        if (entry) {\n          title = entry.title;\n        }\n\n        _this.setState({\n          title: title,\n          valid: title !== ''\n        }, function () {\n          if (_this.state.valid) {\n            _this.props.updateEntry(_this.state, _this.props.index);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      show: true,\n      id: '',\n      title: '',\n      rank: '',\n      entries: [],\n      duplicate: false,\n      valid: false\n    };\n    return _this;\n  }\n\n  _createClass(AddVoteEntryForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = firebase.database().ref(\"organizer/\".concat(this.props.googleId, \"/event/\").concat(this.props.event.id));\n      query.on('value', function (snapshot) {\n        var entriesRef = snapshot.val();\n        var entries = entriesRef.entries;\n\n        _this2.setState({\n          entries: entries,\n          rank: _this2.props.entriesInVote[_this2.props.index].rank,\n          id: _this2.props.entriesInVote[_this2.props.index].id,\n          title: _this2.props.entriesInVote[_this2.props.index].title,\n          valid: _this2.props.entriesInVote[_this2.props.index].valid,\n          duplicate: _this2.props.entriesInVote[_this2.props.index].duplicate\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.show && this.state.valid && !this.state.duplicate) {\n        return React.createElement(\"div\", {\n          className: \"addEntry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"rankingLabel\",\n          id: this.props.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, this.props.entriesInVote[this.props.index].rank, \".\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          required: true,\n          label: \"Entry ID\",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: this.state.id,\n          onChange: this.handleIdChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          disabled: true,\n          label: \"Title\",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: this.state.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })), React.createElement(RemoveCircleOutlineIcon, {\n          className: \"removeCircleOutlineIcon\",\n          color: \"primary\",\n          id: \"entryIcon\",\n          onClick: this.delEntry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      } else if (this.state.show && !this.state.duplicate) {\n        return React.createElement(\"div\", {\n          className: \"addEntry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"rankingLabel\",\n          id: this.props.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, this.props.entriesInVote[this.props.index].rank, \".\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          error: true,\n          required: true,\n          label: \"Entry ID\",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: this.state.id,\n          onChange: this.handleIdChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          disabled: true,\n          label: \" \",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: \"Enter a Valid Entry ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })), React.createElement(RemoveCircleOutlineIcon, {\n          className: \"removeCircleOutlineIcon\",\n          color: \"primary\",\n          id: \"entryIcon\",\n          onClick: this.delEntry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n      } else if (this.state.show && this.state.duplicate) {\n        return React.createElement(\"div\", {\n          className: \"addEntry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"rankingLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, this.props.entriesInVote[this.props.index].rank, \".\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          error: true,\n          required: true,\n          label: \"Entry ID\",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: this.state.id,\n          onChange: this.handleIdChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          disabled: true,\n          label: \" \",\n          margin: \"dense\",\n          className: \"entryFormText\",\n          value: \"Duplicate Entry ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        })), React.createElement(RemoveCircleOutlineIcon, {\n          className: \"removeCircleOutlineIcon\",\n          color: \"primary\",\n          id: \"entryIcon\",\n          onClick: this.delEntry,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return AddVoteEntryForm;\n}(Component);\n\nexport { AddVoteEntryForm as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddBallotEntry.js"],"names":["React","Component","RemoveCircleOutlineIcon","TextField","firebase","AddVoteEntryForm","props","delEntry","setState","show","updateEntry","state","index","handleIdChange","event","rank","entriesInVote","id","target","value","title","entry","entries","valid","duplicate","query","database","ref","googleId","on","snapshot","entriesRef","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport '../../component_style/Organizer.css';\r\nimport { TextField } from '@material-ui/core';\r\nimport firebase from '../../../firebase';\r\n\r\nexport default class AddVoteEntryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: true,\r\n            id: '',\r\n            title: '',\r\n            rank: '',\r\n            entries: [],\r\n            duplicate: false,\r\n            valid: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query = firebase.database().ref(`organizer/${this.props.googleId}/event/${this.props.event.id}`);\r\n        query.on('value', (snapshot) => {\r\n            const entriesRef = snapshot.val();\r\n            const { entries } = entriesRef;\r\n            this.setState({\r\n                entries,\r\n                rank: this.props.entriesInVote[this.props.index].rank,\r\n                id: this.props.entriesInVote[this.props.index].id,\r\n                title: this.props.entriesInVote[this.props.index].title,\r\n                valid: this.props.entriesInVote[this.props.index].valid,\r\n                duplicate: this.props.entriesInVote[this.props.index].duplicate,\r\n            });\r\n        });\r\n    }\r\n\r\n    delEntry = () => {\r\n        this.setState({\r\n            show: false,\r\n        }, () => {\r\n            this.props.updateEntry(this.state, this.props.index);\r\n        });\r\n    }\r\n\r\n\r\n    handleIdChange = event => {\r\n        this.setState({\r\n            rank: this.props.entriesInVote[this.props.index].rank,\r\n            id: event.target.value\r\n        }, () => {\r\n            let title = '';\r\n            const entry = this.state.entries[this.state.id];\r\n            if (entry) {\r\n                title = entry.title;\r\n            }\r\n            this.setState({\r\n                title,\r\n                valid: title !== '',\r\n            }, () => {\r\n                if (this.state.valid) {\r\n                    this.props.updateEntry(this.state, this.props.index);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.show && this.state.valid && !this.state.duplicate) {\r\n            return (\r\n                <div className=\"addEntry\">\r\n                    <br />\r\n                    <label className=\"rankingLabel\" id={this.props.index}>{this.props.entriesInVote[this.props.index].rank}.</label>\r\n                    <div>\r\n                        <TextField\r\n                            required\r\n                            label=\"Entry ID\"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value={this.state.id}\r\n                            onChange={this.handleIdChange}\r\n                        />\r\n                        <TextField\r\n                            disabled\r\n                            label=\"Title\"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value={this.state.title}\r\n                        />\r\n                    </div>\r\n                    <RemoveCircleOutlineIcon className=\"removeCircleOutlineIcon\" color=\"primary\" id=\"entryIcon\" onClick={this.delEntry} />\r\n                </div>\r\n            );\r\n        } else if (this.state.show && !this.state.duplicate) {\r\n            return (\r\n                <div className=\"addEntry\">\r\n                    <br />\r\n                    <label className=\"rankingLabel\" id={this.props.index}>{this.props.entriesInVote[this.props.index].rank}.</label>\r\n                    <div>\r\n                        <TextField\r\n                            error\r\n                            required\r\n                            label=\"Entry ID\"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value={this.state.id}\r\n                            onChange={this.handleIdChange}\r\n                        />\r\n                        <TextField\r\n                            disabled\r\n                            label=\" \"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value=\"Enter a Valid Entry ID\"\r\n                        />\r\n                    </div>\r\n                    <RemoveCircleOutlineIcon className=\"removeCircleOutlineIcon\" color=\"primary\" id=\"entryIcon\" onClick={this.delEntry} />\r\n                </div>\r\n            );\r\n        } else if (this.state.show && this.state.duplicate) {\r\n            return (\r\n                <div className=\"addEntry\">\r\n                    <br />\r\n                    <label className=\"rankingLabel\">{this.props.entriesInVote[this.props.index].rank}.</label>\r\n                    <div>\r\n                        <TextField\r\n                            error\r\n                            required\r\n                            label=\"Entry ID\"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value={this.state.id}\r\n                            onChange={this.handleIdChange}\r\n                        />\r\n                        <TextField\r\n                            disabled\r\n                            label=\" \"\r\n                            margin=\"dense\"\r\n                            className=\"entryFormText\"\r\n                            value=\"Duplicate Entry ID\"\r\n                        />\r\n                    </div>\r\n                    <RemoveCircleOutlineIcon className=\"removeCircleOutlineIcon\" color=\"primary\" id=\"entryIcon\" onClick={this.delEntry} />\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}