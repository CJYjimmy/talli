{"ast":null,"code":"import _classCallCheck from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chenjiayuan/CS3312/talli/talli-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddBallot.js\";\nimport React, { Component } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, Button } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport firebase from '../../../firebase';\nimport AddBallotEntry from './AddBallotEntry';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n\nvar AddVotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddVotes, _Component);\n\n  function AddVotes(props) {\n    var _this;\n\n    _classCallCheck(this, AddVotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddVotes).call(this, props));\n\n    _this.addEntry = function () {\n      var rank = 0;\n\n      for (var i = 0; i < _this.state.entries.length; i++) {\n        var item = _this.state.entries[i];\n\n        if (item.show) {\n          rank++;\n        }\n      }\n\n      rank++;\n\n      var newEntries = _this.state.entries.slice();\n\n      newEntries.push({\n        show: true,\n        id: '',\n        rank: rank\n      });\n\n      _this.setState({\n        entries: newEntries\n      });\n    };\n\n    _this.submitVote = function (event) {\n      event.preventDefault();\n      var hasError = false;\n      var numOfEntries = 0;\n\n      for (var i = 0; i < _this.state.entries.length; i++) {\n        var checkItem = _this.state.entries[i];\n\n        if (checkItem.show) {\n          if (checkItem.duplicate || !checkItem.valid) {\n            hasError = true;\n          }\n\n          numOfEntries++;\n        }\n      }\n\n      if (!hasError && numOfEntries > 0) {\n        var itemRef = firebase.database().ref(\"event/\".concat(_this.props.event.id, \"/ballots\"));\n        itemRef.once('value', function (snapshot) {\n          var nonDigitVoteSize = snapshot.child('count').val();\n\n          if (nonDigitVoteSize === '' || nonDigitVoteSize === null) {\n            nonDigitVoteSize = 0;\n          }\n\n          nonDigitVoteSize += 1;\n\n          _this.setState({\n            voteID: nonDigitVoteSize\n          });\n\n          itemRef.child('count').set(_this.state.voteID);\n\n          for (var x = 0; x < _this.state.entries.length; x++) {\n            var item = _this.state.entries[x];\n\n            if (item.show) {\n              var itemsRef = firebase.database().ref(\"event/\".concat(_this.props.event.id, \"/ballots/manual/vote\").concat(_this.state.voteID));\n              itemsRef.child(item.id).set(item.rank);\n            }\n          }\n\n          _this.setState({\n            entries: []\n          });\n\n          _this.handleClose();\n        });\n      }\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        entries: []\n      });\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false,\n      entries: [],\n      voteID: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddVotes, [{\n    key: \"updateEntry\",\n    value: function updateEntry(status, idx) {\n      var updateEntries = this.state.entries;\n      updateEntries[idx] = status;\n\n      for (var i = 0; i < updateEntries.length; i++) {\n        var item = updateEntries[i];\n\n        if (item.show && i !== idx) {\n          updateEntries[idx].duplicate = item.id === updateEntries[idx].id;\n        }\n      }\n\n      if (!updateEntries[idx].show) {\n        for (var _i = idx + 1; _i < this.state.entries.length; _i++) {\n          if (updateEntries[_i].show) {\n            updateEntries[_i].rank -= 1;\n          }\n        }\n      }\n\n      this.setState({\n        entries: updateEntries\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var entries = this.state.entries;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.state.open,\n        TransitionComponent: Transition,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Add Vote \"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Click the circle-add button to fill in each entry.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"addEntryForm\",\n        onSubmit: this.submitVote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, entries.map(function (val, idx) {\n        return React.createElement(\"div\", {\n          key: val.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(AddBallotEntry, {\n          event: _this2.props.event,\n          googleId: _this2.props.googleId,\n          entriesInVote: entries,\n          updateEntry: function updateEntry(status, index) {\n            return _this2.updateEntry(status, index);\n          },\n          index: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(AddCircleIcon, {\n        color: \"primary\",\n        id: \"entryIcon\",\n        onClick: this.addEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Cancel\"), '  ', React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return AddVotes;\n}(Component);\n\nexport { AddVotes as default };","map":{"version":3,"sources":["/Users/chenjiayuan/CS3312/talli/talli-app/client/src/components/OrganizerView/Dialogs/AddBallot.js"],"names":["React","Component","Slide","Dialog","DialogTitle","DialogContent","Button","AddCircleIcon","firebase","AddBallotEntry","Transition","props","AddVotes","addEntry","rank","i","state","entries","length","item","show","newEntries","slice","push","id","setState","submitVote","event","preventDefault","hasError","numOfEntries","checkItem","duplicate","valid","itemRef","database","ref","once","snapshot","nonDigitVoteSize","child","val","voteID","set","x","itemsRef","handleClose","handleOpen","open","status","idx","updateEntries","map","googleId","index","updateEntry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Slide, Dialog, DialogTitle, DialogContent, Button } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport firebase from '../../../firebase';\r\nimport AddBallotEntry from './AddBallotEntry';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport default class AddVotes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            entries: [],\r\n            voteID: '',\r\n        };\r\n    }\r\n\r\n    addEntry = () => {\r\n        let rank = 0;\r\n        for (let i = 0; i < this.state.entries.length; i++) {\r\n            const item = this.state.entries[i];\r\n            if (item.show) {\r\n                rank++;\r\n            }\r\n        }\r\n        rank++;\r\n        const newEntries = this.state.entries.slice();\r\n        newEntries.push({\r\n            show: true,\r\n            id: '',\r\n            rank,\r\n        });\r\n        this.setState({ entries: newEntries });\r\n    }\r\n\r\n    submitVote = event => {\r\n        event.preventDefault();\r\n        let hasError = false;\r\n        let numOfEntries = 0;\r\n        for (let i = 0; i < this.state.entries.length; i++) {\r\n            const checkItem = this.state.entries[i];\r\n            if (checkItem.show) {\r\n                if (checkItem.duplicate || !checkItem.valid) {\r\n                    hasError = true;\r\n                }\r\n                numOfEntries++;\r\n            }\r\n        }\r\n        if (!hasError && numOfEntries > 0) {\r\n            const itemRef = firebase.database().ref(`event/${this.props.event.id}/ballots`);\r\n            itemRef.once('value', (snapshot) => {\r\n                let nonDigitVoteSize = snapshot.child('count').val();\r\n                if (nonDigitVoteSize === '' || nonDigitVoteSize === null) {\r\n                    nonDigitVoteSize = 0;\r\n                }\r\n                nonDigitVoteSize += 1;\r\n                this.setState({ voteID: nonDigitVoteSize });\r\n                itemRef.child('count').set(this.state.voteID);\r\n                for (let x = 0; x < this.state.entries.length; x++) {\r\n                    const item = this.state.entries[x];\r\n                    if (item.show) {\r\n                        const itemsRef = firebase.database().ref(`event/${this.props.event.id}/ballots/manual/vote${this.state.voteID}`);\r\n                        itemsRef.child(item.id).set(item.rank);\r\n                    }\r\n                }\r\n                this.setState({ entries: [] });\r\n                this.handleClose();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ entries: [] });\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    updateEntry(status, idx) {\r\n        const updateEntries = this.state.entries;\r\n        updateEntries[idx] = status;\r\n        for (let i = 0; i < updateEntries.length; i++) {\r\n            const item = updateEntries[i];\r\n            if (item.show && i !== idx) {\r\n                updateEntries[idx].duplicate = item.id === updateEntries[idx].id;\r\n            }\r\n        }\r\n        if (!updateEntries[idx].show) {\r\n            for (let i = idx + 1; i < this.state.entries.length; i++) {\r\n                if (updateEntries[i].show) {\r\n                    updateEntries[i].rank -= 1;\r\n                }\r\n            }\r\n        }\r\n        this.setState({ entries: updateEntries });\r\n    }\r\n\r\n    render() {\r\n        const { entries } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog open={this.state.open} TransitionComponent={Transition} onClose={this.handleClose}>\r\n                    <DialogTitle> Add Vote </DialogTitle>\r\n                    <DialogContent>\r\n                        Click the circle-add button to fill in each entry.\r\n                        <br />\r\n                        <form className=\"addEntryForm\" onSubmit={this.submitVote}>\r\n                            {\r\n                                entries.map((val, idx) => {\r\n                                    return (\r\n                                        <div key={val.id}>\r\n                                            <AddBallotEntry\r\n                                                event={this.props.event}\r\n                                                googleId={this.props.googleId}\r\n                                                entriesInVote={entries}\r\n                                                updateEntry={(status, index) => this.updateEntry(status, index)}\r\n                                                index={idx}\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                            <br />\r\n                            <AddCircleIcon color=\"primary\" id=\"entryIcon\" onClick={this.addEntry} />\r\n                            <br />\r\n                            <br />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"buttons\"\r\n                                type=\"button\"\r\n                                onClick={this.handleClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            {'  '}\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"buttons\">Submit</Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}