{"ast":null,"code":"import _classCallCheck from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/NewEventForm.js\";\nimport React from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase.js';\n\nvar NewEventForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewEventForm, _React$Component);\n\n  function NewEventForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewEventForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewEventForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      eventData: {\n        name: '',\n        id: '',\n        location: '',\n        startDate: new Date(),\n        endDate: new Date(),\n        automate: false,\n        startVote: new Date(),\n        endVote: new Date()\n      } // Sends form data to Firebase and navigates to the next page\n\n    };\n\n    _this.AddEntries = function (event) {\n      var item = _this.state.eventData;\n\n      if (!item.id) {\n        item.id = Math.floor(Math.random() * 10000 + 1);\n      }\n\n      var itemsRef = firebase.database().ref('event/' + item.id + '/eventData');\n      item.startDate = item.startDate.toLocaleString();\n      item.endDate = item.endDate.toLocaleString();\n      item.startVote = item.startVote.toLocaleString();\n      item.endVote = item.endVote.toLocaleString();\n      itemsRef.push(item);\n\n      _this.props.setEvent(item.id);\n\n      _this.props.handler(_this.props.orgViews.ADD);\n    };\n\n    _this.toggleAutomation = function () {\n      var oldData = _this.state.eventData;\n      oldData.automate = !_this.state.eventData.automate;\n\n      _this.setState({\n        eventData: oldData\n      });\n    };\n\n    _this.handleEventChange = function (field) {\n      return function (event) {\n        var oldData = _this.state.eventData;\n        oldData[field] = event.target.value;\n\n        _this.setState({\n          eventData: oldData\n        });\n      };\n    };\n\n    _this.handleDateChange = function (field) {\n      return function (date) {\n        var oldData = _this.state.eventData;\n        oldData[field] = date;\n\n        _this.setState({\n          eventData: oldData\n        });\n      };\n    };\n\n    _this.cancelAddition = function () {\n      _this.props.handler(_this.props.orgViews.MAIN);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewEventForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /**\n       * TODO: Cleanup this div and replace <input/>'s\n       */\n      console.log(this.props.user);\n      return React.createElement(\"div\", {\n        className: \"newEventForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Create a new event\"), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.AddEntries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Event Details\"), React.createElement(TextField, {\n        required: true,\n        label: \"Event Name\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.name,\n        onChange: this.handleEventChange('name'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"ID (auto if blank)\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.id,\n        onChange: this.handleEventChange('id'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        label: \"Location\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.location,\n        onChange: this.handleEventChange('location'),\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        required: true,\n        label: \"Start Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startDate,\n        onChange: this.handleDateChange('startDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        required: true,\n        label: \"End Date\",\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endDate,\n        onChange: this.handleDateChange('endDate'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.eventData.automate,\n          onChange: function onChange() {\n            return _this2.toggleAutomation();\n          },\n          value: this.state.eventData.automate,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }),\n        label: \"Automate Voting Time Period?\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), this.state.eventData.automate && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Start Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.startVote,\n        onChange: this.handleDateChange('startVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: \"votePeriodText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"End Voting:\"), React.createElement(DateTimePicker, {\n        margin: \"dense\",\n        className: \"entryFormText\",\n        value: this.state.eventData.endVote,\n        onChange: this.handleDateChange('endVote'),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(CalendarIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"button\",\n        onClick: this.cancelAddition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: \"buttons\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }]);\n\n  return NewEventForm;\n}(React.Component);\n\nexport { NewEventForm as default };","map":{"version":3,"sources":["/Users/daveworthington/Documents/GaTech/Junior Design/Talli/talli/talli-app/src/components/OrganizerView/NewEventForm.js"],"names":["React","DateFnsUtils","MuiPickersUtilsProvider","DateTimePicker","DatePicker","Typography","TextField","InputAdornment","Button","FormControlLabel","Switch","CalendarIcon","firebase","NewEventForm","state","eventData","name","id","location","startDate","Date","endDate","automate","startVote","endVote","AddEntries","event","item","Math","floor","random","itemsRef","database","ref","toLocaleString","push","props","setEvent","handler","orgViews","ADD","toggleAutomation","oldData","setState","handleEventChange","field","target","value","handleDateChange","date","cancelAddition","MAIN","console","log","user","shrink","startAdornment","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker, DatePicker } from 'material-ui-pickers';\nimport { Typography, TextField, InputAdornment, Button, FormControlLabel, Switch } from '@material-ui/core';\nimport CalendarIcon from '@material-ui/icons/DateRange';\nimport '../component_style/NewEventForm.css';\nimport '../component_style/Organizer.css';\nimport firebase from '../../firebase.js';\n\nexport default class NewEventForm extends React.Component {\n    state = {\n        eventData: {\n            name: '',\n            id: '',\n            location: '',\n            startDate: new Date(),\n            endDate: new Date(),\n            automate: false,\n            startVote: new Date(),\n            endVote: new Date(),\n        }\n    }\n\n    // Sends form data to Firebase and navigates to the next page\n    AddEntries = (event) => {\n        let item = this.state.eventData;\n        if (!item.id) {\n            item.id = Math.floor((Math.random() * 10000) + 1);\n        }\n        const itemsRef = firebase.database().ref('event/' + item.id + '/eventData');\n        item.startDate = item.startDate.toLocaleString();\n        item.endDate = item.endDate.toLocaleString();\n        item.startVote = item.startVote.toLocaleString();\n        item.endVote = item.endVote.toLocaleString();\n        itemsRef.push(item);\n        this.props.setEvent(item.id);\n        this.props.handler(this.props.orgViews.ADD);\n    }\n\n    toggleAutomation = () => {\n        var oldData = this.state.eventData;\n        oldData.automate = !this.state.eventData.automate;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    handleEventChange = field => event => {\n        var oldData = this.state.eventData;\n        oldData[field] = event.target.value;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    handleDateChange = field => date => {\n        var oldData = this.state.eventData;\n        oldData[field] = date;\n        this.setState({\n            eventData: oldData,\n        });\n    }\n\n    cancelAddition = () => {\n        this.props.handler(this.props.orgViews.MAIN);\n    }\n\n    render() {\n        /**\n         * TODO: Cleanup this div and replace <input/>'s\n         */\n        console.log(this.props.user);\n        return (\n            <div className='newEventForm'>\n                <Typography variant='h4' align='center' gutterBottom>Create a new event</Typography>\n                <form className='eventForm' onSubmit={this.AddEntries}>\n                    <Typography variant='h6'>Event Details</Typography>\n                    <TextField\n                        required\n                        label=\"Event Name\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.name}\n                        onChange={this.handleEventChange('name')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <TextField\n                        label=\"ID (auto if blank)\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.id}\n                        onChange={this.handleEventChange('id')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        label=\"Location\"\n                        margin=\"dense\"\n                        className=\"entryFormText\"\n                        value={this.state.eventData.location}\n                        onChange={this.handleEventChange('location')}\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <br /> <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            label=\"Start Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.startDate}\n                            onChange={this.handleDateChange('startDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <DatePicker\n                            required\n                            label=\"End Date\"\n                            margin=\"dense\"\n                            className=\"entryFormText\"\n                            value={this.state.eventData.endDate}\n                            onChange={this.handleDateChange('endDate')}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CalendarIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <br /> <br />\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={this.state.eventData.automate}\n                                onChange={() => this.toggleAutomation()}\n                                value={this.state.eventData.automate}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Automate Voting Time Period?\"\n                        labelPlacement=\"start\"\n                    />\n                    {this.state.eventData.automate &&\n                        <div>\n\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Typography className=\"votePeriodText\">Start Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.startVote}\n                                    onChange={this.handleDateChange('startVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                                <Typography className=\"votePeriodText\">End Voting:</Typography>\n                                <DateTimePicker\n                                    margin=\"dense\"\n                                    className=\"entryFormText\"\n                                    value={this.state.eventData.endVote}\n                                    onChange={this.handleDateChange('endVote')}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <CalendarIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </div>\n                    }\n                    <br /> <br />\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"button\"\n                        onClick={this.cancelAddition}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className=\"buttons\"\n                        type=\"submit\"\n                    >\n                        Next\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}